// Code generated by go-bindata.
// sources:
// bundled_scripts/idrac.py
// bundled_scripts/idrac.toml
// bundled_scripts/ilo.py
// bundled_scripts/ilo.toml
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _idracPy = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x1b\x6b\x53\xe2\xc8\xf6\x3b\xbf\xa2\x2f\x53\x5b\x81\x5a\x0d\xe0\x63\x76\x86\x3b\xcc\x16\x42\x74\xa8\x15\xb4\x00\x67\x67\xcb\x6b\xa5\x62\x68\x34\x6b\x48\xd8\x74\x10\xb9\x16\xff\xfd\x9e\xd3\x9d\x47\x77\x12\x50\xf4\x0e\x53\x65\x92\xee\xf3\xea\xf3\xea\x73\x3a\x99\x0f\xff\xaa\x2d\x58\x50\xbb\x75\xbc\x1a\xf5\x1e\xc9\x7c\x15\xde\xfb\x5e\xa9\xe4\xcc\xe6\x7e\x10\x92\xbf\x19\x3c\x44\xf7\x3e\x8b\xef\xd8\x2a\xb9\x5d\x2c\x9c\x49\x69\x1a\xf8\x33\x62\xfb\xf3\x15\x89\x46\x27\x94\xce\xf1\x59\xcc\x3c\xcd\x5c\x9d\x86\x01\xa5\xf1\xb4\xe1\xd2\x19\xf5\xc2\x31\x0e\x59\x8c\x18\xe3\x84\x5f\x40\xff\x59\x50\x16\x32\x81\x18\x3f\xe9\x73\xcb\x7e\xb0\xee\x28\xd3\x17\x81\xeb\x3a\xb7\x87\x3a\x7d\xb2\xe9\x3c\x74\x7c\x8f\xc5\x34\x7b\x1e\xa3\xf6\x22\xa0\x43\x81\xf3\xa7\x15\x78\x8e\x77\x57\x2a\x8d\x3a\xdf\x8c\x7e\x9b\xb4\x48\xf9\x3e\x0c\xe7\xcd\x5a\x8d\xd9\xf7\x74\x66\x31\x7d\x32\x0b\xa7\xba\x1f\xdc\xd5\x96\xb7\x74\x56\x5b\x32\xdb\x99\xd5\x1a\x35\xf8\xbb\x2f\x20\x6a\x07\xe5\xd2\x8f\xfe\xf9\x60\x64\x8e\x10\xfb\x39\x42\x5f\x2e\x97\xfa\xf2\x90\x23\x1e\xd4\xeb\x87\xb5\xfa\x71\x8d\xf9\xd6\x7c\x1f\x94\x47\x5d\x7f\x4e\xd7\x31\xd6\x9f\x23\x63\x20\x23\xc6\x7c\x41\x1b\x88\x20\x58\x33\x24\x72\x54\xab\x7f\x06\xe5\x2f\x66\x34\xb0\x70\x4d\x12\x89\x7e\xbb\x90\x46\x56\xf6\x99\xe5\x81\xec\xfc\xaa\x3f\xb1\x49\x42\x60\xd0\x30\x4f\xda\x23\xa3\x90\x04\x75\x5d\xdd\xf6\x67\x9b\x97\x5f\xfb\x85\x01\xa1\x0f\xe4\x8c\x7a\x34\x70\x6c\xc2\xc9\xef\xdb\x81\x35\x0d\xe9\x84\xe0\x1a\xc8\x8c\x32\x06\x76\x29\x8d\x2e\xda\x97\xa6\x31\xb8\xea\x0b\x91\xcd\xb1\xd1\xbf\x3c\x6f\x8f\x91\xb1\xa6\x69\x5f\x7e\x87\x35\x93\x47\x1a\x30\x58\x5c\xab\xdc\xd0\xeb\xe5\xdf\xbf\x96\xbe\xb0\xa6\x11\xe9\x0c\x3d\xc4\x63\x4d\xd6\x2a\xbf\x52\xc9\xe5\x08\x63\xc9\xac\x56\xd6\xae\x85\xfa\xfd\x54\xb3\x26\x93\x00\xa4\x05\x9f\x48\x91\x61\x3d\x39\xf4\x17\x54\x9b\x22\xd3\x3c\xee\xcb\xa6\x2d\x7f\x2d\x11\x02\x2b\xff\x46\xad\x09\x0d\xf0\x01\x1e\x61\x15\xcd\xb6\x8d\xd3\x84\x35\x67\x0b\x16\x5e\x79\x30\xc9\x42\xcb\x9b\xb4\xca\x61\xb0\xa0\xe5\xaf\x3b\x33\xaa\x19\xd1\x3d\xfd\x52\x4b\xe9\x4b\x0c\xc7\xfe\x46\x66\xcf\xb0\x56\xb0\x2a\x86\xa8\x09\x01\xb7\x16\x14\xc6\x7e\x82\x0d\xf3\xcd\x21\x65\xfe\x22\xb0\xe9\xd5\xb0\xb7\x99\x50\x10\x01\x71\x12\x19\x2c\x49\x96\xbe\x70\xa3\x5e\x77\x23\x25\x4c\x33\xcd\x67\xfc\x1b\x49\x93\xa0\x48\x64\x86\x74\xee\xae\x62\x31\x63\xbd\x0a\xb3\xbf\x4a\x81\xb2\x93\xd4\x02\xdf\xa5\x35\xcb\xf3\xbd\xd5\xcc\x5f\xb0\x48\x89\x11\x31\xc1\xb2\x96\xe3\x19\xa9\x66\x44\x5d\x6a\x87\x7e\x30\xa2\xa1\x24\x8b\x3c\x43\x06\xd6\x8c\xb6\xca\xa6\x09\xf1\xe6\xc1\x2d\x83\x04\x87\xfa\x62\xd1\x7c\xa2\xaf\x18\x21\x65\x59\xc0\xe0\x4b\x4d\x76\x28\xf0\xae\x13\x7f\xb2\x4a\x24\xa2\x5e\x33\xf1\x85\x8c\x38\x17\x90\x42\x67\xce\x7f\xa9\x21\xf9\x4d\x06\xa4\x6f\x3d\x45\xd9\x9a\xa1\x5f\x3c\x99\x34\x7a\x4a\x44\x94\x21\x12\x29\xb3\x4c\x51\x44\x21\x15\xde\xc5\x71\xff\xb5\x04\xd9\xa1\x54\xea\xb7\x3b\xe6\xe5\xd0\x38\xed\xfd\x30\x4f\xce\xdb\x9d\x3f\xce\x7b\xa3\x31\x64\x8e\x6b\x4e\x4d\x3b\xae\xc3\xbf\x23\x6d\x8f\x68\x87\x87\xc7\xf5\x8f\xa7\x78\x57\xaf\x7f\xfe\xf4\xdb\x47\x71\x87\xbf\xe4\xae\x83\x77\x07\xf5\xa3\xc6\xf1\x21\xde\x35\x8e\x3e\x37\x0e\x60\x56\x50\xaa\x83\x99\x05\xa5\x53\xe3\x14\x7e\x1c\xa2\x7d\xfa\xf9\x40\xe0\x1f\xd4\x3f\x89\xbb\xae\xd1\xee\x1e\x74\x04\x5c\xbb\x7b\xd4\x05\xfc\x9b\xd2\xc8\x18\xf6\xda\xe7\x05\x02\x0e\x7c\x8f\x02\x28\x82\x0f\xfc\x90\xb4\x1f\x2d\xc7\xb5\x6e\x5d\x8a\x03\x3f\x9e\xf8\x3f\xbc\xdd\xc7\x1f\xde\x5c\x5f\x79\x0f\x9e\xbf\xf4\x6e\x52\xf1\xc5\x12\x84\x90\x48\x63\x34\xa7\xb6\x33\x75\xe8\x04\x41\xfe\xfa\xa3\x51\xef\x74\xb9\xac\x07\x87\x47\xc7\x1f\x7f\xfb\xf4\xb9\x2e\x98\x79\x9c\x07\x04\xf2\x09\x25\xa7\x8e\xeb\x42\x56\x3e\x59\x91\x0b\xdd\xd0\xfb\x3a\x97\xb9\xd4\x35\xbe\xf7\x3a\x86\xd9\x1b\x9c\x5e\xc8\x39\xf9\x99\xb3\x2a\xcf\x7c\xd8\x04\x4c\xf4\xbf\x72\x93\x94\xcb\x42\x80\x32\x0d\xef\x69\xe0\xd1\x90\xc1\xe0\xf5\x4d\x34\x38\xa3\x33\x3f\x58\xc9\x23\x53\xe7\x36\xa0\xa6\x7d\x6f\x79\x1e\x10\xb1\xad\x60\xa2\x20\xcc\x03\xdf\x86\x50\xf1\x03\x65\x74\xe2\xb0\x07\x65\x80\xc1\xce\x62\x81\x0c\x8b\xd9\x2d\x0d\x64\x29\xa6\x4e\x30\x5b\x5a\xc0\x21\xda\x36\xe4\xb9\x5b\xc7\x67\x99\xf1\x75\xc9\x18\x7f\x33\x86\x03\x63\x5c\xb4\x4e\xcb\x96\xd1\x8b\x97\xcd\xe6\x94\x4e\x70\x60\x21\xcc\x43\xc4\xc0\x76\x71\xd6\xa5\xcb\xe1\x45\xc7\x18\x8d\x2e\x86\xaf\xd6\x6f\xcc\x88\xfb\x8d\x18\xb2\x7d\x48\x2b\xc9\xd0\xba\xd4\x37\xfa\x17\xc3\xbf\x5e\x4f\x11\x42\x58\x25\xa8\xf2\x58\x97\x4e\x7b\x27\x43\xc3\xec\x7c\x6b\x0f\x06\xc6\xb9\xd9\x69\x0f\xbb\x79\xe2\x1f\x48\x76\x91\x7b\x42\x07\x04\xf2\x30\x59\x82\x46\x60\x8a\x2c\xbc\x05\x83\xa1\x8a\xd3\x1d\xb6\x3b\x64\xe2\x53\xe6\x69\x21\x01\x6b\x3f\x3a\x13\x4a\xc2\x7b\x07\x0a\x32\x6f\xea\x93\x15\x0d\xab\xfa\xcb\xa6\x7c\x8b\x2d\x40\x94\x44\xfd\xdd\xde\xe8\x8f\xf7\xe8\x69\x93\xfb\x31\xd7\x0f\x55\xd0\xe2\x55\xa0\xda\x76\x53\xc9\xba\x54\x9a\xd0\x29\xf1\xfc\x60\x66\xb9\x20\x90\x09\xde\x69\x46\xfb\x4e\x45\xba\xaf\x36\x39\x5f\x69\x04\x96\x27\x3d\xe9\x8b\xf9\x9c\x06\x95\xaa\x1e\xc0\x0e\x04\xbb\x47\x45\xe3\xd9\xa5\xa9\x55\x39\x5e\x40\xc3\x45\xe0\xc9\x08\xa5\x52\x69\x73\x3d\x0d\x81\x89\x39\xcb\x5c\x8a\xb2\x99\x55\x8a\xcb\xe9\x2a\x10\xb1\x5d\x0b\x64\xe9\x4d\x02\xcb\x36\x82\xc0\x0f\x2a\x46\x5c\x8b\x47\x22\xcf\x2d\xce\x2c\x82\x43\xa5\x54\xfc\xdb\xbf\x61\xc3\x82\x79\x0e\x80\xeb\x37\x4d\xc7\x73\x42\xd3\xac\xc0\x96\x37\xdd\x23\xf7\x3e\x0b\xf7\x08\xe8\x31\xd8\xe3\xf8\x4b\x3f\x98\x44\xe4\xf0\x87\x40\x3a\xc2\x80\x0e\xf0\xa2\x4e\x20\x1a\x4c\xe0\x45\x9d\x88\x29\xc1\x64\x7c\x9b\x4a\x10\x2c\x3c\x13\xea\x5f\xd8\xc2\x26\x91\x10\x5c\x62\xee\x35\x7b\x24\xde\x89\x5b\x5a\xe0\xfb\x61\x6d\x02\x1b\xb5\x26\x09\xa4\x56\x48\x71\x77\xc1\xa0\xc2\x78\x5e\x8b\x7d\xb1\xac\x4f\xd1\xc4\x61\x25\x91\xbd\x9a\x60\xdf\x61\x45\x0d\x3b\xe3\xc4\xc4\x8a\x06\x45\x87\x8b\x8e\x7f\x1a\x95\x14\x2a\x2a\xae\x61\x7a\x53\x79\x1d\xb3\x48\x50\x84\xe5\x45\x89\xd5\x12\x9d\x8f\x0e\x85\x54\xe0\xcc\x2b\x5a\x4d\xab\x92\x5f\x09\x5c\xe0\xaf\xb4\x52\x05\x57\x5d\x56\x4b\x7d\x54\x41\x51\xda\x96\xba\x10\x15\x20\xd1\x60\x7c\x93\x65\x95\xd6\x12\xad\x83\xe3\xe3\x74\x36\xd5\x40\xe4\xc4\xc6\x58\x87\x76\x46\x28\xd2\x84\xd2\x62\x62\x62\xed\xa6\xae\x1a\xc5\xd5\xb2\x36\xd0\xf2\x36\xc8\x08\x21\x54\xdc\x8a\xae\x92\x0c\x55\xc9\x55\x53\x96\xc2\x4f\x50\x17\x31\xaa\xe4\x13\xe5\x72\x79\x1c\xac\x48\x08\x85\x35\x20\x28\x0d\x12\x0e\xce\x81\x3d\x77\x96\x05\xd6\x97\x04\x65\x25\xb7\x16\x73\xec\x84\x80\xb5\x80\xad\xd7\x0b\x1d\x9b\x57\x62\x3a\x64\x9f\x10\x3c\x31\xbc\xb7\x42\xb2\xa4\x90\x58\x30\xad\x30\x50\x24\x34\xcd\xde\x0a\x98\x30\xcc\x43\x3c\xb7\xe0\x22\x31\x61\x27\xa4\x20\xbd\x90\x47\xc8\x2f\x13\x30\x0e\x19\x8d\xce\x89\x4d\x83\x10\x4a\x0a\x20\x4d\x75\xd2\x06\xf4\xa9\xef\xba\xfe\x12\x25\x89\xb3\x02\x59\x42\x0d\x01\x4f\xfb\x28\x7e\x42\x89\x8b\xc8\x45\x23\xf7\xbc\xc6\x24\xd6\x9d\xe5\x78\xba\xbc\xec\xd4\x60\xe0\xac\x69\x92\x81\x05\xe7\x8c\xa4\xea\x1f\xc4\xb3\xf2\xca\x8f\x75\xd1\xaa\x24\xe1\xbd\xa7\x06\x74\xc6\x8c\x90\x92\x9d\xe9\xaa\x75\x6a\xb9\x2c\x43\x46\x88\xcc\x5a\xcf\xca\x28\xfe\xb4\x8e\xef\x85\xa0\xed\xfd\xf1\x6a\x4e\xb5\x26\xd1\xac\xf9\xdc\x8d\x54\xcf\x9b\xcd\x5f\xa1\x47\xf8\x37\xd4\x37\x01\xa3\x61\xeb\x6a\x7c\xba\xff\x49\x53\x69\xaf\x8b\x5c\xd6\xc1\xd4\x1e\x92\x40\xf7\x1f\x9a\x0a\x34\x4c\x04\x3a\xf4\x34\xe1\x82\x41\xda\x81\x8d\xa1\xd5\x22\x47\xf5\x46\x33\x27\x58\x60\x39\x8c\xca\xf9\xb5\xdc\x46\xe5\x53\xbc\xd7\x49\xcf\xe3\x66\xe5\xc9\x0e\xe3\x97\x80\xa1\x63\xad\xe8\xe5\x6a\x69\x2b\xa5\x1c\xaf\xf2\x08\x16\xca\xe7\x9a\x04\x3a\x19\x1f\x92\x7e\x93\x3c\xaf\xff\xe3\x45\x69\x1f\x1f\xca\x85\x59\x26\xe1\xa1\x87\xf4\x29\x4c\xc2\x61\x2f\x07\x94\x31\x55\x2a\x21\x5f\x10\x33\xe7\x16\x2c\xae\x45\xb4\x67\xb6\xc6\x06\xa1\x06\xd7\x53\x6b\xe1\x86\x69\xec\xb6\xa2\x53\x98\x1c\xaa\xeb\xf0\x0d\xe1\xfa\x26\x3b\xe1\x71\xfd\xc6\x79\x43\x88\x58\xd5\xa7\x0e\x64\x7a\x89\xab\x62\x34\x09\x53\x35\x49\x86\x17\x02\x98\x48\x0f\x02\x28\x20\xe9\x93\xe3\xc9\x24\x74\x27\x84\x78\x83\xf1\x4a\xf5\x66\x47\x93\x68\x8a\x49\x12\x2b\xec\xc1\x03\xe3\x06\x8a\xf8\xe0\xa0\xb6\xd5\x34\xb1\x49\x88\xb6\xa7\xe9\x7f\xfb\x8e\x57\x91\xd6\x52\x2d\xb0\xd4\x06\x43\x45\x59\x58\xa8\xb1\x24\xca\x17\xf3\x8e\x86\x26\xa4\x06\x6a\x62\xfa\xa9\x38\xb8\x20\x53\x6c\x17\x41\x94\x12\x27\xf4\xd1\xb1\xc5\x3c\x28\xae\xa8\x13\xe1\x60\xfc\x5c\xb0\x45\x14\x0a\xba\xbc\x37\x6b\xdd\x4e\xaf\x6f\x8e\x56\x2c\xa4\xb3\xef\x0e\x5d\x46\x05\x0e\x3f\x86\x31\xbd\x06\xe0\xaa\x67\x5d\xbf\x90\x72\x06\x43\xe4\xa7\x7f\xf8\x29\x58\xe4\x64\xeb\xa4\x3b\x8d\xd5\x0a\x63\x3d\x80\x67\x70\xcd\xa2\xe7\xb4\x1c\x39\xe4\x5e\x66\x00\x4f\xfc\xf2\x63\xb0\x61\xa7\x83\xb1\xd4\x62\x24\x2e\xd5\xa0\xfe\x9f\x60\x79\x87\xba\xe0\x6e\x6a\xb9\x6e\xe5\x1f\x31\x1b\x27\x14\x01\x94\xfa\x66\x3e\x4d\xf4\x3c\x00\x01\xb8\x10\xb6\x07\xb6\x84\x44\x0d\x3e\x09\x1b\x4a\xc6\x56\x71\x92\x48\x4b\x64\xa1\x97\xc2\x48\x8f\xb8\x5e\xd7\x6f\x44\xf4\x28\x1e\x02\x48\x12\x4e\xb2\x32\xa2\xf5\x2d\x6f\x31\xb5\x6c\xf0\x1a\x1a\x68\x92\xa3\x55\xb9\x07\xe9\xa2\x1e\x49\x0b\xd7\x32\x24\x35\x5b\x87\x5a\xba\x5c\x96\x80\xdf\xc8\x1a\x57\xb5\x99\xa7\xac\x76\xa5\xf6\xe7\xfb\xd6\x06\x86\x1b\x99\x75\xee\x21\xf1\x3a\x6c\x44\x03\xf4\xf4\xb1\x75\x17\x33\x56\x99\xc6\x66\x54\x19\xa2\x51\xc1\x40\xd9\x63\x85\xd4\xc0\x52\xfc\x5c\x6b\x0a\xae\x76\x03\xe2\x2a\x23\xd9\x80\xbb\xd6\xb2\xed\x0a\xc7\x79\x9b\x4e\xcf\x9d\x29\xb5\x57\xb6\x4b\x71\xc7\x0c\xa0\x6c\xa0\xc1\xf7\x88\xa8\xb2\xde\xbc\x10\x72\xa3\xfe\x0e\x01\x4e\x7a\x17\xa3\x88\xe3\x08\x54\xea\xdd\xbd\xc4\x37\xf5\x6d\xce\x35\x7d\x94\x5b\x23\x09\x43\x4e\x6a\xc9\xf1\x47\x2e\xa9\x25\x05\x21\x82\x41\x63\x55\x91\x6a\xbf\x0f\x84\xea\x77\x3a\xe9\x2c\x20\x00\xbd\xb0\xdf\xee\x44\x47\x85\x4d\x72\x72\xd2\xec\x74\x9a\xdd\x6e\xd3\x30\x9a\xa7\xa7\xcd\x7a\x3d\xc1\x09\x83\x55\x33\x53\x12\xdb\x89\x8e\x0a\xf4\xb3\xdd\x17\xb3\x9c\xb5\xec\xc6\x9b\xea\x0a\x7f\xe2\x05\x0a\x69\x87\xa0\xd0\xdb\x45\x48\xc5\x8e\x53\x20\x0e\xb6\xc0\xf2\x46\x09\xa3\x45\x60\x1b\xfb\xd9\x6a\xb6\x0a\x82\xb1\xeb\xe6\xc7\x1b\x74\xfe\xa2\x83\xbf\x7c\x41\x54\x20\x47\xda\xdd\x66\xac\x82\x96\xe6\x5c\x73\xa6\xb9\x0c\xfc\xc9\xc2\x0e\xf1\xe0\xb5\x09\x09\x27\x04\xb8\x61\x95\x18\x91\xb5\x49\xa3\x7e\x46\x8e\x2e\xc9\x8f\xe3\x83\x7a\xad\x77\x78\x5c\x27\xc1\xa0\xdb\x21\xfb\x3b\x99\x0f\x99\xbf\xd9\x80\x92\x7c\xff\x07\xd3\x45\xa2\x14\x18\x0f\xf5\xce\xa7\x33\x18\x33\xb5\x92\xc2\x1f\x56\x38\xb3\x04\x5e\x67\x50\x1f\x87\xb2\xd3\x4b\x84\x5d\xea\x55\x66\x55\xac\x69\x1b\x58\x91\xc6\x7c\xf2\xb0\xf8\xb3\x21\x8f\x38\xde\x82\xe6\x2d\x3d\xd3\xa1\x0a\x87\xee\x03\x68\x15\xae\x47\x23\x51\x25\x33\x9b\xe5\xea\x13\x0e\xa3\xba\x03\x3f\x36\xaa\xf0\x09\xc5\x21\xae\xb0\x65\x0a\x17\x1e\x6c\xff\xee\x6a\x8f\x38\xd0\x56\x51\xd8\xfa\x45\xab\x85\x1e\x41\x35\x06\x1e\x0d\xa3\x73\x0b\x6b\x04\x32\x75\xa8\x3b\xe1\xfa\xc0\xe3\x1c\x68\x46\x7c\x89\x1a\xf4\x66\xf7\xd6\x23\xef\xf1\x42\xeb\x81\x22\x39\xfe\xf6\x52\xb2\x68\x4d\x68\x30\xdb\x25\x14\xd8\x41\x9c\xb8\xb5\xb2\x47\x5f\xa9\xf1\x5d\xc0\x2d\x9f\x39\x77\xd6\xad\x13\x96\x37\x18\x33\x21\xd2\x20\x67\xb7\x73\x26\x63\x33\x5a\x00\xca\x92\x93\x33\xf9\xa7\x35\xea\x7d\x68\x8c\x80\x4a\x9d\xf4\x91\x4c\xbe\x64\x04\x10\x0e\x03\x20\x5b\x60\xce\x90\x4a\x22\x4c\x21\x95\xb3\x98\xd1\x26\x90\xa3\x08\xe4\x68\x33\x08\xc8\x70\x16\xcb\x52\x00\xb3\xce\xf9\x36\x9e\xcb\x45\x0a\xd0\x1f\xe8\x8a\x6d\xf0\x6d\xb6\x41\xcb\xf1\x2f\xd6\xb6\xa0\x74\xcd\x6e\x0a\xa1\x6e\x03\x6a\x3d\xa8\x9d\x45\xce\x18\x32\xb5\x4d\x0e\x10\x79\x3b\x1f\x55\xbd\x7d\xba\x8c\xf7\xda\x82\x9d\xe9\xd4\x9a\x39\xee\x2a\xda\x45\x9b\xa4\x71\xac\xd7\xf5\x83\xdf\x36\x27\xb3\x47\xa9\x26\xda\x35\x95\x29\xbc\xde\x9f\xcc\x84\x28\x45\xf9\x1f\x66\x4a\xbb\x34\x11\x83\x5e\x67\x97\x0e\x22\x02\x7f\x53\xfb\x10\xe3\xfe\xe4\xde\x21\xa9\x56\xd2\xec\x8d\x9e\x2d\xec\xc6\x1b\x00\xb5\xa5\x90\x4f\x30\x71\x57\x4d\x4a\x99\x5c\x6a\xca\x6e\xf3\xb9\xa4\x1d\xe7\x64\x75\xdf\x4d\xa6\x63\x3f\xce\xe6\xe1\x92\x6a\xd6\xac\xe3\xa6\x8e\x11\xef\xcc\xd9\xd4\x14\xbd\xce\x81\xbf\x7b\x99\x71\xf9\xd0\x9f\x3f\x64\x00\xe2\xd7\x0a\xfc\x9a\x99\x2b\x38\xde\x87\xbb\x14\x68\x9d\x13\x8c\xc5\x7b\x55\x3c\xa0\x1c\xbc\x27\x50\x72\x6d\x99\xbe\x14\x2b\xec\x98\x5f\xe9\xc5\x9d\xcb\xab\x5d\xbc\x38\x02\x7f\x93\x17\xc7\xb8\x3f\xbd\x03\x66\x0b\xf7\x2d\x3e\x5c\x50\x71\xbd\xd4\x1a\x16\xf4\x66\x42\xf7\x99\x04\x08\xb4\xe8\x13\x5a\xc3\x2b\x38\x5e\xd9\x9a\x17\xb9\x3f\x6d\x92\xa2\xe7\xe1\x77\x0d\x36\xed\x75\xb3\x89\x91\xab\x43\xed\x90\x45\xc5\xa5\xe9\x5a\xf5\x7a\xbf\x71\xb3\xf1\x20\x4d\xa4\xd0\xca\x77\xcb\x5d\x88\xfc\xb9\x07\x05\x2e\x48\xcf\xef\xab\x2f\x84\x71\xa4\xfb\xd8\x99\xd5\x58\x93\x3b\xa9\xc2\x98\xd2\x78\x2c\xc1\x1c\xaa\xe9\x5d\x9d\x4b\xc7\xf5\xed\x87\x11\xa7\x56\xb8\x63\xc4\x4a\xc9\x4c\x6a\xfc\xdd\xe9\xbb\x04\x18\xf0\x16\xfa\x62\x7a\x19\x47\x67\x87\x93\x7c\xad\x14\x6b\x25\xee\x23\x75\xca\x51\x2f\xde\x9d\xbf\x27\xe2\xfb\x9c\xc2\x2e\x41\x9f\x62\xbc\x29\xee\x25\xf4\x9f\x1e\xfa\x5c\x6d\xd7\x09\xd0\x36\x07\xd4\xf8\x31\xd5\xe6\x53\xcf\xb7\x87\xe5\xa6\x23\xab\x62\xeb\xe7\xe7\xdf\xc1\x39\x7b\x62\xf5\x1a\x96\xd9\x20\xc0\x37\xdb\xef\x8a\x81\x11\x12\xd8\x29\xee\xde\x1f\xf8\xbb\x05\xfb\x7a\xfb\xa6\xc0\xe1\x6e\xe4\xb0\xe3\xdf\x9a\x6c\x3e\xc4\x49\x0f\x2c\x10\xd0\x44\x0d\x56\xf0\x8f\xe9\x78\xe6\xed\x2a\xa4\x4c\x7e\xfd\x0c\xe3\xd1\x56\xa0\x80\xf0\x2f\x23\x94\x91\x58\x70\x6c\x82\xeb\xd5\x4d\x04\x48\x8d\x34\xea\x07\x47\xea\x25\xd7\xd0\x22\xe4\x4e\xe5\xed\xe5\xfd\x8a\x39\xb6\xe5\x76\x61\x41\xbb\x24\x8b\x2c\xde\x9b\x52\x46\x8e\xc8\x4f\x4e\x1c\xdc\xbc\x6f\xa8\x7a\xd3\x38\xdf\xd6\xdf\xbc\xf3\x6c\x5b\xad\x50\xe2\x53\xf6\x6d\xe9\x4b\x16\x4c\x8d\x88\xb7\x05\x57\x94\x56\xb6\xc4\x56\xd1\xdb\x4b\xd5\xbb\xb7\xe8\x47\x43\xbe\xda\x86\x44\xd2\xf3\x4e\x10\x3f\xaf\x9e\x94\x4f\xe1\xd9\xfb\x4e\x7c\x38\x05\xb1\x75\x6f\x63\xe4\xfa\xe1\xdb\xe8\x03\xe2\x16\xba\xe8\x7d\x40\x37\xfe\xce\xbd\xa2\x7c\x87\x54\x55\xc0\x5e\x3a\x8e\x4e\xe1\x78\x16\xbf\x51\x0e\x53\x37\xe5\xa6\x2c\xe6\xf6\xd7\x03\x22\x4f\xc9\x23\x72\x9e\xd2\xb4\x2c\x35\x5c\xfb\x4d\x9c\xaf\xe0\xa1\xca\x8f\x41\x50\x95\x78\x66\xa1\xb6\xe2\x3c\x0e\xe3\xea\x11\x1f\x94\x7d\x9d\xcf\xca\x59\xb9\xe0\xb3\xc1\xf7\x54\x46\x97\x9d\x5e\x97\x9f\xe3\xef\x94\xef\x64\xa4\xb7\x25\x3b\x85\xc2\x4f\xce\x74\x53\x5b\xe8\xe9\x6d\xed\x51\x9c\x7c\x76\x4e\x75\xe5\x2e\x65\x36\x38\x09\xff\x6c\x7d\x73\x24\x80\x67\x68\xdc\xa8\x24\x32\xaa\x16\xbf\xda\x4a\xd9\xeb\xae\xbf\xc4\x6f\xd5\x5e\x68\x45\xa2\x85\xca\x71\xb5\xe5\xc3\xc5\x6a\x16\xef\x35\x81\x16\xeb\x32\x76\xd8\xe8\x59\xf1\xd9\x18\x26\x72\x5b\xe1\x82\xd2\xdb\xa2\x57\xbc\xed\xde\xfa\x7a\x3c\x0b\x7f\xad\x25\x87\x05\x5c\xec\xad\xaf\xa1\xf2\xc8\xe9\xa1\x42\x8a\xbd\xf1\xa0\x21\x8f\x2e\xba\x93\x14\xb5\xb0\x5b\xc9\xa3\xf1\xc0\x4e\xb1\x8a\x8a\xad\x3c\x52\x41\xf0\xa7\x24\x5e\xce\x0c\x4a\x62\xc9\xbd\xbd\x63\xb6\xe5\x55\xb6\x7c\x47\x08\x8e\x2a\xbe\x20\x84\x48\x2f\x6f\x7b\x8f\x3e\xf0\x49\xef\x92\xc4\x1f\x5d\xe2\xe7\x5c\x40\x99\xdc\x5b\x8c\xdc\x52\xea\xc5\x1f\x76\x26\x5f\xdb\x00\x5d\xf1\x01\xe2\x2b\xe8\xa6\x1f\xd4\xa5\x1f\xf0\x6c\x23\x9c\x7e\xc0\xb8\x1b\xf1\x04\x6f\x33\x71\x59\xb3\x60\x02\xf1\x9d\x66\xa1\xfa\x0a\xfc\xfb\xa5\x98\xe0\x28\xf3\x00\xf7\x0f\xfc\x1f\x64\xfa\x64\x31\x9b\xb3\x8a\x04\x8f\xdf\xd7\x95\x1c\xfc\x0c\x14\x75\x60\x9a\xb8\x40\xcd\x04\x7c\xd8\xe1\x4c\x4d\x2c\x34\xfa\xde\xd3\x67\x3a\xf5\x1e\x9d\x00\xc8\x80\x9b\x54\xb4\xde\xa5\x39\xbe\x30\x47\x9d\xf6\x40\xe3\x9f\x0c\x70\xd8\xe8\x13\xd0\x2c\x2c\xe4\xd6\xf6\x99\xd1\x37\x06\x63\xf3\x6a\x64\x0c\xcd\x41\xbb\x6f\x48\x58\xd2\xf7\xa1\x2f\x61\x5e\xb6\x47\xa3\x3f\x2f\x86\x5d\x09\x5b\x39\x32\xda\xec\x7d\x1c\x24\x3a\xa3\x49\x2d\x86\xff\xef\x4d\x3a\xfd\x17\xba\xa2\xba\x15\xdc\xe1\xdb\x71\xa9\x22\x5b\x81\x60\x4f\x4e\x58\x69\x54\x4b\xff\x0b\x00\x00\xff\xff\x44\x50\x4d\x5f\xab\x37\x00\x00")

func idracPyBytes() ([]byte, error) {
	return bindataRead(
		_idracPy,
		"idrac.py",
	)
}

func idracPy() (*asset, error) {
	bytes, err := idracPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idrac.py", size: 14251, mode: os.FileMode(493), modTime: time.Unix(1468924797, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _idracToml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x49\xcc\x4b\x2f\x4d\x4c\x4f\x55\xb0\x55\x50\x2a\xa8\x2c\xc9\xc8\xcf\x53\xe2\x82\x89\x85\xa5\x16\x15\x67\xe6\xe7\x01\xa5\x8c\xb9\xb8\xa2\xa3\x8b\x52\x0b\x4b\x33\x8b\x52\x73\x53\xf3\x4a\x62\x63\xb9\xf2\x12\x73\xc1\x9a\x40\xa2\xa9\xc5\x25\xc5\x4a\x5c\x65\x70\xe5\x4a\x46\x7a\x86\x06\x7a\x06\x4a\x80\x00\x00\x00\xff\xff\x20\xd2\xea\x2d\x5d\x00\x00\x00")

func idracTomlBytes() ([]byte, error) {
	return bindataRead(
		_idracToml,
		"idrac.toml",
	)
}

func idracToml() (*asset, error) {
	bytes, err := idracTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idrac.toml", size: 93, mode: os.FileMode(420), modTime: time.Unix(1467192632, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _iloPy = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x19\xfb\x6f\x9b\x48\xfa\x77\xfe\x8a\x59\xaa\x13\xa0\x4b\x5d\xc7\x49\x7b\x6d\x4e\x39\xc9\xeb\x90\x5b\xeb\x62\x27\x8a\xbd\xf7\x90\x65\x21\x0c\xe3\x98\x2d\x0c\x1c\x03\x49\xbd\xa7\xfc\xef\xf7\x7d\x33\x3c\x06\x03\x89\xb3\xba\x6a\x8f\xaa\x2d\xcc\x7c\xef\xf7\x8c\xdf\xfd\xf0\x21\xe7\xe9\x87\x4d\xc0\x3e\x50\xf6\x48\x92\x7d\xb6\x8b\x99\xa6\x05\x51\x12\xa7\x19\xf9\x85\xc3\x47\xf1\x1e\xf3\xf2\x8d\xef\xb9\xb6\x4d\xe3\x88\x78\x71\xb2\x27\xc5\xa2\x4f\x69\x82\xdf\x15\xee\x2e\x09\xc2\x58\xd3\xb4\xd9\x78\xe2\xdc\xdd\xdb\xd7\xd3\x7f\x3a\x3f\xde\x8c\x27\x7f\xbb\x99\x2e\x96\xe4\x92\xac\x34\x02\x8f\xf1\x71\x08\x7f\xce\x8d\x13\x62\x9c\x9d\x7d\x1c\x7e\xba\xc6\xb7\xe1\xf0\xcb\xe7\x3f\x7d\x92\x6f\xf8\x54\x6f\x13\x7c\x1b\x0d\xcf\x4f\x3f\x9e\xe1\xdb\xe9\xf9\x97\xd3\x11\xec\x4a\x4a\xc3\xd1\xb0\xa0\x74\x6d\x5f\xc3\x23\x20\xc6\xd7\x5f\x46\x12\x7f\x34\xfc\x2c\xdf\xae\xec\xf1\xd5\x68\x22\xe1\xc6\x57\xe7\x57\x80\xbf\xd6\xb4\x2b\xfb\xef\xd3\x89\xed\x4c\xe7\xd7\xb7\xce\xd2\x9e\xdd\xdd\x8c\x97\x36\x48\xf9\x1f\x41\xfb\x1d\xd9\x06\x9b\x94\x3a\xde\xce\x65\x8c\x86\x8e\xe7\xa6\x3e\x3f\x21\x7e\xc0\xbf\xc2\x7f\xdb\x20\x8d\x9e\x5c\xd8\x7e\xa4\x29\x0f\x62\x46\x5c\xe6\x93\x4d\x10\xf3\x7a\x21\xa5\x24\x67\x39\xa7\x7e\x41\xce\x14\xc6\x21\x7e\x4c\x39\x33\x32\x92\xa4\xf1\x63\xe0\x53\xc2\x73\x6f\x47\x02\xb6\x8d\x2d\x01\xa7\x47\xb1\x0f\xdc\x98\x1b\x51\xfd\x82\xe8\xba\x54\x54\xa7\xd9\x8e\xa6\x8c\x66\x1c\x16\x57\xeb\x62\x31\xa2\x51\x9c\xee\xd5\x95\x0e\x91\xd5\x6d\xe0\xe9\x51\xce\xe3\xb4\xb1\x2a\x54\x52\x17\x38\x4d\x03\x17\x64\xc8\xa3\x0d\x4d\x55\x29\x0e\xb5\x56\xf7\x54\xe5\x8b\xf5\x67\xcd\x5e\xfe\x64\xdf\xcf\xed\x65\x97\x79\x6b\x45\x4f\x08\x4f\x28\xf5\x85\x0d\x4b\x16\x8a\xfd\x5e\xb2\x5c\x41\x4b\xb5\x9f\xeb\xa9\x62\x75\x9b\x53\xf0\xc3\x85\x9c\x7d\x65\xf1\x13\x93\x02\xbc\xa2\xe6\xb3\x76\x77\x7f\x3b\xb1\x17\x8b\xdb\xfb\xb6\x3e\x2d\x46\x28\xd6\xeb\xf2\xab\x92\x97\x42\xcd\x63\x46\x0b\x49\xbc\x38\xa5\xbc\x5a\x7a\xd6\x66\xf6\xec\xf6\xfe\x5f\xdf\x87\x7b\xf0\x2b\x6d\x32\x6f\xca\xf3\xac\x69\x5e\xe8\x72\x4e\xa6\x61\x6c\xa7\x69\x9c\x9a\xf6\x37\x8f\x26\x19\xd8\xc7\xba\x10\x08\x09\xec\x42\xee\xfb\x74\x4b\x58\x9c\x46\x6e\x08\x14\x1d\x70\x87\x09\x7f\x0b\x10\x78\x03\x99\xe1\xdf\x41\x9e\x24\x34\x35\xad\x41\x4a\x93\xd0\xf5\xa8\x69\xbc\xc7\xec\xbc\x30\xa4\x34\x29\xcd\xf2\x94\x21\x60\x41\xf0\x81\x66\x0e\x68\xe1\x04\x8c\x67\x2e\x03\xf8\x5d\xcc\xb3\x13\x02\x0a\xa6\x27\x82\xf1\x53\x9c\xfa\x05\x13\xd4\xf6\x52\x96\xa2\x01\x08\x2b\x40\xd1\x32\x97\x12\x27\x8c\x1f\x02\x76\xd9\xc4\xbc\xac\x48\xa8\xec\x65\x2d\x43\xf6\x0e\xf2\xaf\x72\xd0\x4c\xdd\x27\x54\x0c\xea\x00\xca\x54\x44\x49\xc1\xfd\x1d\x59\xee\x28\xf1\xdd\xcc\x25\x3c\x4b\x73\x0f\x28\x51\xb2\x8d\x53\x02\x35\x91\xb8\xbe\x0f\x0e\xe5\x94\x17\x2c\xc0\x3d\xa2\xa8\x4a\x17\x05\x1c\xbc\x43\xb3\x6c\x4f\x98\xcb\xb3\xfd\x49\x41\x8f\x82\x23\x3c\x48\xc8\x70\x2f\xe8\x04\x37\xb7\x67\xc4\x64\x31\xf1\x42\xea\xa6\x58\x90\xb2\x80\x79\xe8\x07\xb2\xa1\xd9\x13\xa5\x8c\x50\x48\x5c\xdf\x07\xe2\xf3\xe9\x84\x63\x5a\x95\x69\xb2\x98\x2c\xa6\x04\x2b\x35\xb7\x06\xd2\x56\x5b\x55\x05\x72\x79\x49\xce\xa4\x1a\xf8\x80\xa9\x53\x30\xbb\xff\x0d\xcc\x39\x14\xab\x34\xe4\xb4\x7b\xff\x54\xee\x97\x26\xc2\x62\xbf\x16\x4b\x28\x72\x04\x81\x46\x4a\xa3\xd5\xf8\xdb\x80\x86\x3e\x82\x46\x03\xb0\xaf\x69\xc8\x6f\x88\x83\xd5\xda\xaa\x81\x50\x65\x89\xcf\x1e\xa8\x59\xf1\x04\x47\x52\x66\x4a\x14\xeb\x84\x8c\xac\x9a\x6e\xa1\x98\xd9\x58\xa8\x19\xae\x82\xf5\xca\xc0\x80\x30\xd6\xa8\xb0\x71\x07\xf6\x30\x2a\x2b\xf5\xc0\x3f\xba\x61\x8e\x08\x3f\x00\x02\x78\xc0\x40\x73\x6e\x68\x18\xb3\x07\x4e\xb2\x98\x44\x0f\x51\x56\x7a\xb7\x41\xe6\x40\xac\x3a\x09\x9a\x29\x52\x72\x22\x7f\x24\xa7\x35\x37\xab\x85\x0b\x6a\x01\xf8\xea\xe2\xd3\x1a\x08\x64\x68\x96\xae\x56\xdb\xe6\x59\x38\x07\xf8\x96\x3d\xdb\x6c\xd5\xe6\x36\xb7\x02\x6b\x25\x8a\xea\x5a\x66\x6e\x1f\x90\xf4\xfb\xc0\x85\xbc\x66\xbe\x09\x0b\x8d\x54\xaa\x00\xd4\x84\x12\x05\xc6\xe4\x55\xe2\x70\x37\x4a\x42\x5a\xa2\x08\x1b\x28\xe9\x01\x75\x6d\xf4\xf1\xec\x8c\xcc\x7e\xfa\x55\x2f\x63\x97\x63\xce\xa0\x21\xb0\x46\x29\x81\x09\xa2\x06\x2c\x33\xf9\x80\x27\x61\x90\x99\x3a\xd1\xad\xd5\x70\xdd\x90\xa8\x21\x49\xdd\x18\x45\x6e\xe3\x27\x8a\x25\xe0\xcb\xf2\x23\x6a\xb1\xe9\x29\x0e\x3d\x42\xe2\x73\x12\x6f\xc9\x39\x11\xb8\x7f\x26\x9f\x49\xb6\x4b\xa9\x0b\x4d\x59\x53\x1c\xea\x75\x2b\x81\x8f\x57\x28\xe2\x55\x8a\x00\x39\x45\x17\x45\x1f\x4f\x4a\x5b\x6b\xd2\x4c\xc1\xa4\x4c\x41\xa1\x5b\xcd\x05\x3f\xd5\xa8\x68\xb7\x38\xab\x01\xbb\x32\x84\xd7\x30\x75\x54\x27\x26\x32\x83\x17\x62\xcf\x3a\x44\x11\xea\x0b\x94\xda\x90\x05\x86\xfd\x8d\x7a\xb9\x28\x5e\x4b\xea\xed\x58\x0c\xd5\x79\x7f\x48\x40\xea\x53\x86\x16\xae\x34\x3c\x59\x83\xa8\x2e\x95\xc3\x91\x2c\xd5\xe2\xf5\xd0\x9f\xd8\xf0\xaa\xe0\x3b\xd6\x9d\xc3\x2f\x9f\xc8\xec\xc7\x86\xfb\x7a\x62\xf0\xd5\x38\x6c\xc6\x22\x7e\x49\x39\xfb\x4a\xa7\xd8\xac\xe9\xc3\xb7\xea\xb7\x83\xc9\xc0\x52\xe1\xc0\x67\xa0\x6b\x65\x7f\xa1\x78\x51\x72\x17\xb8\x61\x1d\x42\x77\x79\x38\xea\xf1\xb0\x94\xab\x74\x0e\x7c\x35\x3b\xb8\xd8\x05\xbf\x74\xb6\xc5\x66\x13\x94\xe7\x90\xf7\x55\x2f\xfc\x77\x1e\x64\x14\xd4\xf7\x62\xf6\x48\x59\x40\x59\x26\x2c\x12\xe7\x29\x50\x83\xfe\xfd\xde\x73\x39\xcc\x8e\x58\x59\x28\x6c\x50\xf2\x44\x09\xc3\x39\x12\xea\x31\x44\xd8\xce\x4d\x00\x1b\xaa\x32\x01\xd3\x67\xe0\xd6\x4d\x90\x0d\x64\x7c\x40\x97\x4d\x70\xbe\xc3\x81\xc0\x41\x99\x44\x98\x54\x5f\x5d\x6d\xbd\xda\xac\x66\x2e\x7c\x74\x38\x16\x39\x38\x44\x29\xe3\xb3\x58\xef\x9c\xb4\xc5\x4e\x6b\x68\x97\xab\xae\xe7\x54\xc3\x81\xb2\xf9\xdc\xd3\xa5\x47\x17\x8d\x06\x09\xda\x64\x65\xa0\x54\x92\xb6\x1a\x22\x42\x15\x5e\xcc\x37\xbf\x50\x2f\x33\x2c\xd1\x00\x17\x7b\x9e\x41\x34\x4d\x41\x0f\xe8\x49\x98\x8c\x46\xbb\x83\x54\x64\x21\x3e\x0a\xa5\x8d\x75\x95\x93\x40\xb9\xdd\x3e\xc0\x71\x30\x9a\xe4\xf4\x58\x39\xee\x4a\xa3\x1d\x2f\x4a\x6d\xe7\xdf\x2a\x4c\x7b\x4a\xc0\xa7\x4f\xc4\x99\x4c\xd1\x2b\xfa\x18\x78\xb4\x7b\x68\x38\x40\x17\x09\x26\xc6\x06\xd9\xb0\x61\x80\x09\x43\x48\xa1\xd7\xa6\x04\x45\x49\x19\x32\xff\x4b\x6b\x43\x76\x61\xb5\x12\x27\xae\x7a\xbf\x98\xbf\xac\xfe\x82\x86\x4f\x35\xb5\xb5\x11\xdb\xb0\xe0\x4b\xb1\x89\xc1\x29\xa1\xba\x67\x93\x5e\x47\x54\x00\xbc\x1a\xfd\x05\x1d\x3c\x89\x7b\x99\xd5\xeb\x81\x86\xb4\xf5\xf8\x86\x3e\xb4\x95\xe9\x58\x4c\xe5\x63\xce\x83\x07\x16\x41\x81\x31\x3a\x69\x75\x78\xa7\x7c\x54\x2f\xa9\x29\xfc\x9a\xb3\xca\x07\x8e\xeb\xee\xd7\x97\x5d\x49\xc3\x17\x87\xf4\xdf\x92\xfe\x90\x68\x3e\x94\x60\x32\xc7\x21\xf8\x15\x77\x7f\x97\xbc\xef\xee\xfa\x47\x0b\xf2\x3d\xb2\xbe\x16\xee\xc6\x85\xc1\xbe\x29\x4d\x67\x98\xb5\x92\xfc\x0d\x08\xb2\x8b\xaa\x18\xbf\x43\x3d\x38\x32\xdf\xd5\x1c\x6e\x23\x77\xe7\x86\x6c\xf7\x20\x82\x1f\x08\x37\x63\x8f\x2e\xd9\x40\x1c\xef\xa1\x41\x87\x81\xbb\x09\xa1\x7f\x6f\xf2\x0c\x7a\xb8\x9b\x19\x1c\x5b\x79\x0f\xb5\x98\xc1\xe9\xf7\xc9\xdd\x63\x6f\x97\x27\xde\x87\x3c\xe0\xbb\xea\xc4\x5b\x8a\x03\xbd\x9e\x67\x42\x75\x37\x60\x00\xd4\x43\xae\x79\x40\x7e\xe4\x03\x79\x34\xe6\xf2\x6c\x3c\xf8\x5d\x4a\xd4\x51\x27\xd2\x0e\x3c\xb5\xb4\xe1\xc9\xf4\xff\xb2\x84\xa9\xd7\x06\xa9\x1b\x70\x5a\x5f\x23\xe9\x3f\x17\x77\x70\x65\x7d\x83\x23\x0e\xe8\x71\x41\xfe\xe0\xeb\x03\x39\x06\x98\xea\x3c\x66\x95\x23\x11\x9e\xff\x3b\xab\x93\x45\xfe\x42\x4e\x7b\xf9\x35\x44\xd5\x97\x22\x32\xf9\x2e\xce\x21\xc0\x37\x54\x06\x1a\x26\x70\xd7\x54\x24\x1c\x4a\xf4\x26\x05\xc8\x8a\xac\x1c\x6d\xab\x81\x76\xb3\x6f\x8c\xb3\x83\x1a\xa7\x31\x1e\x57\xe2\x1f\x5c\x73\x15\xba\x0a\xbd\x23\x97\xb9\x0f\x34\x2d\x3c\xb8\x7d\xaa\xfb\x00\x51\xb6\x31\x29\x9d\x7a\xd3\xac\xac\x54\xaf\xc9\xbc\x95\xf0\xd8\xec\xea\x53\xaf\x1c\x6e\x74\xbc\x59\xd2\x6b\xbb\x35\x7a\x0e\x39\xab\x9b\xd1\xdb\x48\x8e\x7a\x49\x8e\x3a\x82\xa3\x09\x51\x15\xc6\xfa\x46\xae\xdc\x2d\x2c\x86\x2b\xbe\x98\xc6\x84\xf3\x55\x8b\x75\x8d\xf1\x8d\x0e\xd9\x61\xc1\xfa\x44\x60\xb5\xc6\xfe\xb7\x1d\x1b\x8a\xb3\x66\x25\x19\x10\xe8\xfa\xbd\xe1\x10\xac\xd9\xdc\xca\x23\x98\x72\x3f\xd1\xd3\x06\x5b\xfc\x56\x46\x75\xe7\x22\xe8\xd4\x71\x7f\x70\x99\xd9\x9f\xff\x1d\x0a\x75\xb0\x69\xfc\x5a\x70\xc0\xaa\x33\x3d\xe1\x04\x5c\x74\x41\x81\x49\xe6\x12\xf3\x84\xe8\xba\x35\x80\xc3\x61\x90\x98\xbd\xcc\xea\x7b\xee\x37\x71\x6a\x0c\x3c\x82\x51\x2f\x83\xa2\xb7\x96\x96\x2f\xae\x11\x3a\xba\x6f\x23\x91\x15\x1a\x45\x60\x72\xcf\x65\x2f\xde\x52\x6f\x85\xcc\x22\x4b\xf4\xfe\xe2\x38\x8f\xc9\xf4\xae\xbc\x59\xc4\xee\x87\x74\xc9\xce\xe5\x50\xac\x28\x2b\x6f\xf3\xfd\x81\x5e\x25\x3c\x72\x3b\x82\x6a\x9d\xb4\x02\x03\x4d\xfa\x22\xd9\x52\xfc\xb7\x91\xae\xb0\xfa\x49\xd7\x19\x58\xdc\x4f\xbc\x7e\xcf\xaf\xb5\x2b\xc5\x4b\x95\xb3\x23\x15\x8f\x2e\x1b\xc5\xa5\x1a\xde\xe2\xe0\x0f\xa3\x03\x3f\x8f\x12\x6e\x2a\xa8\xd0\x8f\x34\x0d\xec\xe3\x88\xa8\x74\x1c\xd1\x87\x1d\x20\x16\x30\xc7\x31\xea\xcb\x03\x60\x1a\xf3\x01\x65\x8f\x41\x5a\xd6\xcd\xe9\x9d\xb3\xbc\x75\x16\x93\xf1\x5c\x89\x49\xe9\xbe\x16\xec\x6c\x3c\x1f\xff\xd5\x9e\xd9\xf3\xa5\xf3\xf3\xc2\xbe\x77\xe6\xe3\x99\xad\x60\xd5\xde\x79\x15\xf3\x6e\xbc\x58\xfc\xe3\xf6\xfe\x4a\xc1\xce\xd4\x8b\xa5\xfe\xc0\x95\xe5\x5a\xfc\xea\x43\xcc\xd2\xe3\x27\xf5\x2f\x2d\x93\x38\x8a\x72\x16\x78\xa2\x59\x8a\x4d\x18\x7e\x38\xa1\xea\x6d\x23\x1a\x92\x0e\xdc\xf4\x81\x37\x2e\xc2\x20\x67\x07\xf4\x5b\x90\x99\xa7\x96\xf6\xdf\x00\x00\x00\xff\xff\xa2\xf7\x64\xcb\x9f\x1e\x00\x00")

func iloPyBytes() ([]byte, error) {
	return bindataRead(
		_iloPy,
		"ilo.py",
	)
}

func iloPy() (*asset, error) {
	bytes, err := iloPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ilo.py", size: 7839, mode: os.FileMode(493), modTime: time.Unix(1468924808, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _iloToml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x49\xcc\x4b\x2f\x4d\x4c\x4f\x55\xb0\x55\x50\x2a\xa8\x2c\xc9\xc8\xcf\x53\xe2\x82\x89\x85\xa5\x16\x15\x67\xe6\xe7\x01\xa5\x8c\xb9\xb8\xa2\xa3\x8b\x52\x0b\x4b\x33\x8b\x52\x73\x53\xf3\x4a\x62\x63\xb9\xf2\x12\x73\x91\x34\xe9\x66\x14\x64\xe6\xe4\x2b\x71\x95\xc1\xb5\x28\x19\xeb\x59\x28\x01\x02\x00\x00\xff\xff\x5e\xdd\x05\xf1\x5e\x00\x00\x00")

func iloTomlBytes() ([]byte, error) {
	return bindataRead(
		_iloToml,
		"ilo.toml",
	)
}

func iloToml() (*asset, error) {
	bytes, err := iloTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ilo.toml", size: 94, mode: os.FileMode(420), modTime: time.Unix(1467192632, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"idrac.py": idracPy,
	"idrac.toml": idracToml,
	"ilo.py": iloPy,
	"ilo.toml": iloToml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"idrac.py": &bintree{idracPy, map[string]*bintree{}},
	"idrac.toml": &bintree{idracToml, map[string]*bintree{}},
	"ilo.py": &bintree{iloPy, map[string]*bintree{}},
	"ilo.toml": &bintree{iloToml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

