// Code generated by go-bindata.
// sources:
// bundled_scripts/idrac.py
// bundled_scripts/idrac.toml
// bundled_scripts/ilo.py
// bundled_scripts/ilo.toml
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _idracPy = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x3b\xf9\x6f\xda\x4a\xb7\xbf\xf3\x57\xcc\x73\xf5\xc9\xa0\x8f\x18\xc8\xd2\xdb\xf2\x4a\xaf\x08\x38\x29\xba\x85\x44\x40\x7a\x7b\x95\x17\x59\x8e\x19\x12\xdf\x78\xe1\x7a\xec\x10\x5e\x94\xff\xfd\x9d\x33\xe3\x65\xbc\x40\xb6\x57\xe9\xa3\x52\x6c\xcf\x9c\x6d\xce\x3e\x63\xf7\xc3\x7f\xb5\x22\x16\xb4\xae\x6d\xaf\x45\xbd\x7b\xb2\xda\x84\xb7\xbe\x57\xab\xd9\xee\xca\x0f\x42\xf2\x37\x83\x87\xf8\xde\x67\xc9\x1d\xdb\xa4\xb7\x51\x64\x2f\x6a\xcb\xc0\x77\x89\xe5\xaf\x36\x24\x1e\x5d\x50\xba\xc2\x67\x31\xf3\xe0\x3a\x1a\x0d\x03\x4a\x93\x69\xdd\xa1\x2e\xf5\xc2\x39\x0e\x99\x8c\xe8\xf3\x94\x5f\x40\xff\x89\x28\x0b\x99\x40\x4c\x9e\xb4\x95\x69\xdd\x99\x37\x94\x69\x51\xe0\x38\xf6\xf5\x81\x46\x1f\x2c\xba\x0a\x6d\xdf\x63\x09\xcd\x91\xc7\xa8\x15\x05\x74\x2a\x70\xfe\x34\x03\xcf\xf6\x6e\x6a\xb5\xd9\xe0\x9b\x3e\xee\x93\x1e\x51\x6e\xc3\x70\xd5\x6d\xb5\x98\x75\x4b\x5d\x93\x69\x0b\x37\x5c\x6a\x7e\x70\xd3\x5a\x5f\x53\xb7\xb5\x66\x96\xed\xb6\x3a\x2d\xf8\xbb\x27\x20\x5a\xfb\x4a\xed\xe7\xf8\xfb\x64\x66\xcc\x10\xfb\x31\x46\x5f\xaf\xd7\xda\xfa\x80\x23\xee\xb7\xdb\x07\xad\xf6\x51\x8b\xf9\xe6\x6a\x0f\x94\x47\x1d\x7f\x45\x9f\x12\xac\x3f\x67\xfa\x44\x46\x4c\xf8\x82\x36\x10\x41\xb0\x66\x48\xe4\xb0\xd5\xfe\x0c\xca\x8f\x5c\x1a\x98\xb8\x26\x89\xc4\xb8\x5f\x49\xa3\x28\xbb\x6b\x7a\x20\x3b\xbf\x6a\x0f\x6c\x91\x12\x98\x74\x8c\xe3\xfe\x4c\xaf\x24\x41\x1d\x47\xb3\x7c\x77\xfb\xf2\x5b\xff\x62\x40\xe8\x03\x39\xa5\x1e\x0d\x6c\x8b\x70\xf2\x7b\x56\x60\x2e\x43\xba\x20\xb8\x06\xe2\x52\xc6\xc0\x2e\xb5\xd9\x59\xff\xdc\xd0\x27\x17\x63\x21\xb2\x31\xd7\xc7\xe7\xdf\xfb\x73\x64\xac\xaa\xea\x97\xdf\x61\xcd\xe4\x9e\x06\x0c\x16\xd7\x53\x3a\x5a\x5b\xf9\xfd\x6b\xed\x0b\xeb\xea\xb1\xce\xd0\x43\x3c\xd6\x65\x3d\xe5\x85\x4a\x56\x62\x8c\x35\x33\x7b\x45\xbb\x56\xea\xf7\x53\xcb\x5c\x2c\x02\x90\x16\x7c\x22\x43\x86\xf5\x94\xd0\x9f\x51\x6d\x86\x4c\xcb\xb8\xcf\x9b\x56\xf9\x5a\x23\x04\x56\xfe\x8d\x9a\x0b\x1a\xe0\x03\x3c\xc2\x2a\xba\x7d\x0b\xa7\x09\xeb\xba\x11\x0b\x2f\x3c\x98\x64\xa1\xe9\x2d\x7a\x4a\x18\x44\x54\xf9\xfa\x6a\x46\x2d\x3d\xbe\xa7\x5f\x5a\x19\x7d\x89\xe1\xdc\xdf\xca\xec\x11\xd6\x0a\x56\xc5\x10\x35\x20\xe0\x9e\x04\x85\xb9\x9f\x62\xc3\x7c\x77\x4a\x99\x1f\x05\x16\xbd\x98\x8e\xb6\x13\x0a\x62\x20\x4e\xa2\x80\x25\xc9\x32\x16\x6e\x34\x1a\x6e\xa5\x84\x69\xa6\xfb\x88\x7f\x63\x69\x52\x14\x89\xcc\x94\xae\x9c\x4d\x22\x66\xa2\x57\x61\xf6\x17\x29\x50\x76\x92\x56\xe0\x3b\xb4\x65\x7a\xbe\xb7\x71\xfd\x88\xc5\x4a\x8c\x89\x09\x96\xad\x12\xcf\x58\x35\x33\xea\x50\x2b\xf4\x83\x19\x0d\x25\x59\xe4\x19\x32\x31\x5d\xda\x53\x0c\x03\xe2\xcd\x83\x5b\x06\x09\x0e\xf5\xc5\xe2\xf9\x54\x5f\x09\x42\xc6\xb2\x82\xc1\x97\x96\xec\x50\xe0\x5d\xc7\xfe\x62\x93\x4a\x44\xbd\x6e\xea\x0b\x05\x71\xce\x20\x85\xba\xf6\xff\x52\x5d\xf2\x9b\x02\xc8\xd8\x7c\x88\xb3\x35\x43\xbf\x78\x30\x68\xfc\x94\x8a\x28\x43\xa4\x52\x16\x99\xa2\x88\x42\x2a\xbc\x4b\xe2\xfe\x6b\x0d\xb2\x43\xad\x36\xee\x0f\x8c\xf3\xa9\x7e\x32\xfa\x69\x1c\x7f\xef\x0f\xfe\xf8\x3e\x9a\xcd\x21\x73\x5c\x72\x6a\xea\x51\x1b\xfe\x1d\xaa\x4d\xa2\x1e\x1c\x1c\xb5\x3f\x9e\xe0\x5d\xbb\xfd\xf9\xd3\x6f\x1f\xc5\x1d\xfe\xd2\xbb\x01\xde\xed\xb7\x0f\x3b\x47\x07\x78\xd7\x39\xfc\xdc\xd9\x87\x59\x41\xa9\x0d\x66\x16\x94\x4e\xf4\x13\xf8\x71\x88\xfe\xc9\xe7\x7d\x81\xbf\xdf\xfe\x24\xee\x86\x7a\x7f\xb8\x3f\x10\x70\xfd\xe1\xe1\x10\xf0\xaf\x6a\x33\x7d\x3a\xea\x7f\xaf\x10\x70\xe2\x7b\x14\x40\x11\x7c\xe2\x87\xa4\x7f\x6f\xda\x8e\x79\xed\x50\x1c\xf8\xf9\xc0\xff\xe1\xed\x1e\xfe\xf0\xe6\xf2\xc2\xbb\xf3\xfc\xb5\x77\x95\x89\x2f\x96\x20\x84\x44\x1a\xb3\x15\xb5\xec\xa5\x4d\x17\x08\xf2\xd7\x1f\x9d\xf6\x60\xc8\x65\xdd\x3f\x38\x3c\xfa\xf8\xdb\xa7\xcf\x6d\xc1\xcc\xe3\x3c\x20\x90\x8f\x29\x39\xb1\x1d\x07\xb2\xf2\xf1\x86\x9c\x69\xba\x36\xd6\xb8\xcc\xb5\xa1\xfe\x63\x34\xd0\x8d\xd1\xe4\xe4\x4c\xce\xc9\x8f\x9c\x95\xe2\xfa\x50\x04\x0c\xf4\x3f\xa5\x4b\x14\x45\x08\xa0\xd0\xf0\x96\x06\x1e\x0d\x19\x0c\x5e\x5e\xc5\x83\x2e\x75\xfd\x60\x23\x8f\x2c\xed\xeb\x80\x1a\xd6\xad\xe9\x79\x40\xc4\x32\x83\x45\x0e\x61\x15\xf8\x16\x84\x8a\x1f\xe4\x46\x17\x36\xbb\xcb\x0d\x30\xa8\x2c\x26\xc8\x10\xb9\xd7\x34\x88\xa5\x78\xaa\xe9\xf3\x6f\xfa\x74\xa2\xcf\xab\x64\x36\x2d\x59\xd8\xea\x25\xb0\x15\xa5\x0b\x1c\x88\x84\xaa\x89\x18\x48\x25\x0f\xdc\xb5\x09\xc2\xc7\x15\x29\x65\x7b\x3e\x3d\x1b\xe8\xb3\xd9\xd9\xf4\xc5\xba\x4a\x18\x71\x1f\x10\x43\x96\x0f\x29\x22\x1d\x7a\xaa\x8d\xf5\xf1\xd9\xf4\xaf\x97\x53\x84\x70\xcc\x13\xcc\xf3\x78\xaa\x9d\x8c\x8e\xa7\xba\x31\xf8\xd6\x9f\x4c\xf4\xef\xc6\xa0\x3f\x1d\x96\x89\x7f\x20\xc5\x45\x36\x85\x0e\x08\xe4\x54\xb2\x06\x8d\xc0\x14\x89\xbc\x88\xc1\x50\xdd\x1e\x4e\xfb\x03\xb2\xf0\x29\xf3\xd4\x90\x80\xe5\xee\xed\x05\x25\xe1\xad\x0d\xcd\x95\xb7\xf4\xc9\x86\x86\x0d\x6d\xa7\xee\xde\x6c\x0b\x10\x25\x55\x7f\xad\xb6\xa0\x4b\xe2\xf9\x81\x6b\x3a\xa0\x05\x03\x4c\x6d\xc4\x09\xb9\x2e\xdd\x37\xba\x1c\x55\x1a\x81\x65\x4b\x4f\x5a\xb4\x5a\xd1\xa0\xde\xd0\x02\x48\xcd\x90\x56\xeb\x2a\x0f\xbb\xae\xda\xe0\x78\x01\x0d\xa3\xc0\x93\x11\x80\xf1\xf6\x46\x13\x3c\x16\x83\xd9\x58\x8b\x7e\x92\xd5\xab\xfb\xcc\x06\x10\xb1\x1c\x13\x64\x19\x2d\x02\xd3\xd2\x83\xc0\x0f\xea\x7a\xd2\xa4\xc6\x22\xaf\x4c\xce\x2c\x86\x43\xa5\xd7\xfd\xeb\xbf\x21\x93\xc3\x3c\x07\xc0\xf5\x1b\x86\xed\xd9\xa1\x61\xd4\xa1\x16\x2c\x9b\xe4\xd6\x67\x61\x93\x80\x9d\x82\x26\xc7\x5f\xfb\xc1\x22\x26\x87\x3f\x04\xd2\x10\x06\x74\x80\x97\xfc\x04\xa2\xc1\x04\x5e\xf2\x13\x09\x25\x98\x4c\x6e\x33\x09\x82\xc8\x33\xa0\x31\x84\xdc\xbe\x88\x85\xe0\x12\x73\xcb\x36\x49\x52\xa2\x7a\x6a\xe0\xfb\x61\x6b\x01\x15\x4c\x95\x04\xca\xb7\x0e\x49\xdb\xcd\xa0\xf4\x3e\x3e\x89\x82\xa1\x68\x4b\x34\x71\x58\x4f\x65\x6f\xa4\xd8\x37\xd8\x6a\x42\xc9\x58\x18\x58\xea\x51\x74\xb8\x68\xf8\xa7\x53\xcf\xa0\xe2\xae\x13\xa6\xb7\xf5\x9d\x09\x8b\x14\x45\x58\x5e\xf4\x1e\x3d\xb1\x25\xd0\xa0\xc3\x08\xec\x55\x5d\x6d\xa9\x0d\xf2\x6f\x02\x17\xf8\x2b\xad\x34\x87\x9b\x5f\x56\x2f\xff\x98\x07\x45\x69\x7b\xf9\x85\xe4\x01\x52\x0d\x26\x37\x45\x56\x59\x91\xed\xed\x1f\x1d\x65\xb3\x99\x06\x62\x27\xd6\xe7\x1a\xf4\xf9\x42\x91\x06\xd4\xdc\x85\x81\x4d\x4d\x7e\xd5\x28\xae\x5a\xb4\x81\x5a\xb6\x41\x41\x08\xa1\xe2\x5e\x7c\x95\x64\x68\x48\xae\x9a\xb1\x14\x7e\x82\xba\x48\x50\x25\x9f\x50\x14\x65\x1e\x6c\x48\x08\x1d\x27\x20\xe4\x76\x0e\x38\xb8\x02\xf6\xdc\x59\x22\x6c\xbc\x08\xca\x4a\xae\x4d\x66\x5b\x29\x01\x33\x82\x9a\xe4\x85\xb6\xc5\x5b\x14\x0d\x52\x61\x08\x9e\x18\xde\x9a\x21\x59\x53\x48\x5c\x98\xb6\x18\x28\x12\x76\x93\xde\x06\x98\x30\x4c\x4d\x3c\x77\xe1\x22\x31\xfb\xa5\xa4\x20\xbd\x90\x7b\xc8\x2f\x0b\x30\x0e\x99\xcd\xbe\x13\x8b\x06\x21\xd4\x5a\x20\x4d\x35\xd2\x07\xf4\xa5\xef\x38\xfe\x1a\x25\x49\xb2\x02\x59\x43\x71\x85\xa7\x3d\x14\x3f\xa5\xc4\x45\xe4\xa2\x91\x5b\xde\x7c\x11\xf3\xc6\xb4\x3d\x4d\x5e\x76\x66\x30\x70\xd6\x2c\xc9\xc0\x82\x4b\x46\xca\xeb\x1f\xc4\x33\xcb\xca\x4f\x74\xd1\xab\xa7\xe1\xdd\xcc\x07\x74\xc1\x8c\x90\xa5\xed\xe5\xa6\x77\x62\x3a\xac\x40\x46\x88\xcc\x7a\x8f\xb9\x51\xfc\xa9\x03\xdf\x0b\x41\xdb\x7b\xf3\xcd\x8a\xaa\x5d\xa2\x9a\xab\x95\x13\xab\x9e\xef\xc2\xfe\x0d\xcd\xf3\x7f\x43\xe1\x0f\x18\x0d\x7b\x17\xf3\x93\xbd\x4f\x6a\x9e\xf6\x53\x95\xcb\xda\x98\xda\x61\x83\xaf\xf9\x77\xdd\x1c\x34\x4c\x04\x1a\x34\xfb\x61\xc4\x20\xed\x40\xe1\xe9\xf5\xc8\x61\xbb\xd3\x2d\x09\x16\x98\x36\xa3\x72\x7e\x55\xfa\xa8\x7c\x8a\xf7\x1a\xec\xff\xb9\x59\x79\xb2\xc3\xf8\x25\x60\xe8\x44\x2b\x9a\xd2\xa8\xed\xa4\x54\xe2\xa5\xcc\x60\xa1\x7c\xae\x4b\xa0\xc5\xf7\x21\xe9\x77\xc9\xe3\xd3\xff\x78\x71\xda\xc7\x07\xa5\x32\xcb\xa4\x3c\xb4\x90\x3e\x84\x69\x38\x34\x4b\x40\x05\x53\x65\x12\xf2\x05\x31\x63\x65\xc2\xe2\x60\xff\xfc\xc8\x9e\xb0\x73\x6e\xc1\xf5\xc4\x8c\x9c\x30\x8b\xdd\x5e\x7c\x3c\x51\x42\x75\x6c\x5e\x10\x2e\xaf\x8a\x13\x1e\xd7\x6f\x92\x37\x84\x88\x0d\x6d\x69\x43\xa6\x97\xb8\xe6\x8c\x26\x61\xe6\x4d\x52\xe0\x85\x00\x06\xd2\x83\x00\x0a\x48\xf6\x64\x7b\x32\x09\xcd\x0e\x21\xde\x60\xbc\xde\xb8\x7a\xa5\x49\xd4\x9c\x49\x52\x2b\x34\xe1\x81\x71\x03\xc5\x7c\x70\x50\xdd\x69\x9a\xc4\x24\x44\x6d\xaa\xda\xdf\xbe\xed\xd5\xa5\xb5\x34\x2a\x2c\xb5\xc5\x50\x71\x16\x16\x6a\x8c\xdb\x17\xe3\x86\x86\x06\xa4\x06\x6a\x60\xfa\xa9\xdb\xb8\x20\x43\x94\x8b\x20\x4e\x89\x0b\x7a\x6f\x5b\x62\x1e\x14\x57\xd5\xa2\x73\x30\x7e\x60\xd6\x23\x39\x0a\x9a\x5c\x9b\xd5\xe1\x60\x34\x36\x66\x1b\x16\x52\xf7\x87\x4d\xd7\x71\x83\xc3\xcf\x27\x0c\xaf\x03\xb8\xf9\x43\xa0\x7f\x11\xa5\x80\x21\xf2\xd3\x3f\xfc\x78\x28\x76\xb2\xa7\x74\xdb\x96\xa8\x15\xc6\x46\x00\xcf\xe0\x5a\x44\x2f\x69\x39\x76\xc8\x66\x61\x00\x8f\xc2\xca\x63\x50\xb0\xb3\xc1\x44\x6a\x31\x92\xb4\x6a\xd0\x4c\x2f\xb0\xbd\x43\x5d\x70\x37\x35\x1d\xa7\xfe\x8f\x98\x4d\x12\x8a\x00\xca\x7c\xb3\x9c\x26\x46\x1e\x80\x00\x5c\x08\xe5\x81\xad\x21\x51\x83\x4f\x42\x41\x29\xd8\x2a\x49\x12\x59\x1b\x2b\xf4\x52\x19\xe9\x31\xd7\xcb\xf6\x95\x88\x9e\x9c\x87\x00\x92\x84\x93\xae\x8c\xa8\x63\xd3\x8b\x96\xa6\x05\x5e\x43\x03\x55\x72\xb4\x06\xf7\x20\x4d\xf4\x23\x59\xe3\xaa\x40\x52\xb3\x34\xa5\x09\x95\x44\x02\x7e\x23\x6b\x5c\xd5\x76\x9e\xb2\xda\x73\x7b\x32\x5e\xb7\xb6\x30\xdc\xca\x6c\x70\x0b\x89\xd7\x66\x33\x1a\xa0\xa7\xcf\xcd\x9b\x84\x71\x9e\x69\x62\xc6\x3c\x43\x34\x2a\x18\xa8\xb8\xdf\xce\x0c\x2c\xc5\xcf\xa5\x9a\xc3\x55\xaf\x40\xdc\xdc\x48\x31\xe0\x2e\xd5\xcc\xbc\x1c\x3a\x7b\x94\x77\x07\x12\x86\x1c\xd7\xe9\xd6\xb8\x14\xd7\x69\x4f\x84\x60\xb0\xb7\xa8\x4b\xed\xcf\x07\x42\xb5\x1b\x8d\x0c\x22\xf0\x41\x2f\x1c\xf7\x07\xf1\x31\x52\x97\x1c\x1f\x77\x07\x83\xee\x70\xd8\xd5\xf5\xee\xc9\x49\xb7\xdd\x4e\x71\xc2\x60\xd3\x2d\x74\x85\x56\x6a\x8a\x0a\xbb\xef\x36\x47\x91\xb3\x5a\xac\x3d\x22\x83\x25\x8f\xe2\x70\x9d\xf4\x43\x30\xd3\x75\x14\x52\x91\x74\x2b\xc4\xc1\x2d\xa9\x5c\x2b\x60\xb4\x0a\x6c\xeb\x96\xae\x51\x6c\x04\x60\xec\xb2\xfb\xf1\x0a\xed\x5f\x75\x28\x54\xee\x09\x2a\xe4\xc8\x36\x78\x05\xab\xa0\xa5\x39\xd7\x92\x69\xce\x03\x7f\x11\x59\x21\x1e\xca\x75\x21\xe6\x42\x80\x9b\x36\x88\x1e\x5b\x9b\x74\xda\xa7\xe4\xf0\x9c\xfc\x3c\xda\x6f\xb7\x46\x07\x47\x6d\x12\x4c\x86\x03\xb2\xf7\x2a\xf3\x21\xf3\x37\x1b\x50\x92\xef\xff\xc1\x74\xb1\x28\x15\xc6\x43\xbd\xf3\xe9\x02\x86\x9b\x6f\x26\xf0\x87\x45\xde\x4d\xe1\x35\x06\x2d\x62\x28\x3b\xbd\x44\xd8\xa1\x5e\xdd\x6d\x60\x5b\xd7\xc1\xa6\x2c\xe1\x53\x86\xc5\x9f\x05\xcd\xa7\xed\x45\xb4\x6c\x69\x57\x83\x46\x14\x1a\x70\xa0\x55\xb9\x1e\x95\xc4\xc5\xdc\x75\x4b\x25\x9a\xc3\xe4\xdd\x81\x1f\x43\xd4\xf9\x44\xce\x21\x2e\x70\xd7\x10\x46\x1e\x54\x40\x67\xd3\x24\x36\xec\x2c\x28\x54\x3f\xb1\xdb\x40\x8f\xa0\x2a\x03\x8f\x86\xd1\x95\x89\x65\x92\x2c\x6d\xea\x2c\xb8\x3e\xf0\xc4\x04\xfa\x71\x5f\xa2\x06\xdb\x93\x5b\xf3\x9e\x6f\x73\x42\xf3\x8e\x22\x39\xfe\x66\x4b\xb2\x68\x4b\x68\xb0\xd8\x28\x57\xd8\x41\x9c\xe0\xf4\x8a\x47\x29\x99\xf1\x1d\xc0\x55\x4e\xed\x1b\xf3\xda\x0e\x95\x2d\xc6\x4c\x89\x74\xc8\xe9\xf5\x8a\xc9\xd8\x8c\x56\x80\xb2\xf4\x50\x49\xfe\xa9\x9d\xf6\x18\xf6\x06\x40\xa5\x4d\xc6\x48\xa6\xdc\x35\x01\x08\x87\x01\x90\x1d\x30\xa7\x48\x25\x15\xa6\x92\xca\x69\xc2\x68\x1b\xc8\x61\x0c\x72\xb8\x1d\x04\x64\x38\x4d\x64\xa9\x80\x79\x2a\xf9\x36\x1e\x7d\xc5\x0a\xd0\xee\xe8\x86\x6d\xf1\x6d\xb6\x45\xcb\xc9\x2f\xd1\xb6\xa0\x74\xc9\xae\x2a\xa1\xae\x03\x6a\xde\xe5\x9b\xeb\x92\x31\x64\x6a\xdb\x1c\x20\xf6\x76\x3e\x9a\xf7\xf6\xe5\x3a\x39\xb1\xab\xa8\x4c\x27\xa6\x6b\x3b\x9b\x1f\x62\xbe\x4b\x3a\x47\x5a\x5b\xdb\xff\x6d\x7b\x32\xbb\x97\xda\x82\xd7\xa6\xb2\x1c\xaf\xf7\x27\x33\x21\x4a\x55\xfe\x87\x99\xda\x6b\xfa\xe8\xc9\x68\xf0\x9a\x26\x3a\x06\x7f\x53\x07\x9d\xe0\xfe\xe2\xf6\x39\xed\x56\xb2\xec\x8d\x9e\x2d\xec\xc6\x7b\xe0\x7c\x57\x2d\x1f\xe2\x61\x55\x4d\x5b\x99\x52\x6a\x2a\x96\xf9\x52\xd2\x4e\x72\x72\xbe\xee\xa6\xd3\x89\x1f\x17\xf3\x70\x2d\x6f\xd6\xa2\xe3\x66\x8e\x91\x54\xe6\x62\x6a\x8a\x5f\x0f\xc0\xdf\x66\x61\x5c\x3e\x9b\xe6\x0f\x05\x80\xe4\x98\x9a\x5f\x0b\x73\x15\x87\xde\x70\x97\x01\x3d\x95\x04\x63\x49\xad\x4a\x06\x72\x67\xcf\x29\x94\xdc\x5b\x66\x2f\x4c\x2a\x37\x8d\x2f\xf4\xe2\xc1\xf9\xc5\x6b\xbc\x38\x06\x7f\x93\x17\x27\xb8\xbf\x7c\x13\xc8\x22\xe7\x2d\x3e\x5c\xd1\x71\x3d\xb7\x3b\xaa\xd8\x9e\x08\xdd\x17\x12\x20\xd0\xa2\x0f\x68\x0d\xaf\xe2\x84\x61\x67\x5e\xe4\xfe\xb4\x4d\x8a\x91\x87\xef\xbc\x2d\x3a\x1a\x16\x13\x23\x57\x47\x7e\x93\x28\x3a\x2e\x55\x53\x1b\x97\x7b\x9d\xab\xad\x67\x49\x22\x85\xd6\x7f\x98\x4e\x24\xf2\x67\x13\x1a\x5c\x90\x9e\xdf\x37\x9e\x09\xe3\x58\xf7\x89\x33\xe7\x63\x4d\xde\x49\x55\xc6\x94\xca\x63\x09\xe6\x50\x4d\xef\xda\xb9\x0c\x1c\xdf\xba\x9b\x71\x6a\x95\x15\x23\x51\x4a\x61\x52\xe5\xef\xe2\xde\x25\xc0\x84\xef\x22\xcf\x96\xe7\x49\x74\x0e\x38\xc9\x97\x4a\xf1\x94\x8b\xfb\x58\x9d\x72\xd4\x8b\xf7\xaa\xef\x89\xf8\x31\xa7\xf0\x9a\xa0\xcf\x30\xde\x14\xf7\x12\xfa\x2f\x0f\x7d\xae\xb6\xcb\x14\x68\x97\x03\xaa\xfc\xa4\x66\xfb\xc1\xdf\xdb\xc3\x72\xdb\xa9\x4d\xb5\xf5\xcb\xf3\xef\xe0\x5c\x3c\xb4\x79\x09\xcb\x62\x10\xe0\x1b\xe5\x77\xc5\xc0\x0c\x09\xbc\x2a\xee\xde\x1f\xf8\xaf\x0b\xf6\xa7\xdd\x45\x81\xc3\x5d\xc9\x61\xc7\xbf\x43\x78\x4f\xd4\x9d\xdf\x6e\x98\x6d\x99\xce\x10\x08\xbd\x26\xf6\x8a\x78\x6f\x8a\xc0\x12\x91\xff\xd4\x12\x2c\x05\xce\xae\x0d\xc3\x3b\xcf\x4b\xf3\x25\x3f\x39\xb9\xdd\x95\x0f\x64\xc1\xf2\x2e\xf6\x36\x6f\x8d\xe3\x74\x87\xb3\x56\xbd\x11\xc3\xc0\x34\x6c\xcf\xb8\xde\x84\x94\xed\xd2\x8f\x8a\x7c\xd5\x2d\x91\x39\xf2\x8e\x11\xbf\xac\x9e\x8c\x4f\xe5\x79\xee\xab\xf8\x70\x0a\xa2\x16\xee\x60\xb4\xbb\x5d\x90\xf2\x50\x79\x27\x5d\x35\x58\xd6\x11\x7e\xbc\x92\x1b\x49\xd4\x8b\xe7\x4a\xed\x72\x96\x24\x2d\xd2\x69\xef\x1f\xe6\x2f\xbb\x93\x65\xee\x38\xb9\x5b\xd0\x1d\xe7\x2f\x8f\xc8\xfc\xd5\xc2\x5b\x50\xd5\x31\xaf\xc1\x2b\xba\x92\x5b\x36\x9f\x6b\xa0\xaa\xa0\x96\x7c\xc7\x8c\x10\x95\x5e\xfb\x6c\x8b\x51\xf1\xa1\xd6\xbb\x32\xdf\x60\x34\xe4\xa7\xe3\xaf\x4a\x7b\x32\xd2\xdb\x72\x5e\x8e\xc2\x2f\x4e\x78\x4b\x4b\xe8\xe9\x6d\x9b\x8e\x24\x03\xbd\x3a\xdf\x29\x43\xca\x2c\xf0\x27\xfe\xa1\xf0\xf6\x30\x83\x5d\xb8\xca\x8d\x4a\x62\xa3\xaa\xc9\x3b\x93\x8c\xbd\xe6\xf8\x6b\xfc\x08\xea\x99\x06\x3f\x5e\x28\x08\x9b\x7c\xb1\x5f\xdf\xf1\x79\x59\xa3\x88\xf7\xdc\xdb\x14\x59\x97\x49\x56\x88\x9f\x73\x5e\x9b\xc0\xc4\x6e\x2b\x5c\x50\x7a\x07\xf3\x82\xd7\xa8\x3b\xdf\xbb\x16\xe1\x2f\xd5\x74\x0b\xce\xc5\xde\xf9\x72\xa7\x8c\x9c\x6d\xd5\x33\xec\xad\xdb\xf7\x32\xba\xe8\xf9\x33\xd4\xca\x3d\x40\x19\x8d\xf7\x2c\x19\x56\x55\x0b\x53\x46\xaa\x08\xfe\x8c\xc4\xf3\x99\x41\x36\x52\xf9\x9d\x18\xb3\x4c\xaf\xbe\xe3\x03\x35\x70\x54\xf1\x69\x1a\x44\xba\xb2\xeb\x05\xed\xc4\x27\xa3\x73\x92\x7c\xcd\x87\xdf\x09\x01\x65\x72\x6b\x32\x72\x4d\xa9\x97\x7c\x91\x98\x7e\xc6\x01\x74\xc5\x97\x6d\x2f\xa0\x9b\x7d\xa9\x95\x7d\x19\xb2\x8b\x70\xf6\x65\xdc\xeb\x88\xa7\x78\xdb\x89\xcb\x9a\x05\x13\x88\x0f\x00\x2b\xd5\x57\xe1\xdf\xcf\xc5\x04\x47\x59\x05\x58\x48\xf1\xff\xec\x68\x8b\xc8\x5d\xb1\xba\x04\x8f\x1f\x6e\xd5\x6c\xfc\xbe\x10\x75\x60\x18\xb8\x40\xd5\x00\x7c\xa8\xa5\x86\x2a\x16\x1a\x7f\x48\xe8\x33\x8d\x7a\xf7\x76\x00\x64\xc0\x4d\xea\xea\xe8\xdc\x98\x9f\x19\xb3\x41\x7f\xa2\xf2\x77\xd1\x1c\x36\xfe\xb6\xb0\x08\x0b\xb9\xb5\x7f\xaa\x8f\xf5\xc9\xdc\xb8\x98\xe9\x53\x63\xd2\x1f\xeb\x12\x96\xf4\xe1\xe1\x73\x98\xe7\xfd\xd9\xec\xcf\xb3\xe9\x50\xc2\xce\x1d\xc4\x6c\xf7\x3e\x0e\x12\x9f\x7c\x64\x16\xc3\xff\x69\x24\x9d\xa9\x0b\x5d\x51\xcd\x0c\x6e\xf0\xd5\xb6\xd4\x96\x6d\x40\xb0\x07\x3b\xac\x77\x1a\xb5\xff\x0b\x00\x00\xff\xff\xff\xfc\x6e\x38\x1d\x35\x00\x00")

func idracPyBytes() ([]byte, error) {
	return bindataRead(
		_idracPy,
		"idrac.py",
	)
}

func idracPy() (*asset, error) {
	bytes, err := idracPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idrac.py", size: 13597, mode: os.FileMode(493), modTime: time.Unix(1468236765, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _idracToml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x49\xcc\x4b\x2f\x4d\x4c\x4f\x55\xb0\x55\x50\x2a\xa8\x2c\xc9\xc8\xcf\x53\xe2\x82\x89\x85\xa5\x16\x15\x67\xe6\xe7\x01\xa5\x8c\xb9\xb8\xa2\xa3\x8b\x52\x0b\x4b\x33\x8b\x52\x73\x53\xf3\x4a\x62\x63\xb9\xf2\x12\x73\xc1\x9a\x40\xa2\xa9\xc5\x25\xc5\x4a\x5c\x65\x70\xe5\x4a\x46\x7a\x86\x06\x7a\x06\x4a\x80\x00\x00\x00\xff\xff\x20\xd2\xea\x2d\x5d\x00\x00\x00")

func idracTomlBytes() ([]byte, error) {
	return bindataRead(
		_idracToml,
		"idrac.toml",
	)
}

func idracToml() (*asset, error) {
	bytes, err := idracTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idrac.toml", size: 93, mode: os.FileMode(420), modTime: time.Unix(1467192632, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _iloPy = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x19\xfb\x6f\x9b\x48\xfa\x77\xff\x15\xb3\x54\x27\x40\xe7\x52\xc7\x49\x7b\x6d\x4e\x39\xc9\xeb\x90\x5b\xeb\x62\x27\x8a\xbd\xf7\x90\x65\x21\x0c\xe3\x98\x2d\x0c\x1c\x03\x49\xbd\xa7\xfe\xef\xf7\x7d\x33\x3c\x06\x03\x79\x54\x57\xf5\xa8\x1a\xc1\xcc\xf7\x7e\xcf\xf8\xcd\x4f\xef\x72\x9e\xbe\xdb\x06\xec\x1d\x65\x0f\x24\x39\x64\xfb\x98\x0d\x06\x41\x94\xc4\x69\x46\x7e\xe3\xf0\x51\xbc\xc7\xbc\x7c\xe3\x07\x3e\xd8\xa5\x71\x44\xbc\x38\x39\x90\x62\xd1\xa7\x34\xc1\xef\x0a\x77\x9f\x04\x61\x3c\x18\x0c\xe6\x93\xa9\x73\x7b\x67\x5f\xcd\xfe\xe9\xfc\x7c\x3d\x99\xfe\xed\x7a\xb6\x5c\x91\x0b\xb2\x1e\x10\x78\xf4\xf7\x23\xf8\x77\xa6\x0f\x89\x7e\x7a\xfa\x7e\xf4\xe1\x0a\xdf\x46\xa3\x4f\x1f\xff\xf4\x41\xbe\xe1\x53\xbd\x4d\xf1\x6d\x3c\x3a\x3b\x79\x7f\x8a\x6f\x27\x67\x9f\x4e\xc6\xb0\x2b\x29\x8d\xc6\xa3\x82\xd2\x95\x7d\x05\x8f\x80\x98\x5c\x7d\x1a\x4b\xfc\xf1\xe8\xa3\x7c\xbb\xb4\x27\x97\xe3\xa9\x84\x9b\x5c\x9e\x5d\x02\xfe\x66\x30\xb8\xb4\xff\x3e\x9b\xda\xce\x6c\x71\x75\xe3\xac\xec\xf9\xed\xf5\x64\x65\x83\x94\xff\x11\xb4\xdf\x90\x5d\xb0\x4d\xa9\xe3\xed\x5d\xc6\x68\xe8\x78\x6e\xea\x73\xe2\x32\x9f\xf8\x01\xff\x0c\x6f\x29\x25\x39\xcb\x39\xf5\x89\x21\xd4\x26\x7e\x4c\x39\xd3\x33\x92\xa4\xf1\x43\xe0\x53\xc2\x73\x6f\x4f\x02\xb6\x8b\x4d\x41\x50\x8b\x62\x1f\xe8\x30\x37\xa2\xda\x39\xd1\x34\xa9\x82\x46\xb3\x3d\x4d\x19\xcd\x38\x2c\xae\x37\xc5\x62\x44\xa3\x38\x3d\xa8\x2b\x1d\xc2\xa8\xdb\xc0\xd3\xa3\x9c\xc7\x69\x63\x55\x48\xaa\x2e\x70\x9a\x06\x2e\xc8\x90\x47\x5b\x9a\x16\x52\x7c\x1d\xd8\xab\x5f\xec\xbb\x85\xbd\xea\x32\x42\x2d\xf4\x90\xf0\x84\x82\xb6\x68\x82\x5d\x90\x46\x8f\x68\x81\x6f\xb0\x82\xeb\xa9\xea\x77\x1b\x45\x70\xc2\x85\x9c\x7d\x66\xf1\x23\x93\xac\xb5\xca\x16\x92\xbb\xf3\x40\x53\x1e\xc4\xac\x52\xe4\xf6\xee\x66\x6a\x2f\x97\x37\x77\x6d\x4d\x5a\x8c\x50\xb9\xd7\x49\x5e\x0a\xb5\x88\x19\x2d\x24\xf1\xe2\x94\xf2\x6a\xe9\xeb\x60\x6e\xcf\x6f\xee\xfe\xf5\x7d\xb8\x07\xbf\xd3\x26\xf3\xa6\x3c\x5f\x07\x03\x2f\x74\x39\x27\xb3\x30\xb6\xd3\x34\x4e\x0d\xfb\x8b\x47\x93\x0c\xec\x63\x9e\x0b\x84\x04\x76\x21\x37\x7d\xba\x23\x2c\x4e\x23\x37\x04\x8a\x0e\xb8\xc3\x80\xff\x05\x08\xbc\x81\xcc\xf0\xd7\xca\x93\x84\xa6\x86\x69\xa5\x34\x09\x5d\x8f\x1a\xfa\x5b\xcc\x9e\x73\x5d\x4a\x93\xd2\x2c\x4f\x19\x02\x16\x04\xef\x69\xe6\x80\x16\x4e\xc0\x78\xe6\x32\x80\xdf\xc7\x3c\x1b\x12\x50\x30\x1d\x0a\xc6\x8f\x71\xea\x17\x4c\x50\xdb\x0b\x59\x2a\x2c\x10\x56\x80\xa2\x65\x2e\x24\x4e\x18\xdf\x07\xec\xa2\x89\x79\x51\x91\x50\xd9\xcb\x5a\x83\xec\x1d\xe4\x5f\x65\x92\x91\xba\x8f\xa8\x18\x1f\x22\x48\x19\x25\x05\xf7\x37\x64\xb5\xa7\xc4\x77\x33\x97\xf0\x2c\xcd\x3d\xa0\x44\xc9\x2e\x4e\x09\xd4\x2c\xe2\xfa\x3e\x38\x94\x53\x5e\xb0\x00\xf7\x88\xa2\x27\x5d\x14\x70\xf0\x0e\xcd\xb2\x03\x61\x2e\xcf\x0e\xc3\x82\x1e\x05\x47\x78\x90\x56\xe1\x41\xd0\x09\xae\x6f\x4e\x89\xc1\x62\xe2\x85\xd4\x4d\xb1\x5a\x64\x01\xf3\xd0\x0f\x64\x4b\xb3\x47\x4a\x19\xa1\x90\x7e\xbe\x0f\xc4\x17\xb3\xa9\xa8\x29\x05\xa5\x60\x39\x5d\xce\x08\x56\x52\x6e\x5a\xd2\x56\x3b\x55\x05\x72\x71\x41\x4e\xa5\x1a\xf8\x80\xa9\x53\x30\xbb\xff\x05\xcc\x39\x12\xab\x34\xe4\xb4\x7b\xff\x44\xee\x97\x26\xc2\x62\xbc\x11\x4b\x28\x72\x04\x81\x46\x4a\xa3\xd5\xf8\xbb\x80\x86\x3e\x82\x46\x16\xd8\xd7\xd0\xe5\x37\xc4\xc1\x7a\x63\xd6\x40\xa8\xb2\xc4\x67\xf7\xd4\xa8\x78\x82\x23\x29\x33\x24\x8a\x39\x24\x63\xb3\xa6\x5b\x28\x66\x34\x16\x6a\x86\xeb\x60\xb3\xd6\x31\x20\xf4\x0d\x2a\xac\xdf\x82\x3d\xf4\xca\x4a\x3d\xf0\x0f\x6e\x98\x23\xc2\x4f\x80\x00\x1e\xd0\xd1\x9c\x5b\x1a\xc6\xec\x9e\x93\x2c\x26\xd1\x7d\x94\x95\xde\x6d\x90\x39\x12\xab\x4e\x82\x66\x8a\x94\x9c\xc8\x1f\xc9\x49\xcd\xcd\x6c\xe1\x82\x5a\x00\xbe\x3e\xff\xb0\x01\x02\x19\x9a\xa5\xab\x15\xb6\x79\x16\xce\x01\xbe\x65\x4f\x35\x5a\x55\xb9\xcd\xad\xc0\x5a\x8b\xa2\xba\x91\x99\xdb\x07\x24\xfd\x6e\xb9\x90\xd7\xcc\x37\x60\xa1\x91\x4a\x15\x80\x9a\x50\xa2\xc0\x18\xbc\x4a\x1c\xee\x46\x49\x48\x4b\x14\x61\x03\x25\x3d\xa0\xae\x8d\xdf\x9f\x9e\x92\xf9\x2f\xbf\x6b\x65\xec\x72\xcc\x19\x34\x04\xd6\x28\x25\x30\x41\xd4\x80\x65\x06\xb7\x78\x12\x06\x99\xa1\x11\xcd\x5c\x8f\x36\x0d\x89\x1a\x92\xd4\xed\x4d\xe4\x36\x7e\xa2\x58\x02\xbe\x2c\x3f\xa2\x16\x1b\x9e\xe2\xd0\x17\x48\x7c\x46\xe2\x1d\x39\x23\x02\xf7\xcf\xe4\x23\xc9\xf6\x29\x75\xa1\xb5\x0e\x14\x87\x7a\xdd\x4a\xe0\xe3\x15\x8a\x78\x95\x22\x40\x4e\xd1\x45\xd1\xc7\x93\xd2\xd6\x9a\x34\x53\x30\x29\x53\x50\xe8\x56\x73\xc1\x4f\x35\x2a\xda\x2d\xce\x6c\xc0\xae\x75\xe1\x35\x4c\x1d\xd5\x89\x89\xcc\xe0\xa5\xd8\x33\x8f\x51\x84\xfa\x02\xa5\x36\x64\x81\x61\x7f\xa1\x5e\x2e\x8a\xd7\x8a\x7a\x7b\x16\x43\x75\x3e\x1c\x13\x90\xfa\x94\xa1\x85\x2b\x0d\x4f\xd6\x20\xaa\x4b\xe5\x88\x23\x4b\xb5\x78\x3d\xf6\x27\x36\xbc\x2a\xf8\x5e\xea\xce\xd1\xa7\x0f\x64\xfe\x73\xc3\x7d\x3d\x31\xf8\x6c\x1c\x36\x63\x11\xbf\xa4\x9c\x7d\xa5\x53\x6c\xd6\xf4\xe1\x5b\xf5\xdb\xd1\x64\x60\xaa\x70\xe0\x33\xd0\xb5\xb2\xbf\x50\xbc\x28\xb9\x4b\xdc\x30\x8f\xa1\xbb\x3c\x1c\xf5\x78\x58\xca\x55\x3a\x07\xbe\x9a\x1d\x5c\xec\x82\x5f\x3a\xdb\x62\xb3\x09\xca\x73\xc2\xdb\xaa\x17\xfe\x3b\x0f\x32\x0a\xea\x7b\x31\x7b\xa0\x2c\xa0\x2c\x13\x16\x89\xf3\x14\xa8\x41\xff\x7e\xeb\xb9\x1c\xa6\x46\xac\x2c\x14\x36\x28\x79\xa4\x84\xe1\x04\x09\xf5\x18\x22\x6c\xef\x26\x80\x0d\x55\x99\x80\xe9\x33\x70\xeb\x36\xc8\x2c\x19\x1f\xd0\x65\x13\x9c\xef\x70\x20\x70\x50\x26\x11\x26\xd5\x57\x57\x5b\xaf\x36\xab\x99\x0b\x1f\x0d\x8e\x2d\x0e\x0e\x51\xca\x10\x2c\xd6\x3b\xe7\x65\xb1\xd3\x1a\xbd\xe5\xaa\xeb\x39\xd5\x70\xa0\x6c\x7e\xed\xe9\xd2\xe3\xf3\x46\x83\x04\x6d\xb2\x32\x50\x2a\x49\x5b\x0d\x11\xa1\x0a\x2f\xe6\xdb\xdf\xa8\x97\xe9\xa6\x68\x80\xcb\x03\xcf\x20\x9a\x66\xa0\x07\xf4\x24\x4c\x46\xbd\xdd\x41\x2a\xb2\x10\x1f\x85\xd2\xfa\xa6\xca\x49\xa0\xdc\x6e\x1f\xe0\x38\x18\x4d\x72\xfa\x52\x39\x6e\x4b\xa3\xbd\x5c\x94\xda\xce\xdf\x2a\x4c\x7b\x4a\xc0\xa7\x4f\xc4\xb9\x4c\xd1\x4b\xfa\x10\x78\xb4\x7b\x68\x38\x42\x17\x09\x26\xc6\x06\xd9\xb0\x61\x80\x09\x43\x48\xa1\xe7\xa6\x04\x45\x49\x19\x32\xff\x4b\x6b\x43\x76\x61\xb5\x12\x67\xad\x7a\xbf\x98\xbf\xcc\xfe\x82\x86\x4f\x35\xb5\xb5\x11\xdb\xb0\xe0\x4b\xb1\x89\xc1\x29\xa1\xba\x67\x93\x5e\x47\x54\x00\xbc\x1a\xfd\x05\x9d\x21\x0c\xbe\x5e\x66\xf6\x7a\xa0\x21\x6d\x3d\xbe\xa1\x0f\x6d\x65\x3a\x16\x53\xf9\x84\xf3\xe0\x9e\x45\x50\x60\xf4\x4e\x5a\x1d\xde\x29\x1f\xd5\x4b\x6a\x0a\x3f\xe7\xac\xf2\x81\x43\xb7\xfb\xf9\x69\x57\xd2\xf0\xc9\x21\xfd\x5b\xd2\x1f\x12\xcd\x87\x12\x4c\x16\x38\x04\x3f\xe3\xee\xef\x92\xf7\xdd\x5d\xff\xc5\x82\x7c\x8f\xac\xaf\x85\xbb\x76\x61\xb0\x6f\x4a\xd3\x19\x66\xad\x24\x7f\x05\x82\xec\xa2\x2a\xc6\x0f\xa8\x07\x2f\xcc\x77\x35\x87\xdb\xc8\xdd\xb9\x21\xdb\x3d\x88\xe0\x07\xc2\xcd\xd8\xa3\x4b\x36\x10\xc7\x07\x68\xd0\x61\xe0\x6e\x43\xe8\xdf\xdb\x3c\x83\x1e\xee\x66\x3a\xc7\x56\xde\x43\x2d\x66\x70\xfa\x7d\x74\x0f\xd8\xdb\xe5\x89\xf7\x3e\x0f\xf8\xbe\x3a\xf1\x96\xe2\x40\xaf\xe7\x99\x50\xdd\x0d\x18\x00\xf5\x90\x6b\x1e\x90\x1f\xb8\x25\x8f\xc6\x5c\x9e\x8d\xad\x1f\x52\xa2\x5e\x74\x22\xed\xc0\x53\x4b\x1b\x9e\x4c\xff\x2f\x4b\x98\x7a\x6d\x90\xba\x01\xa7\xf5\x35\x92\xf6\x6b\x71\x07\x57\xd6\x37\x38\xe2\x80\x1e\xe7\xe4\x0f\xbe\x66\xc9\x31\xc0\x50\xe7\x31\xb3\x1c\x89\xf0\xfc\xdf\x59\x9d\x4c\xf2\x17\x72\xd2\xcb\xaf\x21\xaa\xb6\x12\x91\xc9\xf7\x71\x0e\x01\xbe\xa5\x32\xd0\x30\x81\xbb\xa6\x22\xe1\x50\xa2\x35\x29\x40\x56\x64\xe5\x68\x5b\x0d\xb4\xdb\x43\x63\x9c\xb5\x6a\x9c\xc6\x78\x5c\x89\x7f\x74\xcd\x55\xe8\x2a\xf4\x8e\x5c\xe6\xde\xd3\xb4\xf0\xe0\xee\xb1\xee\x03\x44\xd9\xc6\xa4\x74\xea\x4d\xa3\xb2\x52\xbd\x26\xf3\x56\xc2\x63\xb3\xab\x4f\xbd\x72\xb8\xd1\xf0\x66\x49\xab\xed\xd6\xe8\x39\xe4\xb4\x6e\x46\xaf\x23\x39\xee\x25\x39\xee\x08\x8e\x26\x44\x55\x18\xeb\x1b\xb9\x72\xb7\xb0\x18\xae\xf8\x62\x1a\x13\xce\x57\x2d\xd6\x35\xc6\x37\x3a\x64\x87\x05\xeb\x13\x81\xd9\x1a\xfb\x5f\x77\x6c\x28\xce\x9a\x95\x64\x40\xa0\xeb\xf7\x80\x63\xb0\x66\x73\x2b\x8f\x60\xca\xfd\x44\x4f\x1b\x6c\xf1\x5b\xeb\xd5\x9d\x8b\xa0\x53\xc7\xfd\xd1\x65\x66\x7f\xfe\x77\x28\xd4\xc1\xa6\x71\xe7\x7f\xc4\xaa\x33\x3d\xe1\x04\x5c\x74\x41\x81\x49\x16\x12\x73\x48\x34\xcd\xb4\xe0\x70\x18\x24\x46\x2f\xb3\xfa\x9e\xfb\x55\x9c\x1a\x03\x8f\x60\xd4\xcb\xa0\xe8\xad\xa5\xe5\x8b\x6b\x84\x8e\xee\xdb\x48\x64\x85\x46\x11\x98\xdc\x73\xd9\x93\xb7\xd4\x3b\x21\xb3\xc8\x12\xad\xbf\x38\x2e\x62\x32\xbb\x2d\x6f\x16\xb1\xfb\x21\x5d\xb2\x77\x39\x14\x2b\xca\xca\xdb\x7c\xdf\xd2\xaa\x84\x47\x6e\x2f\xa0\x5a\x27\xad\xc0\x40\x93\x3e\x49\xb6\x14\xff\x75\xa4\x2b\xac\x7e\xd2\x75\x06\x16\xf7\x13\xcf\xdf\xf3\x0f\xda\x95\xe2\xa9\xca\xd9\x91\x8a\x2f\x2e\x1b\xc5\xa5\x1a\xde\xe2\xe0\x0f\x97\x96\x9f\x47\x09\x37\x14\x54\xe8\x47\x83\x01\xd8\xc7\x11\x51\xe9\x38\xa2\x0f\x3b\x40\x2c\x60\x8e\xa3\xd7\x97\x07\xc0\x34\xe6\x16\x65\x0f\x41\x5a\xd6\xcd\xd9\xad\xb3\xba\x71\x96\xd3\xc9\x42\x89\x49\xe9\xbe\x16\xec\x7c\xb2\x98\xfc\xd5\x9e\xdb\x8b\x95\xf3\xeb\xd2\xbe\x73\x16\x93\xb9\xad\x60\xd5\xde\x79\x16\xf3\x76\xb2\x5c\xfe\xe3\xe6\xee\x52\xc1\xce\xd4\x8b\xa5\xfe\xc0\x95\xe5\x5a\xfc\xea\x43\x8c\xd2\xe3\xc3\xfa\x97\x96\x69\x1c\x45\x39\x0b\x3c\xd1\x2c\xc5\x26\x0c\x3f\x9c\x50\xf5\xb6\x11\x0d\x49\x2d\x37\xbd\xe7\x8d\x8b\x30\xc8\x59\x8b\x7e\x09\x32\xe3\xc4\x1c\xfc\x37\x00\x00\xff\xff\x46\xdf\x7b\x7d\x3f\x1e\x00\x00")

func iloPyBytes() ([]byte, error) {
	return bindataRead(
		_iloPy,
		"ilo.py",
	)
}

func iloPy() (*asset, error) {
	bytes, err := iloPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ilo.py", size: 7743, mode: os.FileMode(493), modTime: time.Unix(1468236799, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _iloToml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x49\xcc\x4b\x2f\x4d\x4c\x4f\x55\xb0\x55\x50\x2a\xa8\x2c\xc9\xc8\xcf\x53\xe2\x82\x89\x85\xa5\x16\x15\x67\xe6\xe7\x01\xa5\x8c\xb9\xb8\xa2\xa3\x8b\x52\x0b\x4b\x33\x8b\x52\x73\x53\xf3\x4a\x62\x63\xb9\xf2\x12\x73\x91\x34\xe9\x66\x14\x64\xe6\xe4\x2b\x71\x95\xc1\xb5\x28\x19\xeb\x59\x28\x01\x02\x00\x00\xff\xff\x5e\xdd\x05\xf1\x5e\x00\x00\x00")

func iloTomlBytes() ([]byte, error) {
	return bindataRead(
		_iloToml,
		"ilo.toml",
	)
}

func iloToml() (*asset, error) {
	bytes, err := iloTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ilo.toml", size: 94, mode: os.FileMode(420), modTime: time.Unix(1467192632, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"idrac.py": idracPy,
	"idrac.toml": idracToml,
	"ilo.py": iloPy,
	"ilo.toml": iloToml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"idrac.py": &bintree{idracPy, map[string]*bintree{}},
	"idrac.toml": &bintree{idracToml, map[string]*bintree{}},
	"ilo.py": &bintree{iloPy, map[string]*bintree{}},
	"ilo.toml": &bintree{iloToml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

