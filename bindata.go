// Code generated by go-bindata.
// sources:
// bundled_scripts/idrac.py
// bundled_scripts/idrac.toml
// bundled_scripts/ilo.py
// bundled_scripts/ilo.toml
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _idracPy = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x1b\xfb\x4f\xe3\x46\xfa\xf7\xfc\x15\x73\xa9\x2a\x27\x2a\x38\x09\x0b\xdb\xdd\xdc\x66\xab\x90\x04\x1a\x75\x03\x1c\x81\x76\x4f\x1c\xb2\x8c\x3d\x01\x17\x3f\x52\x8f\x4d\x48\x11\xff\xfb\x7d\xdf\x8c\xc7\x1e\xbf\xc2\x06\x6e\xa5\xcb\x4a\xd8\x9e\xf9\x5e\xf3\xbd\x67\xec\xfd\xe1\x1f\x9d\x98\x85\x9d\x1b\xc7\xef\x50\xff\x81\x2c\xd7\xd1\x5d\xe0\x37\x1a\x8e\xb7\x0c\xc2\x88\xfc\xc9\xe0\x21\xb9\x0f\x98\xbc\x0b\xa9\xbc\x63\xeb\x74\x30\x8e\x1d\xbb\xb1\x08\x03\x8f\x3c\x7a\xae\x4e\xa3\x90\x52\x92\x4c\x4d\x5c\xea\x51\x3f\xba\xc0\x21\x93\x91\xc9\x45\x23\xa3\xf4\x57\x4c\x59\xc4\x04\xa2\x7c\xd2\x97\xa6\x75\x6f\xde\x52\xa6\xc7\xa1\xeb\x3a\x37\xef\x74\xfa\x68\xd1\x65\xe4\x04\x3e\x93\x34\xa7\x3e\xa3\x56\x1c\xd2\x73\x81\xf3\x87\x19\xfa\x8e\x7f\xdb\x68\xcc\x47\xbf\x4e\x66\x43\x32\x20\xcd\xbb\x28\x5a\xf6\x3b\x1d\x66\xdd\x51\xcf\x64\xba\xed\x45\x0b\x3d\x08\x6f\x3b\xab\x1b\xea\x75\x56\xcc\x72\xbc\x4e\xaf\x03\x7f\x77\x05\x44\x67\xaf\xd9\xf8\x3a\xfb\x72\x32\x37\xe6\x88\xfd\x94\xa0\xaf\x56\x2b\x7d\xf5\x8e\x23\xee\x75\xbb\xef\x3a\xdd\x83\x0e\x0b\xcc\xe5\x2e\x28\x8b\xba\xc1\x92\x3e\x4b\xac\x3f\xe6\x93\x13\x15\x51\xf2\x05\x6d\x20\x82\x60\xcd\x90\xc8\x7e\xa7\xfb\x11\x94\x1d\x7b\x34\x34\x71\x4d\x0a\x89\xd9\xb0\x92\x46\x51\x76\xcf\xf4\x41\x76\x7e\xd5\x1f\x99\x9d\x12\x38\xe9\x19\x87\xc3\xf9\xa4\x92\x04\x75\x5d\xdd\x0a\xbc\xfa\xe5\x77\x7e\x64\x40\xe8\x07\x72\x4c\x7d\x1a\x3a\x16\xe1\xe4\x77\xad\xd0\x5c\x44\xd4\x26\xb8\x06\xe2\x51\xc6\xc0\x2e\x8d\xf9\xe9\xf0\xcc\x98\x9c\x5c\xce\x84\xc8\xc6\xc5\x64\x76\xf6\x65\x78\x81\x8c\x35\x4d\xfb\xf4\x0b\xac\x99\x3c\xd0\x90\xc1\xe2\x06\xcd\x9e\xde\x6d\xfe\xf2\xb9\xf1\x89\xf5\x27\x89\xce\xd0\x43\x7c\xd6\x67\x83\xe6\x37\x2a\xb9\x99\x60\xac\x98\x39\x28\xda\xb5\x52\xbf\x1f\x3a\xa6\x6d\x87\x20\x2d\xf8\x44\x86\x0c\xeb\x29\xa1\xbf\xa0\xda\x0c\x99\x96\x71\x5f\x36\x6d\xf3\x73\x83\x10\x58\xf9\xaf\xd4\xb4\x69\x88\x0f\xf0\x08\xab\xe8\x0f\x2d\x9c\x26\xac\xef\xc5\x2c\xba\xf4\x61\x92\x45\xa6\x6f\x0f\x9a\x51\x18\xd3\xe6\xe7\xad\x19\x75\x26\xc9\x3d\xfd\xd4\xc9\xe8\x2b\x0c\x2f\x82\x5a\x66\x4f\xb0\x56\xb0\x2a\x86\xa8\x01\x01\xf7\x2c\x28\x5c\x04\x29\x36\xcc\xf7\xcf\x29\x0b\xe2\xd0\xa2\x97\xe7\xd3\x7a\x42\x61\x02\xc4\x49\x14\xb0\x14\x59\x66\xc2\x8d\xa6\xe3\x5a\x4a\x98\x4c\xfa\x4f\xf8\x37\x91\x26\x45\x51\xc8\x9c\xd3\xa5\xbb\x96\x62\x4a\xbd\x0a\xb3\x7f\x93\x02\x55\x27\xe9\x84\x81\x4b\x3b\xa6\x1f\xf8\x6b\x2f\x88\x59\xa2\xc4\x84\x98\x60\xd9\x29\xf1\x4c\x54\x33\xa7\x2e\xb5\xa2\x20\x9c\xd3\x48\x91\x45\x9d\x21\x27\xa6\x47\x07\x4d\xc3\x80\x78\xf3\xe1\x96\x41\x82\x43\x7d\xb1\x64\x3e\xd5\x97\x44\xc8\x58\x56\x30\xf8\xd4\x51\x1d\x0a\xbc\xeb\x30\xb0\xd7\xa9\x44\xd4\xef\xa7\xbe\x50\x10\xe7\x14\x52\xa8\xe7\xfc\x4d\x27\x8a\xdf\x14\x40\x66\xe6\x63\x92\xad\x19\xfa\xc5\xa3\x41\x93\xa7\x54\x44\x15\x22\x95\xb2\xc8\x14\x45\x14\x52\xe1\x9d\x8c\xfb\xcf\x0d\xc8\x0e\x8d\xa3\x91\x31\x3d\x39\x3a\x35\x26\x5f\xcf\xce\x27\xf3\xf9\xf4\x14\x53\x5e\x48\x31\x39\x2d\x1d\x97\xb6\x42\xad\x75\xd5\xdd\xfd\x78\xfd\x53\x7b\x57\x5c\xb5\x76\xa3\x31\x1b\x8e\x0c\x00\x3f\x9a\x7e\x35\x0e\xbf\x0c\x47\xbf\x7d\x99\xce\x2f\x00\xed\x8a\x4b\xa0\x1d\x74\xe1\xdf\xbe\xb6\x43\xb4\x77\xef\x0e\xba\xef\x8f\xf0\xae\xdb\xfd\xf8\xe1\xe7\xf7\xe2\x0e\x7f\xe9\xdd\x08\xef\xf6\xba\xfb\xbd\x83\x77\x78\xd7\xdb\xff\xd8\xdb\x83\x59\x41\xa9\x0b\xae\x21\x28\x1d\x4d\x8e\xe0\xc7\x21\x86\x47\x1f\xf7\x04\xfe\x5e\xf7\x83\xb8\x1b\x4f\x86\xe3\xbd\x91\x80\x1b\x8e\xf7\xc7\x80\x7f\xdd\x98\x4f\xce\xa7\xc3\x2f\x15\x02\x9e\x04\x3e\x05\x50\x04\x3f\x09\x22\x32\x7c\x30\x1d\xd7\xbc\x71\x29\x0e\x7c\x7d\xe4\xff\xf0\x76\x17\x7f\x78\x73\x75\xe9\xdf\xfb\xc1\xca\xbf\xce\xc4\x17\x4b\x10\x42\x22\x8d\xf9\x92\x5a\xce\xc2\xa1\x36\x82\xfc\xfb\xb7\x5e\x77\x34\xe6\xb2\xee\xbd\xdb\x3f\x78\xff\xf3\x87\x8f\x5d\xc1\xcc\xe7\x3c\x20\xf8\x0f\x29\x39\x72\x5c\x17\x32\xf9\xe1\x9a\x9c\xea\x13\x7d\xa6\x73\x99\x1b\x36\x5d\x10\x3f\x08\x3d\xd3\x05\xcf\x30\x3c\xd3\x32\x92\xa8\x68\x29\xf7\xed\x3e\xe7\xac\x8c\xc0\xda\x94\x27\x3d\x5e\x2e\x69\xd8\x6a\xeb\x21\xc4\x07\xf8\x76\x4b\xe3\xeb\xe8\x83\xe9\x10\x2f\xa4\x51\x1c\xfa\x2a\x42\xa3\xd1\xa8\xaf\xf6\xb6\xc3\x50\x3b\xc6\x4a\x14\x75\xd6\xaa\x2e\xf6\xe0\x16\x0d\xcb\x35\x41\x96\xa9\x1d\x9a\xd6\x24\x0c\x83\xb0\x35\x91\x9d\x42\x22\xf2\xd2\xe4\xcc\x12\xb8\xf1\xf9\x70\xd4\x0a\x6e\xfe\x84\x70\x82\x79\x0e\x80\xeb\x37\x0c\xc7\x77\x22\xc3\x68\x41\x40\x2e\x76\xc8\x5d\xc0\xa2\x1d\x12\x33\x1a\xee\x70\xfc\x55\x10\xda\x09\x39\xfc\x21\x90\x8e\x30\xa0\x03\xbc\xe4\x27\x10\x0d\x26\xf0\x92\x9f\x90\x94\x60\x52\xde\x66\x12\x84\xb1\x6f\x40\x00\x40\x80\xd9\x89\x10\x5c\x62\x03\xb3\xc5\x0e\x91\x79\x62\xa0\x85\x41\x10\x75\x6c\x48\x23\x9a\x22\x50\x3e\x7f\xcb\xde\x87\x41\xfe\x7b\x7a\x16\x51\xdb\xd4\x17\x68\xe2\xa8\x95\xca\xde\x4e\xb1\x6f\xb1\xde\x43\xdc\xda\x06\xe6\x5b\x14\x1d\x2e\x3a\xfe\xe9\xb5\x32\xa8\xa4\xf4\xc3\x74\x5d\xf1\x97\x2c\x52\x14\x61\x79\x51\x00\x06\xa2\x2f\xd3\x21\xcd\x87\xce\xb2\xa5\x75\xb4\x36\xf9\x89\xc0\x05\xfe\x2a\x2b\xcd\xe1\xe6\x97\x35\xc8\x3f\xe6\x41\x51\xda\x41\x7e\x21\x79\x80\x54\x83\xf2\xa6\xc8\x2a\xcb\x74\x83\xbd\x83\x83\x6c\x36\xd3\x40\xe2\xc4\x93\x0b\x1d\x9a\x2d\xa1\x48\x03\x12\x9f\x6d\x60\x65\xc9\xaf\x1a\xc5\xd5\x8a\x36\xd0\xca\x36\x28\x08\x21\x54\x3c\x48\xae\x8a\x0c\x6d\xc5\x55\x33\x96\xc2\x4f\x50\x17\x12\x55\xf1\x89\x66\xb3\x79\x11\xae\x49\x04\x65\x1f\x10\x72\xed\x1b\x0e\x2e\x81\x3d\x77\x96\x18\xab\x1f\x41\x59\xc9\x8d\xc9\x1c\x2b\x25\x60\xc6\xd1\x1d\xa8\xc3\xb1\x78\x9d\xd0\x21\x87\x45\xe0\x89\xd1\x9d\x19\x91\x15\x25\x76\xe0\x6b\xd0\xfe\x83\x22\xa1\xa5\xf7\xd7\xc0\x84\x61\xb7\x47\x1c\x5f\x2c\x12\xee\x33\xf9\x21\xbd\x90\x07\xc8\x2f\x36\x18\x87\xcc\xe7\x5f\x88\x45\xc3\x08\x92\x17\x90\xa6\x3a\x19\x02\xfa\x22\x70\xdd\x60\x85\x92\xc8\xac\x40\x56\x90\xad\xe0\x69\x17\xc5\x4f\x29\x71\x11\xb9\x68\xe4\x8e\x57\x40\x62\xde\x9a\x8e\xaf\xab\xcb\xce\x0c\xc6\xeb\x8a\x4c\x32\xb0\xe0\x92\x91\xf2\xfa\x07\xf1\xcc\xb2\xf2\xa5\x2e\x06\xad\x34\xbc\x77\xf2\x01\x5d\x30\x23\x34\xbe\xce\x62\x3d\x38\x32\x5d\x56\x20\x23\x44\x66\x83\xa7\xdc\x28\xfe\xb4\x51\xe0\x47\xa0\xed\xdd\x8b\xf5\x92\x6a\x7d\xa2\x99\xcb\xa5\x9b\xa8\x9e\xb7\xc2\x3f\x41\x07\xf3\x4f\xeb\xce\x0c\x19\x8d\x06\x97\x17\x47\xbb\x1f\xb4\x3c\xed\xe7\x2a\x97\x75\x30\xb5\xc3\x2e\x4b\x0f\xee\xfb\x39\x68\x98\x08\x75\xe8\xb8\xa2\x98\x41\xda\xb1\x21\xac\x07\x64\xbf\xdb\xeb\x97\x04\x0b\x4d\x87\x51\x35\xbf\x36\x87\xa8\x7c\x8a\xf7\x3a\x6c\xc2\xb8\x59\x79\xb2\xc3\xf8\x25\x60\x68\xa9\x15\xbd\xd9\x6e\x6c\xa4\x54\xe2\xd5\x9c\xc3\x42\xf9\x5c\x9f\x40\x9f\x05\x9b\x3d\xda\x27\x4f\xcf\xff\xf1\x93\xb4\x8f\x0f\xcd\xca\x2c\x93\xf2\xd0\x23\xfa\x18\xa5\xe1\xb0\x53\x02\x2a\x98\x2a\x93\x90\x2f\x88\x19\x4b\x13\x16\x07\x9b\x98\x27\xf6\x8c\xed\x4b\x07\xae\x47\x66\xec\x46\x59\xec\x0e\x92\x3d\x62\x09\xd5\x75\x78\x41\xb8\xba\x2e\x4e\xf8\x5c\xbf\x32\x6f\x08\x11\xdb\xfa\xc2\x81\x4c\xaf\x70\xcd\x19\x4d\xc1\xcc\x9b\xa4\xc0\x0b\x01\x0c\xa4\x07\x01\x14\x92\xec\xc9\xf1\x55\x12\xba\x13\x41\xbc\xc1\x78\xab\x7d\xbd\xa5\x49\xb4\x9c\x49\x52\x2b\xec\xc0\x03\xe3\x06\x4a\xf8\xe0\xa0\xb6\xd1\x34\xd2\x24\x44\xdb\xd1\xf4\x3f\x03\xc7\x6f\x29\x6b\x69\x57\x58\xaa\xc6\x50\x49\x16\x16\x6a\x6c\x88\xf6\xc5\xb8\xa5\x91\x01\xa9\x81\x1a\x98\x7e\x5a\x0e\x2e\xc8\x10\xe5\x22\x4c\x52\x22\x3f\x8e\x18\x90\xdc\x94\xae\x16\x5d\x6d\x3c\x9a\xce\x8c\xf9\x9a\x45\xd4\xfb\xdd\xa1\xab\xa4\x73\xe1\xbb\x3f\xc3\xef\x01\x6e\x7e\x8b\xfd\x23\x69\x16\x30\x44\xe2\xf9\x8b\x6f\xbe\x13\xef\x79\x4e\x9b\x62\xa9\x2f\x18\x9b\x02\x3c\x83\x6b\x11\xbd\xa4\xbe\xc4\xd3\x76\x0a\x03\x78\xd0\x50\x1e\x83\x4a\x9c\x0d\x4a\xa9\xc5\x88\xec\xc1\x2c\x88\x4a\xec\xdb\x50\x17\xdc\xff\x4c\xd7\x6d\xfd\x25\x66\x65\xa6\x10\x40\x99\xd3\x95\xe3\x7f\xea\x03\x08\xc0\x45\x90\xf7\xd9\x0a\x32\x30\x38\x1b\x54\x8a\x82\x11\x64\xf4\x43\xfd\x87\xf0\x01\xa6\x59\xce\xd3\x3c\xf0\x49\x97\xd7\x7b\xc8\x74\xa0\xab\xda\xb0\x4e\xa4\xb9\xea\x5e\x8b\x70\x29\x67\x8c\xa7\x67\x05\x37\x5d\x35\xd1\x66\xa6\x1f\x2f\x4c\x0b\x5c\x85\x86\x5a\x31\xe8\xb9\xeb\xe8\xa2\x11\xc9\x3a\xd6\x26\x64\x33\x4b\x6f\xee\x40\x09\x29\x20\xbc\x41\x0c\x5c\xe9\x66\xfe\x4a\xda\x16\xb7\xcf\xfc\x2f\x24\x54\xc7\x04\x25\xc5\xde\x0d\x15\x75\xac\x46\x86\x5a\xde\xa3\x3b\x48\xc4\x0e\x9b\xd3\xf0\xc1\xb1\xe8\x85\x79\x2b\xe5\xc8\xf3\x97\xd6\xcf\x33\x44\x5f\x00\xbb\x16\x37\x34\x8a\x5f\x70\xbb\x5e\x69\x39\x34\xed\x1a\x24\xcd\x8d\xa8\xdd\xbf\x40\x51\x43\x96\x82\xdf\x84\x3e\x8d\x58\x29\x64\xd3\x76\x07\xc1\x60\xdb\xd0\x52\x3a\x9b\x1f\x08\xd5\x6f\x75\x32\x8a\xc1\x0b\xfd\x08\x36\x86\xc9\x36\xbd\x4f\x0e\x0f\xfb\xa3\x51\x7f\x3c\xee\x4f\x26\xfd\xa3\xa3\x7e\xb7\x9b\xe2\x44\xe1\xba\x5f\x68\xf8\xac\x54\xab\xdb\x5a\xb5\xc4\xb9\xda\xc2\x59\x1d\xe0\x5b\x12\x32\x8c\x40\xe3\x37\x71\x44\x45\x3e\xad\x10\x07\xb7\x6b\x6a\x19\x80\xd1\x2a\xb0\xda\xdd\x5a\xbb\x58\xe3\x61\xec\xaa\xff\xfe\x1a\x4d\x59\xb5\x81\x2e\x97\xfb\x0a\x39\xb2\xbd\x5b\xc1\x2a\xe8\xdb\x9c\x6b\xc9\x34\x67\x61\x60\xc7\x56\x84\x87\x1e\x7d\x88\xaa\x08\xe0\xce\xdb\x64\x92\x58\x9b\xf4\xba\xc7\x64\xff\x8c\x7c\x3d\xd8\xeb\x76\xa6\xb0\x5f\x27\xe1\xc9\x78\x44\x76\xb7\x32\x1f\x32\x7f\xb5\x01\x15\xf9\xfe\x07\xa6\x4b\x44\xa9\x30\x1e\xea\x9d\x4f\x17\x30\xbc\x7c\x9f\x80\x3f\xac\xdf\x5e\x0a\xaf\x33\xe8\xfe\x22\xd5\xe9\x15\xc2\x2e\xf5\x5b\x5e\x1b\x3b\xb6\x1e\xf6\x5b\x92\x4f\x19\x16\x7f\x16\xf4\x95\x8e\x1f\xd3\xb2\xa5\x3d\x1d\x7a\x4c\xe8\xad\x81\x56\xe5\x7a\x34\x92\xd4\x69\xcf\x2b\x55\x5f\x0e\x93\x77\x07\xb6\xa4\x14\x68\xe1\x44\xce\x21\x2e\x71\x43\x10\xc5\x3e\xd4\x40\x77\xbd\x43\x1c\xd8\x34\x50\xa8\x7f\x62\x23\x81\x1e\x41\x35\x06\x1e\x0d\xa3\x4b\x13\x0b\x25\x59\x38\xd4\xb5\xb9\x3e\xa2\x3b\x87\x41\xab\x1d\x28\xd4\x60\xe7\x71\x67\x3e\xf0\x1d\x4c\x64\xde\x53\x24\xc7\xdf\x1c\x28\x16\xed\x08\x0d\x16\x7b\xe0\x0a\x3b\x70\x91\xb1\x5c\xc7\xe2\xb4\x45\x0c\x64\xfb\x07\xea\x02\x6e\xf3\xd8\xb9\x35\x6f\x9c\xa8\x59\x63\xcc\x94\x48\x8f\x1c\xdf\x2c\x99\x8a\xcd\x68\x05\x28\xcb\xd5\x42\xf9\xd3\x7a\xdd\x19\x14\x43\xa0\xd2\x25\x33\x24\x53\x6e\x88\x00\x84\xc3\x00\xc8\x06\x98\x63\xa4\x92\x0a\x53\x49\xe5\x58\x32\xaa\x03\xd9\x4f\x40\xf6\xeb\x41\x40\x86\x63\x29\x4b\x05\xcc\x73\xc9\xb7\x19\xaa\x4f\x28\x40\xbf\xa7\x6b\x56\xe3\xdb\xac\x46\xcb\xf2\x27\xb5\x2d\x28\x5d\xb1\xeb\x4a\xa8\x9b\x90\x9a\xf7\xf9\xbe\xb9\x64\x0c\x95\x5a\x9d\x03\x24\xde\xce\x47\xf3\xde\xbe\x58\x19\xc9\xfb\x8d\x8a\xca\x74\x64\x7a\x8e\xbb\xfe\x5d\xcc\xf7\x49\xef\x40\xef\xea\x7b\x3f\xd7\x27\xb3\x07\xa5\xc2\x6f\x9b\xca\x72\xbc\xde\x9e\xcc\x84\x28\x55\xf9\x1f\x66\x1a\xdb\x74\xd2\x27\xd3\xd1\x36\x6d\x74\x02\xfe\xaa\x1e\x5a\xe2\x7e\xe7\x06\x3a\xed\x56\xb2\xec\x8d\x9e\x2d\xec\xc6\xbb\xe0\x7c\x5f\xad\x9e\xcf\x61\x55\x4d\x5b\x99\x52\x6a\x2a\x96\xf9\x52\xd2\x96\x39\x39\x5f\x77\xd3\x69\xe9\xc7\xc5\x3c\xdc\xc8\x9b\xb5\xe8\xb8\x99\x63\xc8\xca\x5c\x4c\x4d\x4d\x60\xd3\xec\xa3\x80\x3b\x85\xf1\xb4\x85\xc7\x69\x7c\x28\x00\x88\x48\xea\x0b\xd1\x0a\x73\x0b\x27\xf4\x56\x66\x48\xa5\x24\x00\x06\x77\x19\xd0\x73\x49\x30\x26\x6b\x95\x1c\xc8\x1d\x2b\xa7\x50\x6a\x6f\xb9\x0c\x03\x0b\xda\x22\xd8\x61\xbe\x65\x3f\x38\x3a\xbb\xdc\xc6\x8b\x13\xf0\x57\x79\xb1\xc4\xfd\xee\xdb\x40\xec\xc2\x5f\xe1\xc3\x15\x1d\xd7\x4b\xfb\x9e\x8a\x9d\x86\xd0\x7d\x21\x01\x02\x2d\xfa\x88\xd6\xf0\x2b\x0e\x0f\x36\xe6\x45\xee\x4f\x75\x52\x4c\x7d\x7c\xa7\x68\xd1\xe9\xb8\x98\x18\xb9\x3a\xf2\xdb\x40\xd1\x71\x69\xba\xd6\xbe\xda\xed\x5d\xd7\x1e\x13\x89\x14\xda\xfa\xdd\x74\x63\x91\x3f\x77\xa0\xc1\x05\xe9\xf9\x7d\xfb\x85\x30\x4e\x74\x2f\x9d\x39\x1f\x6b\x1a\x2c\x93\x32\x28\xaa\xa8\x85\xd7\x15\x83\x13\xbe\xe7\x3a\x5d\x9c\x49\xdf\x1f\x71\x92\x1b\xf7\x9f\x85\xc9\xfc\xe6\xbc\x22\xb2\x35\x1e\xd1\x6f\x12\x73\x66\x3e\x8e\xdc\xc0\xba\x9f\x73\x4a\x5b\x49\xc7\x3d\x85\x33\x87\x6b\x61\x6e\xc1\x4b\x21\x4c\xbe\x72\x57\x77\x76\x29\x8a\xe9\xb7\xee\xd7\x39\x53\xd7\xbc\x01\x4f\x2f\x69\xea\xb9\x5d\xde\xf9\xe6\xd2\x93\x47\xbd\x20\x5c\xbf\x25\x35\xcd\x38\x85\x6d\xb2\x53\x86\xf1\xaa\x04\xa5\xa0\x7f\xf7\x1c\xc5\xd5\x76\x95\x02\x3d\x6d\xf0\x51\x8d\x1f\x20\xd5\x1f\x3e\xbe\x3e\x7f\x6c\x3a\x44\x7a\xc9\x31\xde\xc8\xb9\xea\xdc\xe8\x25\x96\x45\xd7\x64\xce\xdf\xf4\x4d\x71\x3a\x47\x02\x5b\x85\xe7\xdb\x73\xc3\x76\x39\xe1\x79\x73\xf5\xe2\x70\xd7\x6a\xd8\xd9\x0e\xbb\x7f\x53\x43\x70\x76\xb7\x66\x8e\x65\xba\x63\x20\xb4\x4d\xec\x15\xf1\x5e\x15\x81\x25\x22\xff\xaf\xbd\x82\x12\x38\x9b\x76\x36\x5b\x47\x5e\x4d\x43\x91\xe5\x03\xfe\xee\xa6\x3e\x1f\xa8\x82\x55\x9d\xf1\xbe\xf2\x7c\xf7\x9b\xca\x85\xd2\xae\xe3\xd1\x9d\xe3\x1b\x37\xeb\x88\xb2\x4d\xfa\xd1\x90\xaf\x56\x13\x99\x53\xff\x10\xf1\xcb\xea\xc9\xf8\x54\x9e\x21\x6f\xc5\x87\x53\x10\x6d\xc5\x06\x46\x9b\xfb\x1a\x25\x0f\x95\xb7\xfc\x55\x83\x65\x1d\x99\xf8\x06\x5b\x1d\x91\xea\xc5\x03\xb0\x6e\x39\x4b\x92\x0e\xe9\x75\xf7\xf6\xf3\x97\xcd\xc9\x32\x77\x8e\xdd\x2f\xe8\x8e\xf3\x57\x47\x54\xfe\x9a\xb6\xa9\x27\xa8\xf8\xae\xa1\xa2\xc7\xaa\x82\x4a\xfb\x99\x6a\xaf\x7d\xb1\xc5\x58\x38\x37\x60\xf1\x3b\xd3\xf7\x81\xbe\x65\x86\xf6\xdb\x12\xdf\x68\x3a\xa6\xf8\x26\x61\xab\xac\xa7\x22\xbd\x2e\xe5\xe5\x28\x7c\xe7\x7c\x17\x33\x6a\x1b\x0e\x3f\xa2\x63\x34\x6a\xbd\x2d\x09\x72\x2f\x78\x4d\xf6\x6b\x8e\x29\xb3\xc0\xbb\xf8\xf7\xa3\xf5\x41\xe7\x2c\xc0\x45\xd0\xc4\x24\xb1\xb1\x26\xdf\xda\x70\xce\xba\x1b\xac\xf0\x8b\xac\x97\x4e\x16\xcc\xc8\xc2\x37\xde\xe5\x8f\xf2\x74\x46\xcd\xd0\xba\xab\x7a\x23\xb7\x65\x9a\x6c\x1e\xfd\x6b\x3c\x2e\xbe\x54\x13\xab\xd9\xf0\xd1\x02\x97\xec\x05\xe9\x97\x49\x41\x34\xf8\x77\x4b\x1c\x43\xbf\x0d\x83\x78\xd9\xea\xe5\xe8\xa9\x70\xa0\x20\x69\xe7\x17\xa8\x4b\x30\xdd\xb4\xed\x96\x42\xa2\xfd\x8d\x89\x4f\x41\x81\x28\x56\x9e\x6a\xf2\x05\xbf\x7e\x5b\x80\x8b\x68\xb5\x79\x64\xd4\xbf\xf4\x56\xe6\x41\x3d\x1b\xdf\x92\x73\x78\xf5\x84\x6b\xe3\x0b\xba\x46\xa2\xd7\x74\x3e\xd3\xa4\xc2\xf3\x4a\x4b\xe7\xf9\x9b\xc1\xec\x9c\x86\xdb\x2e\x3d\xa0\x91\xdc\x6a\x8f\x6c\x24\xbb\x0c\xa0\x86\x5f\x06\xc0\x19\x66\x8f\x1c\x5c\xec\xb9\x24\xb7\xca\x1d\x98\xe4\x24\x26\x6b\xb8\x88\x49\xce\x41\xdc\x0a\x65\x63\x6b\x29\x89\x57\xf5\x99\x92\x36\x9f\xab\x21\xcd\xe7\x38\x65\x7e\x27\xf2\x4d\x29\x8f\x4b\x2e\x2f\x66\x78\xc9\xb2\x0c\x58\xc3\xbf\x0c\xc8\x85\x29\x0f\xab\xae\xa9\x50\x48\xdc\x93\x59\xa6\xdf\xda\xf0\x15\x25\x88\x24\xbe\x9f\x84\x5a\xd0\xdc\xf4\xb1\xc1\x49\x40\xa6\x67\x44\x7e\x72\x8a\x1f\xb3\x01\x65\x72\x67\x32\x72\x43\xa9\x8f\x06\x7e\x70\x6c\x9a\x7e\x6b\x04\x74\xc5\xe7\x97\xdf\x40\x37\xfb\x9c\x30\xfb\x7c\x69\x13\xe1\xec\xf3\xcd\xed\x88\xa7\x78\xf5\xc4\x55\x9b\x81\xb6\xc5\x57\xaa\x95\xea\xab\x08\xeb\x97\x52\x41\x12\x6c\xd8\x69\xe1\xff\xe6\xd1\xed\xd8\x5b\xb2\x96\x02\x8f\x5f\x17\x36\x1c\xfc\x08\x16\x75\x60\x18\xb8\x40\xcd\x00\x7c\x68\xb6\x0c\x4d\x2c\x34\xf9\xda\x35\x60\x3a\xf5\x1f\x9c\x10\xc8\x80\xff\xb5\xb4\xe9\x99\x71\x71\x6a\xcc\x47\xc3\x13\x8d\x7f\x37\x21\xab\x68\x58\x01\x0b\xd5\x77\x78\x3c\x99\x4d\x4e\x2e\x8c\xcb\xf9\xe4\xdc\x38\x19\xce\x26\x0a\x96\xf2\x75\xec\x4b\x98\x67\xc3\xf9\xfc\x8f\xd3\xf3\xb1\x82\x9d\x3b\x52\xac\xf7\x3e\x91\xe5\xc4\x19\x5e\x66\x31\xfc\x3f\x49\xca\xdb\x21\xa1\x2b\xaa\x9b\xe1\x2d\x7e\x6f\xa1\xf4\xed\x6b\x10\xec\xd1\x89\xb0\xb8\xfc\x37\x00\x00\xff\xff\xf2\x71\xb0\xa2\x37\x35\x00\x00")

func idracPyBytes() ([]byte, error) {
	return bindataRead(
		_idracPy,
		"idrac.py",
	)
}

func idracPy() (*asset, error) {
	bytes, err := idracPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idrac.py", size: 13623, mode: os.FileMode(493), modTime: time.Unix(1467720403, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _idracToml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x49\xcc\x4b\x2f\x4d\x4c\x4f\x55\xb0\x55\x50\x2a\xa8\x2c\xc9\xc8\xcf\x53\xe2\x82\x89\x85\xa5\x16\x15\x67\xe6\xe7\x01\xa5\x8c\xb9\xb8\xa2\xa3\x8b\x52\x0b\x4b\x33\x8b\x52\x73\x53\xf3\x4a\x62\x63\xb9\xf2\x12\x73\xc1\x9a\x40\xa2\xa9\xc5\x25\xc5\x4a\x5c\x65\x70\xe5\x4a\x46\x7a\x86\x06\x7a\x06\x4a\x80\x00\x00\x00\xff\xff\x20\xd2\xea\x2d\x5d\x00\x00\x00")

func idracTomlBytes() ([]byte, error) {
	return bindataRead(
		_idracToml,
		"idrac.toml",
	)
}

func idracToml() (*asset, error) {
	bytes, err := idracTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idrac.toml", size: 93, mode: os.FileMode(420), modTime: time.Unix(1467192632, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _iloPy = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x19\xfb\x6f\x9b\x48\xfa\x77\xff\x15\xb3\xae\x4e\x80\xce\x75\x1d\x27\xed\xb5\x39\xe5\x24\xaf\x43\x6e\xad\xab\x9d\x28\xf6\xde\x43\x96\x85\x30\x8c\x63\xb6\x30\xb0\x0c\x24\xf5\x9e\xf6\x7f\xbf\xef\x9b\x19\x1e\x63\x20\x71\x56\x57\xed\x52\xa5\x82\x99\xef\xfd\x9e\xf1\x9b\xef\xde\xe5\x3c\x7d\xb7\x0d\xd8\x3b\xca\x1e\x49\x72\xc8\xf6\x31\xeb\xf5\x82\x28\x89\xd3\x8c\xfc\xc4\xe1\x43\xbd\xc7\xbc\x78\xe3\x07\xde\xdb\xa5\x71\x44\xbc\x38\x39\x10\xb5\xe8\x53\x9a\xe0\x77\x89\xbb\x4f\x82\x30\xee\xf5\x7a\xf3\xc9\xd4\xb9\xbb\xb7\x6f\x66\xff\x76\xbe\xff\x3c\x99\xfe\xe3\xf3\x6c\xb9\x22\x57\x64\xdd\x23\xf0\x18\xef\x47\xf0\xef\xc2\x18\x10\xe3\xfc\xfc\xfd\xe8\xc3\x0d\xbe\x8d\x46\x9f\x3e\xfe\xe5\x83\x7c\xc3\xa7\x7c\x9b\xe2\xdb\x78\x74\x71\xf6\xfe\x1c\xdf\xce\x2e\x3e\x9d\x8d\x61\x57\x52\x1a\x8d\x47\x8a\xd2\x8d\x7d\x03\x8f\x80\x98\xdc\x7c\x1a\x4b\xfc\xf1\xe8\xa3\x7c\xbb\xb6\x27\xd7\xe3\xa9\x84\x9b\x5c\x5f\x5c\x03\xfe\xa6\xd7\xbb\xb6\xff\x39\x9b\xda\xce\x6c\x71\x73\xeb\xac\xec\xf9\xdd\xe7\xc9\xca\x06\x29\xff\x2b\x68\xf7\xa3\xd8\xa7\xa1\xc3\xdc\x88\xf6\x2f\x49\xbf\x2f\x39\xf6\x93\x34\xf6\x28\xe7\x71\xca\x61\x75\xbd\x51\xab\x34\xdb\xd3\x94\xd1\x4c\x5b\xf4\x03\xfe\x45\x2d\x90\xf2\x79\x43\x72\x96\x73\xea\x13\x53\xd8\x8a\xf8\x31\xe5\xcc\xc8\x08\xd0\x7d\x0c\x7c\x4a\x78\xee\xed\x49\xc0\x76\xb1\x25\x89\x70\x9a\x06\x2e\x88\x91\x47\x5b\x9a\xd6\x05\x89\x68\x14\xa7\x07\xc5\xef\xd7\x5e\xcf\x5e\xfd\x60\xdf\x2f\xec\x55\x53\x93\x37\xa4\x52\x65\x40\x78\x42\x81\xbb\xcb\x7c\xb2\x0b\xd2\xe8\xc9\x4d\x29\xc1\xbf\xd7\x49\x15\xb9\x9e\x26\x4b\xab\xa9\x04\x27\x5c\xc8\xd9\x17\x16\x3f\x31\xc9\xba\xd8\x2d\xb8\x3b\x8f\x34\xe5\x41\xcc\x14\x26\xaa\x72\x77\x7f\x3b\xb5\x97\xcb\xdb\xfb\x13\xbc\xf2\x7a\x8b\xee\xdc\x28\x08\x0f\x05\xb6\x34\x90\xc4\x4c\x69\x96\xa7\x8c\x03\x30\x44\x32\x4d\xc1\x58\xdb\x1c\x72\x80\x85\x07\xb2\x8b\x53\x12\x7c\xbe\x1d\x13\x53\xbd\x9d\x93\x6c\x1f\x70\xb0\x21\x0d\x7d\x02\x2f\x34\x4a\xb2\x83\x85\xb4\x58\xfc\xb3\x2b\x39\x85\xee\x96\x86\x75\x8b\x04\xcc\xa7\x5f\x61\x61\x11\x33\x3a\xd0\xc2\x41\xb2\xe2\x01\x88\xe6\xa6\x42\x5a\x24\xea\x3e\xba\xf0\xbd\x0d\xc1\x45\xbc\x20\xa7\xdb\x56\x50\x92\x4b\x5e\x9c\x52\x5e\x2e\x81\x19\xe7\xf6\xfc\xf6\xfe\x3f\xdf\xc4\x86\x3c\xf8\x85\xea\xdc\x75\x81\x80\x7b\xcf\x0b\x5d\xce\xc9\x2c\x8c\xed\x34\x8d\x53\xd3\xfe\xea\xd1\x24\x03\x47\x5b\x97\x02\x23\x81\x5d\x80\xf2\xe9\x0e\x2c\x96\x46\x6e\x08\x24\x1d\x88\x2b\x13\xfe\x14\x08\xbc\x81\xd0\xf0\xff\x30\x4f\x12\x9a\x9a\xd6\x30\xa5\x49\xe8\x7a\xd4\x34\xde\x62\x2e\x5f\x1a\x52\x1c\xe9\x37\x04\x54\x04\x1f\x68\xe6\x80\x1a\x4e\xc0\x78\xe6\x32\x80\xdf\xc7\x3c\x1b\x10\xd0\x30\x1d\x08\xc6\x4f\x71\xea\x2b\x26\xa8\xee\x95\x0c\x80\x21\x08\x2b\x40\xd1\x34\x57\x12\x27\x8c\x1f\x02\x76\xa5\x63\x5e\x95\x24\xea\xec\x65\xe5\x43\xf6\x0e\xf2\x2f\x4b\x82\x99\xba\x4f\xa8\x18\x1f\x20\x48\x11\xee\x8a\xfb\x1b\xb2\xda\x53\xe2\xbb\x99\x4b\x78\x96\xe6\x1e\x50\xa2\x22\xd8\xa0\x82\x12\xd7\xf7\xc1\xa5\x9c\x72\xc5\x02\xfc\x23\x4a\xb0\xf4\x11\xc4\x47\x02\xeb\xd9\x81\x30\x97\x67\x87\x81\xa2\x47\xc1\x13\x1e\x94\x8c\x2a\x68\xcf\x89\xc9\x62\xe2\x85\x14\x22\x0b\x6a\x52\x16\x30\x0f\xfd\x40\xb6\x34\x7b\xa2\x94\x41\xe8\x6e\xa9\xef\x03\xf1\xc5\x6c\xca\xb1\x32\x28\x4a\xc1\x72\xba\x9c\x11\xac\xeb\xdc\x1a\x4a\x5b\xed\xea\x2a\x90\xab\x2b\x72\x2e\xd5\xc0\x07\x4c\x9d\x82\xd9\xfd\xaf\x60\xce\x91\x58\xa5\x21\xa7\xed\xfb\x67\x72\xbf\x30\x11\xb6\x86\x8d\x58\x42\x91\x23\x88\x34\x52\x18\xad\xc2\x17\xa9\x86\xa0\xd1\x10\xec\x6b\x1a\xf2\x1b\xe2\x60\xbd\xb1\x2a\x20\x54\x59\xe2\xb3\x07\x6a\x96\x3c\xc1\x91\x94\x99\x12\xc5\x1a\x90\xb1\x55\xd1\x55\x8a\x99\xda\x42\xc5\x70\x1d\x6c\xd6\x06\x06\x84\xb1\x41\x85\x8d\x3b\xb0\x87\x51\x5a\xa9\x03\xfe\xd1\x0d\x73\x44\xf8\x0e\x10\xc0\x03\x06\x9a\x13\x92\x37\x66\x0f\x9c\x64\x31\x89\x1e\xa2\xac\xf0\xae\x46\xe6\x48\xac\x2a\x09\xf4\x14\x29\x38\x91\x3f\x93\xb3\x8a\x9b\xd5\xc0\x05\xb5\x00\x7c\x7d\xf9\x61\x03\x04\x32\x34\x4b\x5b\x63\x6e\xf2\x54\xce\x01\xbe\x45\x87\x37\x1b\xed\xa5\xc9\x4d\x61\xad\x45\x77\xd8\xc8\xcc\xed\x02\x92\x7e\x1f\xba\x90\xd7\xcc\x37\x61\x41\x4b\xa5\x12\xa0\x9e\x50\xa2\xc2\x98\xbc\x4c\x1c\xee\x46\x09\x54\x46\x85\x22\x6c\x50\x4b\x0f\x28\x6c\xe3\xf7\xe7\xe7\x64\xfe\xc3\x2f\xfd\x22\x76\x39\xe6\x0c\x1a\x02\x8b\x54\x2d\x30\x41\x54\x28\xf9\x26\x1f\xf2\x24\x0c\x32\xb3\x4f\xfa\xd6\x7a\xb4\xd1\x24\xd2\x24\xa9\x66\x00\x91\xdb\xf8\x89\x62\x09\xf8\xa2\xfc\x88\x6a\x6c\x7a\x35\x87\x9e\x20\xf1\x05\x89\x77\xe4\x82\x08\xdc\xbf\x92\x8f\xd0\x62\x52\xea\xfa\xbc\xdf\xab\x39\xd4\x6b\x57\x02\x1f\x4f\x29\xe2\x95\x8a\x00\xb9\x9a\x2e\x35\x7d\x3c\x29\x6d\xa5\x89\x9e\x82\x49\x91\x82\x42\xb7\x8a\x0b\x7e\xd6\xa3\xa2\xd9\xa9\x2d\x0d\x76\x6d\xc8\x6e\x8b\xb9\x83\x05\xce\x4c\x64\xee\xde\xc8\xd5\x01\x74\x1f\xeb\x18\x43\xb4\x39\x81\xa0\x80\x3f\x8b\x05\x01\x7b\x04\x2a\x42\x42\x80\xd6\x22\x44\x61\x2d\xc5\x5e\x83\xba\xb0\xad\x40\xa9\xbc\xa4\x30\xec\xaf\xd4\xcb\x45\x65\x5c\x51\x6f\xcf\x62\x28\xfd\x87\x63\x02\xd2\x58\x45\xdc\xe2\x8a\x16\x26\x15\x48\x3d\x5e\xe4\xa8\x26\xfb\x80\x78\x3d\x0e\x16\x6c\xa7\x65\x64\x9f\x1a\x2b\xa3\x4f\x1f\xc8\xfc\x7b\x2d\x36\x3a\x02\xfc\xc5\x20\xd7\x03\x1d\xbf\xa4\x9c\x5d\x75\x59\x6c\x56\xf4\xe1\xbb\x1e\x14\x47\x73\x87\x55\x87\x03\x9f\x81\xae\xa5\xfd\x85\xe2\xaa\x9e\x2f\x71\xc3\x3a\x86\x6e\xf3\x70\xd4\xe1\x61\x29\x57\xe1\x1c\xf8\xd2\xc7\x03\xb1\x0b\x7e\x69\xed\xb9\x7a\x87\x95\x47\xa2\xb7\x65\xa3\xfd\x39\x0f\x32\x0a\xea\x7b\x31\x7b\xa4\x2c\xa0\x30\x20\xa2\x45\xe2\x3c\x05\x6a\x30\x1c\xbc\xf5\x5c\x0e\x13\x1d\x96\x2d\x0a\x1b\x94\x3c\x51\xc2\x70\xce\xce\x70\xaa\xe4\x7b\x37\x01\x6c\x28\xf9\x04\x4c\x9f\x81\x5b\xb7\x41\x36\x94\xf1\x01\x2d\x3c\xc1\x29\x18\xa7\x0d\x07\x65\x12\x61\x52\x7e\xb5\xcd\x0c\xe5\x66\x39\xd1\xe1\xd3\x87\x13\x9a\x83\x23\x5a\xed\x08\x22\xd6\x5b\x4f\x2c\x62\x47\x3b\x42\x54\xab\xae\xe7\x94\x93\x47\x6d\xf3\xd7\x8e\x11\x60\x7c\xa9\x75\x5f\xd0\x26\x2b\x02\xa5\x94\xb4\xd1\x6d\x11\x4a\x79\x31\xdf\xfe\x44\xbd\xcc\xb0\x44\x77\x5d\x1e\x78\x06\xd1\x34\x03\x3d\xa0\xe1\x61\x32\x1a\xcd\xf6\x54\x92\x85\xf8\x50\x4a\x1b\x9b\x32\x27\x81\x72\xb3\x37\x81\xe3\x60\xee\xc9\xe9\xa9\x72\xdc\x15\x46\x3b\x5d\x94\xca\xce\xbf\x55\x98\xe6\x08\x82\x4f\x97\x88\x73\x99\xa2\xd7\xf4\x31\xf0\x68\xfb\x44\x72\x84\x2e\x12\x4c\xcc\x24\x72\x1a\x80\xe9\x28\x0c\x21\x85\x5e\x1a\x41\x6a\x4a\xca\x90\xf9\x7f\x5a\x1b\xb2\x0b\xab\x95\x38\x91\x56\xfb\x6a\xb8\xb3\xba\x0b\x1a\x3e\xe5\x48\xd8\x44\x6c\xc2\x82\x2f\xd5\x69\x8d\x29\xc4\xf6\xc1\xa7\xd3\x11\x25\x00\x2f\xcf\x15\x82\xce\x00\xa6\x6a\x2f\xb3\x3a\x3d\xa0\x49\x5b\xcd\x86\xe8\x43\xbb\x36\x7a\x8b\x91\x7f\xc2\x79\xf0\xc0\x22\x28\x30\x46\x2b\xad\x16\xef\x14\x4f\xdd\x4b\xf5\x14\x7e\xc9\x59\xc5\xb3\x85\x59\xe3\xcb\xf3\xae\xa4\xe1\xb3\x27\x80\xdf\x92\xfe\x90\x68\x3e\x94\x60\xb2\xc0\x09\xfb\x05\x77\x7f\x93\xbc\x6f\xef\xfa\x27\x0b\xf2\x2d\xb2\xbe\x12\x4e\x8e\x3e\x9a\x34\xad\x61\xd6\x48\xf2\x57\x20\xc8\x2e\x5a\xc7\xf8\x1d\xea\xc1\x89\xf9\x5e\xcf\xe1\x26\x72\x7b\x6e\xc8\x76\x0f\x22\xf8\x81\x70\x33\xf6\xe8\x82\x0d\xc4\xf1\x01\x1a\x74\x18\xe0\x25\x8b\xbc\x83\xc9\xf6\x6e\x66\x70\x6c\xe5\x1d\xd4\xc4\x7d\xd0\x93\x7b\xc0\xde\x2e\x8f\xd3\x0f\x79\xc0\xf7\xe5\x71\xba\x10\x07\x7a\x3d\xcf\x84\xea\x6e\xc0\x00\xa8\x83\x9c\x7e\xfa\x7e\xe4\x43\x79\xee\xe6\xf2\xe0\x3d\xfc\x5d\x4a\xd4\x49\xc7\xdd\x16\xbc\x7a\x69\xc3\x63\xef\x1f\xb2\x84\xd5\xef\x24\x52\x37\xe0\xb4\xba\xa3\xea\xff\xa8\x6e\x2a\x8b\xfa\x06\xe7\x27\xd0\xe3\x92\xfc\xc9\xef\x0f\xe5\x18\x60\xd6\xe7\x31\xab\x18\x89\xf0\x72\xa1\xb5\x3a\x59\xe4\x6f\xe4\xac\x93\x9f\x26\x6a\x7f\x25\x22\x93\xef\xe3\x1c\x02\x7c\x4b\x65\xa0\x61\x02\xb7\x4d\x45\xc2\xa1\xa4\xaf\x53\x80\xac\xc8\x8a\xd1\xb6\x1c\x68\xb7\x07\x6d\x9c\x1d\x56\x38\xda\x78\x5c\x8a\x7f\x74\x87\xa6\x74\x15\x7a\x47\x2e\x73\x1f\x68\xaa\x3c\xb8\x7b\xaa\xfa\x00\xa9\x6d\x63\x52\x3a\xd5\xa6\x59\x5a\xa9\x5a\x93\x79\x2b\xe1\xb1\xd9\x55\x47\x6a\x39\xdc\xf4\xf1\xda\xaa\x5f\xd9\x4d\xeb\x39\xe4\xbc\x6a\x46\xaf\x23\x39\xee\x24\x39\x6e\x09\x0e\x1d\xa2\x2c\x8c\xd5\x75\x5f\xb1\xab\x2c\x86\x2b\xbe\x98\xc6\x84\xf3\xeb\x16\x6b\x1b\xe3\xb5\x0e\xd9\x62\xc1\xea\x44\x60\x35\xc6\xfe\xd7\x1d\x1b\xd4\x59\xb3\x94\x0c\x08\xb4\xfd\xf4\x71\x0c\xa6\x37\xb7\xe2\x08\x56\xbb\xfc\xe8\x68\x83\x0d\x7e\x6b\xa3\xbc\xd0\x11\x74\xaa\xb8\x3f\xba\x29\xed\xce\xff\x16\x85\x5a\xd8\x68\x3f\x96\x1c\xb1\x6a\x4d\x4f\x38\x01\xab\x2e\x28\x30\xc9\x42\x62\x8a\xbb\x86\x21\x1c\x0e\x83\xc4\xec\x64\x56\xdd\xa2\xbf\x8a\x93\x36\xf0\x54\x97\x1a\x6d\x0c\x54\x6f\x2d\x2c\xaf\xae\x11\x5a\xba\xaf\x96\xc8\x35\x1a\x2a\x30\xb9\xe7\xb2\x67\xaf\xc0\x77\x42\x66\x91\x25\xfd\xee\xe2\xb8\x88\xc9\xec\xae\xb8\xb6\xc4\xee\x87\x74\xc9\xde\xe5\x50\xac\x28\x2b\x7e\x2b\xf0\x87\xfd\x32\xe1\x91\xdb\x09\x54\xab\xa4\x15\x18\x68\xd2\x67\xc9\x16\xe2\xbf\x8e\x74\x89\xd5\x4d\xba\xca\x40\x75\x3f\xf1\xf2\x8f\x08\xbd\x66\xa5\x78\xae\x72\xb6\xa4\xe2\xc9\x65\x43\xdd\xd8\xe1\x2d\x0e\xfe\x46\x3b\xf4\xf3\x28\xe1\x66\x0d\x15\xfa\x51\xaf\x07\xf6\x71\x44\x54\x3a\x8e\xe8\xc3\x0e\x10\x0b\x98\xe3\x18\xd5\xe5\x01\x30\x8d\xf9\x90\xb2\xc7\x20\x2d\xea\xe6\xec\xce\x59\xdd\x3a\xcb\xe9\x64\x51\x8b\x49\xe9\xbe\x06\xec\x7c\xb2\x98\xfc\xdd\x9e\xdb\x8b\x95\xf3\xe3\xd2\xbe\x77\x16\x93\xb9\x5d\xc3\xaa\xbc\xf3\x22\xe6\xdd\x64\xb9\xfc\xd7\xed\xfd\x75\x0d\x3b\xab\x5f\x2c\x75\x07\xae\x2c\xd7\xe2\x27\x25\x62\x16\x1e\x1f\x54\x3f\xe3\x4c\xe3\x28\xca\x59\xe0\x89\x66\x29\x36\x2d\xfc\x0d\x8d\xd6\xaf\x32\xd1\x90\x74\xe8\xa6\x0f\x5c\xbb\x08\x83\x9c\x1d\xd2\xaf\x41\x66\x9e\x59\xbd\xff\x05\x00\x00\xff\xff\x3e\xd9\xc0\x29\x2a\x1f\x00\x00")

func iloPyBytes() ([]byte, error) {
	return bindataRead(
		_iloPy,
		"ilo.py",
	)
}

func iloPy() (*asset, error) {
	bytes, err := iloPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ilo.py", size: 7978, mode: os.FileMode(493), modTime: time.Unix(1467720424, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _iloToml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x49\xcc\x4b\x2f\x4d\x4c\x4f\x55\xb0\x55\x50\x2a\xa8\x2c\xc9\xc8\xcf\x53\xe2\x82\x89\x85\xa5\x16\x15\x67\xe6\xe7\x01\xa5\x8c\xb9\xb8\xa2\xa3\x8b\x52\x0b\x4b\x33\x8b\x52\x73\x53\xf3\x4a\x62\x63\xb9\xf2\x12\x73\x91\x34\xe9\x66\x14\x64\xe6\xe4\x2b\x71\x95\xc1\xb5\x28\x19\xeb\x59\x28\x01\x02\x00\x00\xff\xff\x5e\xdd\x05\xf1\x5e\x00\x00\x00")

func iloTomlBytes() ([]byte, error) {
	return bindataRead(
		_iloToml,
		"ilo.toml",
	)
}

func iloToml() (*asset, error) {
	bytes, err := iloTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ilo.toml", size: 94, mode: os.FileMode(420), modTime: time.Unix(1467192632, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"idrac.py":   idracPy,
	"idrac.toml": idracToml,
	"ilo.py":     iloPy,
	"ilo.toml":   iloToml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"idrac.py":   &bintree{idracPy, map[string]*bintree{}},
	"idrac.toml": &bintree{idracToml, map[string]*bintree{}},
	"ilo.py":     &bintree{iloPy, map[string]*bintree{}},
	"ilo.toml":   &bintree{iloToml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
