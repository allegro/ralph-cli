// Code generated by go-bindata.
// sources:
// bundled_scripts/README.md
// bundled_scripts/idrac.py
// bundled_scripts/ilo.py
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _readmeMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x92\xcd\x8e\xd4\x30\x10\x84\xef\x7e\x8a\xd2\x82\x04\x2b\x6d\x3c\xcf\xc0\x09\x38\xc1\x61\xee\xd8\xb1\x3b\x71\x23\xc7\x8e\xfc\x33\xd9\xbc\x3d\x6d\x76\x16\xd0\x1e\x38\x45\x69\x95\xbf\x2e\x57\xf9\x1d\xe6\x9e\x7c\x24\xff\xa3\xba\xc2\x7b\xab\x4a\x5d\x03\x57\x78\x2e\xe4\x5a\x2e\x27\x5c\x4e\xcd\x72\xaa\xb8\x0b\xb0\xe4\x02\x53\x6c\xdc\xc3\xe4\x22\xcb\xd8\x26\x23\xaa\x6d\xb3\xc9\x6b\x5c\x03\x9d\xb0\x85\xd4\x9d\x8b\x83\x5b\xc0\xcc\xc9\x0a\x6b\x2f\xd9\x77\x27\xc3\xf9\x84\x59\xb3\xec\xe6\xe8\xcd\xd3\xf8\xed\x8d\x23\x57\x4e\x2b\x36\x72\xc1\x26\xae\x5b\x55\xa2\xbf\xb1\x7f\xd5\x0b\xa8\xcf\x5a\x36\x5d\x7e\x36\xa2\x7e\x50\xba\xac\x79\x12\xb4\xb7\xcd\x0a\xa5\x66\xd0\x8d\x86\x65\x39\xbf\x12\x5a\x46\x0b\xb4\xa9\x1a\x72\x8f\xc2\x20\xb1\x1e\x63\x3e\xfe\xec\x7f\x3d\x8b\x69\x2f\xb4\xf0\x33\x1e\xde\x84\xf1\xa0\xde\x0c\x2e\x06\x1f\xb9\xd6\x2e\x88\xa5\xe4\x6d\xf0\xb1\xcb\x6d\x53\x1b\x89\x3d\x62\x92\x89\xa4\x77\x70\x8c\x58\x29\x51\xb1\x8d\x60\x95\xb9\x2f\xd2\x6b\x36\x58\x38\xd2\x13\x8e\xc0\x2e\xe0\xc5\x5a\xfa\xd0\x86\x3b\xf2\xdc\x04\x2c\x39\x76\x1b\xe3\xa9\x95\xfa\xba\xe0\xcc\x1d\x3e\x0f\x45\xb0\x37\xfa\xd7\xb5\x01\x3d\x93\xeb\xcd\xce\x91\xc0\x69\x28\xa5\x98\xf7\x9f\xbf\x7d\xff\x74\xfd\x22\x71\x88\xb7\xa4\xa4\xb8\x26\x30\x70\x7b\x29\x62\xa4\xbe\x52\xc3\xd4\xf1\xff\x3c\x2f\x5a\xeb\x71\xd9\x06\xae\x2a\x65\xf9\x24\x17\xfb\xe8\x42\x56\x99\x35\x4a\x2d\xfa\xb4\x5b\x34\xe2\xdc\xd9\x5e\x09\xbf\xa5\x18\x52\x4f\x3b\x25\x4f\xc9\x9d\xc8\x8b\xfa\xfb\x56\x0c\x76\x2a\xa8\xf4\xa8\xd5\xaf\x00\x00\x00\xff\xff\x38\x75\x27\x88\x78\x02\x00\x00")

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 632, mode: os.FileMode(420), modTime: time.Unix(1465157559, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _idracPy = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x3a\x7b\x6f\xe2\xb8\xf6\xff\xf3\x29\xfc\x63\xb5\x4a\xd0\xd2\x00\x9d\x76\x76\x86\xdf\x30\x2b\x86\xc7\x2e\xda\x81\xf6\x16\xba\x3b\x57\xbd\x55\xe4\x26\xa6\x64\x27\x24\xac\x9d\x0c\xe5\x56\xfd\xee\xf7\xd8\xce\xc3\x79\x41\x69\xef\x48\x97\x4a\x8d\x13\x9f\x97\xcf\xdb\x4e\x7e\xf8\xbf\x56\xc8\x68\xeb\xce\xf1\x5a\xc4\xfb\x86\x36\xbb\x60\xe5\x7b\xb5\x9a\xb3\xde\xf8\x34\x40\x7f\x31\xb8\x89\xc6\x3e\x8b\x47\x94\xc4\xa3\x30\x74\xec\xda\x92\xfa\x6b\xf4\xb0\x76\x0d\x12\x50\x42\x50\x34\x35\x72\xc9\x9a\x78\xc1\x82\x3f\xc2\x0c\x8d\x16\xb5\x14\xfd\xef\x90\xb0\x80\x49\xc4\xf8\xce\xd8\x60\xeb\x2b\xbe\x27\xcc\x08\xa9\xeb\x3a\x77\x6f\x0c\xf2\x60\x91\x4d\xe0\xf8\x1e\x8b\x69\x4e\x3c\x46\xac\x90\x92\x2b\x89\xf3\x27\xa6\x9e\xe3\xdd\xd7\x6a\xd7\xf3\xd1\x15\xea\x81\x84\x06\xac\xc1\xa1\xbe\x77\xa3\x4d\xfb\xb3\xfe\xaf\xa3\xe9\x68\xb6\x30\xf9\xac\x39\xeb\x4f\x47\xda\x6d\xed\xb2\x3f\x9f\x1f\x80\xe4\x20\x7f\x5e\x5c\x0d\x01\xba\x36\x1f\xfc\x36\x9a\xf6\x01\xa1\xbe\x0a\x82\x4d\xb7\xd5\x62\xd6\x8a\xac\x31\x33\xec\x75\xb0\x34\x7c\x7a\xdf\xda\xde\x91\x75\x6b\xcb\x2c\x67\xdd\xea\xb4\xe0\xff\x89\x84\x68\x9d\xd6\x6b\x5f\xa6\x9f\x67\x73\x93\xb3\xab\x3f\x46\xe8\xdb\xed\xd6\xd8\xbe\x11\x88\xa7\xed\xf6\x9b\x56\xfb\xbc\xc5\x7c\xbc\x39\x01\x61\x88\xeb\x6f\xc8\x53\x8c\xf5\xe7\x7c\x34\x53\x11\x63\xbe\xa0\x66\x8e\x20\x59\x33\x4e\xe4\xac\xd5\x7e\x0f\xa6\x0b\xd7\x84\x62\xae\x2c\x85\x04\xac\xac\x8c\x46\x5e\xf6\x35\xf6\x40\x76\x71\x35\x1e\x98\x9d\x10\x98\x75\xcc\x4f\xfd\xf9\xa8\x94\x04\x71\x5d\xc3\xf2\xd7\xd5\xcb\x6f\xfd\xc8\x80\xd0\x0f\xe8\x57\xe2\x11\xea\x58\x48\x90\x3f\xb1\x28\x5e\x06\xc4\x46\x7c\x0d\x68\x4d\x18\x03\x83\xd7\xe6\x17\xfd\x4b\x73\x34\xbb\x9e\x4a\x91\xcd\xc5\x68\x7a\xf9\xb9\xbf\xe0\x8c\x35\x4d\xfb\xf0\x0b\xac\x19\x7d\x23\x94\xc1\xe2\x7a\xf5\x8e\xd1\xae\xff\xf2\xb1\xf6\x81\x75\x47\x91\xce\xb8\xeb\x79\xac\xcb\x7a\xf5\x67\x2a\xb9\x1e\x61\x6c\x19\xee\xe5\xed\x5a\xaa\xdf\x77\x2d\x6c\xdb\x14\xa4\x05\x67\x4b\x91\x61\x3d\x05\xf4\x03\xaa\x4d\x91\x49\x11\xf7\xb0\x69\xeb\x1f\x6b\x08\xc1\xca\x7f\x23\xd8\x26\x94\xdf\xc0\x2d\xac\xa2\xdb\xb7\xf8\x34\x62\xdd\x75\xc8\x82\x6b\x0f\x26\x59\x80\x3d\xbb\x57\x0f\x68\x48\xea\x1f\x8f\x66\xd4\x1a\x45\x63\xf2\xa1\x95\xd2\x57\x18\x2e\xfc\x4a\x66\x8f\xb0\x56\xb0\x2a\x8f\x7d\x13\x22\xf9\x49\x52\x58\xf8\x09\x36\xcc\x77\xaf\x08\xf3\x43\x6a\x91\xeb\xab\x49\x35\x21\x1a\x01\x09\x12\x39\x2c\x45\x96\xa9\x74\xa3\xc9\xb0\x92\x12\xcf\x52\xdd\x47\xfe\x3f\x92\x26\x41\x51\xc8\x5c\x91\x8d\xbb\x8b\xc5\x8c\xf5\x2a\xcd\xfe\x2c\x05\xaa\x4e\xd2\xa2\xbe\x4b\x5a\xd8\xf3\xbd\xdd\xda\x0f\x59\xa4\xc4\x88\x98\x64\xd9\x2a\xf0\x8c\x54\x33\x27\x2e\xb1\x02\x9f\xce\x49\xa0\xc8\xa2\xce\xa0\x19\x5e\x93\x5e\xdd\x34\x21\xde\x3c\x18\x32\xc8\x9c\x5c\x5f\x2c\x9a\x4f\xf4\x15\x23\xa4\x2c\x4b\x18\x7c\x68\xa9\x0e\x05\xde\xf5\xc9\xb7\x77\x89\x44\xc4\xeb\x26\xbe\x90\x13\xe7\x02\x72\xf3\xda\xf9\x37\x19\x29\x7e\x93\x03\x99\xe2\x87\xa8\x0c\x30\xee\x17\x0f\x26\x89\xee\x12\x11\x55\x88\x44\xca\x3c\x53\x2e\xa2\x94\x8a\x8f\xe2\xb8\xff\x58\x83\xec\x50\x1b\x0f\xcc\xc9\x6c\x7c\x61\x8e\xbe\x5c\x5e\x8d\xe6\xf3\xc9\x05\x4f\x79\x94\xf0\xe4\xb4\x71\x5c\xa2\x53\x4d\xbf\x69\x9f\xbc\xbf\xfd\xa9\x71\x22\xaf\x5a\xa3\x56\x9b\xf6\x07\x26\x80\x8f\x27\x5f\xcc\x4f\x9f\xfb\x83\xdf\x3f\x4f\xe6\x0b\x40\xbb\x11\x12\x68\xe7\x6d\xf8\x3b\xd3\x9a\x48\x7b\xf3\xe6\xbc\xfd\x76\xcc\x47\xed\xf6\xfb\x77\x3f\xbf\x95\x23\xfe\x4b\x46\x03\x3e\x3a\x6d\x9f\x75\xce\xdf\xf0\x51\xe7\xec\x7d\xe7\x14\x66\x25\xa5\x36\xb8\x86\xa4\x34\x1e\x8d\xe1\x27\x20\xfa\xe3\xf7\xa7\x12\xff\xb4\xfd\x4e\x8e\x86\xa3\xfe\xf0\x74\x20\xe1\xfa\xc3\xb3\x21\xe0\xdf\xd6\xa0\x16\x4d\xfa\x9f\x4b\x04\x9c\xf9\x1e\x01\x50\x0e\x3e\xf3\x03\xd4\xff\x86\x1d\x17\xdf\xb9\x84\x3f\xf8\xf2\x20\xfe\xf8\xf0\x84\xff\xf8\xe0\xe6\xda\xfb\xea\xf9\x5b\xef\x36\x15\x5f\x2e\x41\x0a\xc9\x69\xcc\x37\xc4\x72\x96\x0e\xb1\x39\xc8\x3f\x7f\xef\xb4\x07\x43\x21\xeb\xe9\x9b\xb3\xf3\xb7\x3f\xbf\x7b\xdf\x96\xcc\x3c\xc1\x03\x82\xff\x13\x41\x63\xc7\x75\x21\x93\x7f\xda\xa1\x0b\x63\x64\x4c\x0d\x21\x73\xad\x66\x93\x25\xf2\x7c\xba\xc6\x2e\xb8\x86\xb9\xc6\x96\x19\x85\x85\xae\x8c\x1b\x5d\xc1\x5a\x79\x02\x8b\x53\xee\x8c\x70\xb3\x21\x54\x6f\x18\x14\x02\x04\x9c\x5b\xd7\xc4\x42\xba\x60\x3b\x8e\x47\x49\x10\x52\x4f\x45\x00\xc6\xd5\x7d\x84\xed\x30\xae\x1e\x73\x2b\xdb\x05\xa6\x97\xb7\x11\xe0\x17\x35\xcb\xc5\x20\xcb\xc4\xa6\xd8\x1a\x51\xea\x53\x7d\x14\xf7\x20\x91\xc8\x1b\x2c\x98\x45\x70\xc3\xab\xfe\x40\xf7\xef\xfe\x82\x78\x82\x79\x01\xc0\xd7\x6f\x9a\x8e\xe7\x04\xa6\xa9\x43\x44\x2e\x9b\x68\xe5\xb3\xa0\x89\x42\x46\x68\x53\xe0\x6f\x7d\x6a\x47\xe4\xf8\x8f\x03\x19\x1c\x06\x74\xc0\x2f\xd9\x09\x8e\x06\x13\xfc\x92\x9d\x88\x29\xc1\x64\x3c\x4c\x25\xa0\xa1\x67\x42\x04\x40\x84\xd9\x91\x10\x42\x62\x93\xa7\x8b\x26\x8a\x13\x45\x4f\xa3\xbe\x1f\xb4\x6c\xc8\x23\x9a\x22\x50\x36\x81\xc7\xcd\x0f\x83\x04\xf8\xf8\x24\xc3\xb6\x6e\x2c\xb9\x89\x03\x3d\x91\xbd\x91\x60\xdf\xf3\x82\x0f\x81\x6b\x9b\x3c\xe1\x72\xd1\xe1\x62\xf0\x7f\x1d\x3d\x85\x8a\x6a\x3f\x4c\x57\x55\xff\x98\x45\x82\x22\x2d\x2f\x2b\x40\x4f\x36\x66\x06\xe4\x79\xea\x6c\x74\xad\xa5\x35\xd0\x4f\x08\x2e\xf0\x5f\x59\x69\x06\x37\xbb\xac\x5e\xf6\x36\x0b\xca\xa5\xed\x65\x17\x92\x05\x48\x34\x18\x0f\xf2\xac\xd2\x54\xd7\x3b\x3d\x3f\x4f\x67\x53\x0d\x44\x4e\x3c\x5a\x18\xd0\x6d\x49\x45\x9a\x90\xf9\x6c\x93\x97\x96\xec\xaa\xb9\xb8\x5a\xde\x06\x5a\xd1\x06\x39\x21\xa4\x8a\x7b\xd1\x55\x91\xa1\xa1\xb8\x6a\xca\x52\xfa\x09\xd7\x45\x8c\xaa\xf8\x44\xbd\x5e\x5f\xd0\x1d\x0a\xa0\xee\x03\x42\xa6\x7f\xe3\x0f\x37\xc0\x5e\x38\x4b\xc8\xcb\x1f\xe2\xb2\xa2\x3b\xcc\x1c\x2b\x21\x80\xc3\x60\x05\xea\x70\x2c\x51\x28\x0c\x48\x62\x01\x78\x62\xb0\xc2\x01\xda\x12\x64\xfb\x9e\x16\x20\x06\x8a\x84\xcd\x82\xb7\x03\x26\x8c\xb7\x7b\xc8\xf1\xe4\x22\x61\x9c\xca\x0f\xe9\x05\x7d\x83\xfc\x62\x83\x71\xd0\x7c\xfe\x19\x59\x84\x06\x90\xbd\x80\x34\x31\x50\x1f\xd0\x97\xbe\xeb\xfa\x5b\x2e\x49\x9c\x15\xd0\x16\xd2\x15\xdc\x9d\x70\xf1\x13\x4a\x42\x44\x21\x1a\x5a\x89\x12\x88\xf0\x3d\x76\x3c\x43\x5d\x76\x6a\x30\x51\x58\xe2\x24\x03\x0b\x2e\x18\x29\xab\x7f\x10\x0f\x17\x95\x1f\xeb\xa2\xa7\x27\xe1\xdd\xcc\x06\x74\xce\x8c\xd0\xf9\x3a\xcb\x5d\x6f\x8c\x5d\x96\x23\x23\x45\x66\xbd\xc7\xcc\x53\xfe\xd3\x06\xbe\x17\x80\xb6\x4f\x16\xbb\x0d\xd1\xba\x48\xc3\x9b\x8d\x1b\xa9\x5e\xf4\xc2\x3f\x41\x0b\xf3\xff\xd6\x0a\x53\x46\x82\xde\xf5\x62\x7c\xf2\x4e\xcb\xd2\x7e\x2a\x73\x59\x87\xa7\x76\xd8\xbf\x19\xfe\xd7\x6e\x06\x1a\x26\xa8\x01\x2d\x57\x10\x32\x48\x3b\x36\x84\x75\x0f\x9d\xb5\x3b\xdd\x82\x60\x14\x3b\x8c\xa8\xf9\xb5\xde\xe7\xca\x27\x7c\x6c\xc0\xf6\x4e\x98\x55\x24\x3b\x1e\xbf\x08\x0c\x1d\x6b\xc5\xa8\x37\x6a\x7b\x29\x15\x78\xd5\xe7\xb0\x50\x31\xd7\x45\xd0\x68\xc1\x36\x92\x74\xd1\xe3\xd3\xbf\xbc\x28\xed\xf3\x9b\x7a\x69\x96\x49\x78\x18\x01\x79\x08\x92\x70\x68\x16\x80\x72\xa6\x4a\x25\x14\x0b\x62\xe6\x06\xc3\xe2\x60\x17\xf3\xc8\x9e\x78\xff\xd2\x82\xeb\x18\x87\x6e\x90\xc6\x6e\x2f\xda\x24\x16\x50\x5d\x47\x14\x84\x9b\xdb\xfc\x84\x27\xf4\x1b\xe7\x0d\x29\x62\xc3\x58\x3a\x90\xe9\x15\xae\x19\xa3\x29\x98\x59\x93\xe4\x78\x71\x00\x93\xd3\x83\x00\xa2\x28\xbd\x73\x3c\x95\x84\xe1\x04\x10\x6f\xf0\x5c\x6f\xdc\x1e\x69\x12\x2d\x63\x92\xc4\x0a\x4d\xb8\x61\xc2\x40\x11\x1f\xfe\x50\xdb\x6b\x9a\xd8\x24\x48\x6b\x6a\xc6\x5f\xbe\xe3\xe9\xca\x5a\x1a\x25\x96\xaa\x30\x54\x94\x85\xa5\x1a\xa3\xf6\xc5\xbc\x27\x81\x09\xa9\x81\x98\x3c\xfd\xe8\x0e\x5f\x90\x29\xcb\x05\x8d\x52\xa2\x38\xe8\xe8\xa1\xcc\x94\xa1\x16\x5d\x6d\x38\x98\x4c\xcd\xf9\x8e\x05\x64\xfd\x87\x43\xb6\x51\xe7\x22\xb6\x7f\xa6\xd7\x01\xdc\xec\x1e\xfb\x47\x54\xcf\x61\xc8\xc4\xf3\xb7\xd8\x7d\x47\xde\xf3\x94\x74\xc5\xb1\xbe\xe0\xd9\x04\xe0\x19\x5c\xf3\xe8\x05\xf5\x45\x9e\xd6\xcc\x3d\xe0\x27\x0d\xc5\x67\x50\x89\xd3\x87\xb1\xd4\xf2\x49\xdc\x83\x59\x10\x95\xbc\x6f\xe3\xba\x10\xfe\x87\x5d\x57\xff\x5b\xce\xc6\x99\x42\x02\xa5\x4e\x57\x8c\xff\x89\x07\x20\x00\x17\x40\xde\x67\x5b\xc8\xc0\xe0\x6c\x50\x29\x72\x46\x88\xa3\x1f\xea\x3f\x84\x0f\x30\x4d\x73\x9e\xb6\x06\x9f\x74\x45\xbd\x87\x4c\x07\xba\xaa\x0c\xeb\x48\x9a\x9b\xf6\xad\x0c\x97\x62\xc6\x78\x7c\x52\x70\x93\x55\x23\x6d\x8a\xbd\x70\x89\x2d\x70\x15\x42\xb5\x7c\xd0\x0b\xd7\x31\x64\x23\x92\x76\xac\x75\xc8\x66\x96\x51\x6f\x42\x09\xc9\x21\xbc\x42\x0c\xbe\xd2\xfd\xfc\x95\xb4\x2d\x87\x4f\xe2\x3f\x24\x54\x07\x83\x92\xc2\xf5\x1d\x91\x75\xac\x42\x86\x4a\xde\x83\x15\x24\x62\x87\xcd\x09\xfd\xe6\x58\x64\x81\xef\x63\x39\xb2\xfc\x63\xeb\x67\x19\x72\x5f\x00\xbb\xe6\x77\x34\x8a\x5f\x08\xbb\xde\x68\x19\x34\xed\x16\x24\xcd\x3c\x51\xbb\x7f\x89\xa2\x86\xac\xb2\x1f\x20\xec\x35\x61\x3b\x9b\x0c\x8e\x89\xd9\x08\xfc\x45\x01\x1b\xe3\x7e\xe7\x68\xcd\xa8\x26\x2d\x2b\x3c\xcd\x4b\x57\x10\x61\x97\x0d\xe4\xd4\x3a\x01\xdd\x75\x73\xfd\xad\x95\x38\xd1\xb1\x4e\x3c\x08\x21\xdc\xbd\x00\xb6\xe0\xd1\x81\x48\xb9\x43\xa7\x65\x4f\xec\xc0\x50\x3f\x00\x07\xbb\x0b\x03\x22\xcb\x47\x06\xc3\x82\x6e\xc7\xf1\x42\x92\x6f\x54\x40\xcc\x03\x80\x72\x21\x95\xfb\xd5\x4c\x15\x85\xfb\x9b\xee\xdb\x5b\xae\xa9\xb2\xf3\x83\xc3\x9c\x52\x0b\x18\xd0\x8f\x41\x1f\x9a\xb2\x28\xee\x68\x09\x53\x5d\x7b\x43\x7d\x0b\x1e\x42\x81\x7b\x8d\x5f\x0f\x2e\xaf\x8f\xf1\xeb\x08\xfc\x45\x7e\x1d\xe3\x7e\xf7\x2a\xc4\x93\xc0\xf1\x1e\x2d\x6a\x46\xce\x85\x0f\xa5\xdd\x92\x44\x27\x75\x9f\x0b\x0e\xa0\x45\x1e\xb8\x35\xbc\x92\xde\x65\x6f\xcc\xf0\x5f\xa5\x14\x13\x8f\x9f\x69\x5a\x64\x32\xcc\x07\x8c\x50\x47\xb6\x0a\x31\x68\xf7\x03\x5d\x33\xb4\xc6\xcd\x49\xe7\xb6\xb2\x4b\x95\xa1\xa5\xff\x81\xdd\x50\xc6\x55\x13\xaa\x16\x48\x2f\xc6\x8d\x03\x1e\x1d\xe9\x3e\xf6\xe5\xec\x2e\x44\x83\x65\x12\x06\x05\x99\x6b\xe1\x65\x89\x62\x26\x52\xfe\xc5\xf2\x32\xf6\xfd\x81\x20\xb9\xb7\xfc\xe5\x26\xb3\xbd\x81\xb8\xc9\x01\xb0\x0d\x21\xf6\xab\xc4\x9c\xe2\x87\x81\xeb\x5b\x5f\xe7\x82\xd2\x51\xd2\x09\x4f\x11\xcc\xe1\x9a\x9b\x5b\xe2\xb5\xe3\xee\x60\xf2\x85\x59\xf6\xf2\x7a\x2c\x29\x3c\xb3\x5d\x10\x4c\x5d\x7c\x07\x9e\x5e\xd0\xd4\x53\xa3\x58\x78\x33\xe9\x69\x4d\xd6\x3e\xdd\xbd\x26\x35\x4d\x05\x85\x63\xb2\x53\x8a\xf1\xa2\x04\xa5\xa0\x7f\xf7\x1c\x25\xd4\x76\x93\x00\x3d\x96\x2b\x5d\x13\xad\x6b\xf5\xb6\xe7\xe5\xa9\x63\x5f\xfb\x7a\xc8\x27\x5e\xc9\xb9\xac\x63\x3d\xc4\x32\xef\x95\x0c\x2a\xf3\xab\x42\x74\xce\x09\x1c\x15\x99\xaf\x4f\x0b\xff\xbd\x74\xf0\x24\x8a\x9a\x7c\xa8\xd4\xb6\xf8\x75\x1d\xd1\x73\x55\xae\x89\xa0\x50\xd0\xa0\xd7\x91\xee\x77\xab\x06\xaa\xed\xb0\xaf\xaf\x6a\x21\x2e\x57\x3b\xe6\x58\xd8\x1d\x02\xa1\x63\xa2\x35\x8f\xf7\xa2\x98\x2d\x10\xf9\x5f\xed\x2e\x94\x78\xdb\xd7\x27\x1f\x1d\xb0\x15\x2d\x48\x5a\xe5\xc4\x61\x53\x75\x1a\x51\x05\x2b\xdb\x94\xbe\x70\x43\xfa\xbc\xfd\x68\x32\xe2\xf1\x0c\xbb\x7a\xf3\x6e\x17\x88\xcd\x48\x25\x6f\x8d\xf3\xd5\x2a\x02\x7a\xe2\x7d\xe2\xf8\x45\xf5\xa4\x7c\x4a\x37\xbd\x47\xf1\x11\x14\x64\x23\xb2\x87\xd1\xfe\x4e\x48\x49\x5f\x05\xcd\x96\x3e\x2c\xea\x08\xf3\x23\x77\xf5\x49\xac\x5e\x7e\x42\xda\x2e\x26\x57\xd4\x42\x9d\xf6\xe9\x59\xf6\xb2\x3f\xc7\x66\x36\xde\xdd\x9c\xee\x04\x7f\xf5\x89\xca\x5f\xd3\xf6\x75\x11\x25\x2f\x62\x4a\xba\xb2\x32\xa8\xa4\x03\x2a\xf7\xda\x83\x4d\xc9\xd2\xb9\x03\x8b\xaf\xb0\xe7\x01\x7d\x0b\x53\xfb\x75\x89\x6f\x30\x19\x12\x7e\xf4\x71\x54\xd6\x53\x91\x5e\x96\xf2\x32\x14\xbe\x73\xbe\x0b\x19\xb1\x4d\x47\x1c\xea\x31\x12\xe8\xaf\x4b\x82\xc2\x0b\x5e\x92\xfd\xea\x43\xc2\x2c\xf0\x2e\xf1\xc5\x4b\x75\xd0\xc1\x8e\x5c\x13\x26\x46\x91\x8d\xb5\xf8\x98\x49\x70\x36\x5c\x7f\xcb\x5f\x21\x1f\xdc\x96\x07\x16\x3f\xa2\x2f\x7e\x46\x60\x30\x82\xa9\xb5\x2a\x3b\x42\x3c\x32\x4d\xd6\xc7\xff\x18\x0e\xf3\xa7\x80\x72\x35\x7b\xde\xb2\x08\xc9\x0e\x48\xbf\x89\x0a\xa2\x29\x5e\xb4\x0a\x0c\xe3\x9e\xfa\xe1\x46\xef\x64\xe8\xa9\x70\xa0\xa0\xd8\xce\x07\xa8\xc7\x60\x06\xb6\x6d\x5d\x21\xd1\x78\x66\xe2\x53\x50\x20\x8a\x95\xbb\x8a\x7c\x21\xae\xcf\x0b\x70\x19\xad\xb6\x88\x8c\xea\x53\x7a\x65\x1e\xd4\xb3\xf7\x58\xbf\x26\x9d\x21\x7b\x4a\x76\xf0\x54\xb1\x16\xe9\x37\x03\x93\x6a\x55\xe1\x7f\xa3\x65\x60\xc4\xd1\x66\xf6\xb4\x47\xd8\x33\x39\xe6\x89\xb9\x57\x1e\xfc\xc4\xac\x53\x80\x0a\xbe\x29\x80\x60\x9a\xde\xca\x25\x8b\x6d\x50\xb2\xd6\xb2\x7d\x5c\xb2\x48\x31\x59\xb5\x3a\x31\x29\x97\x25\x86\xd2\x00\xbc\xdd\x8c\x89\x97\xf5\x9e\x31\x6d\x31\x57\x41\x5a\xcc\x09\xca\x62\x24\x73\x50\x21\xb7\xc7\x5c\x0e\x66\xfd\x98\x65\x11\xb0\x82\x7f\x11\x50\x08\x53\x7c\xac\xba\xab\x42\x21\x72\x59\x66\x61\x4f\xdf\xf3\x29\x08\x88\x24\x3f\x02\x81\xfa\x50\xdf\xf7\xc6\x64\xe6\xa3\xc9\x25\x8a\xbf\x9b\xe1\x6f\xe4\x81\x32\x5a\x61\x86\xee\x08\xf1\xb8\x81\xbf\x39\x36\x49\x5e\x98\x02\x5d\xf9\x0d\xc9\x33\xe8\xa6\xdf\x44\xa4\xef\x60\xf7\x11\x7e\xb6\xc0\x0a\xe1\xe4\xbb\x95\x6a\xc2\xaa\xbd\x40\xd3\xf2\x33\x9b\x52\xd5\x95\x84\xf9\xa1\xd4\x10\x05\x1a\xef\xbc\xf8\xd7\xcd\x86\x1d\xae\x37\x4c\x57\xe0\xf9\xe7\x11\x35\x87\x7f\xc5\xc3\xd7\x6f\x9a\x7c\x81\x9a\x09\xf8\xd0\x7c\x99\x9a\x5c\x68\xf4\xb9\x4e\xfa\x19\xb1\x01\xbe\xa7\x6b\x93\x4b\x73\x71\x61\xce\x07\xfd\x99\x26\x5e\xfc\xc4\x55\x95\x96\xc0\x96\x7e\xa0\x9c\x62\x29\x9f\xf7\x1c\xc2\x4c\x3e\x58\x4e\xb1\x33\x87\x92\xd5\x9e\x27\x40\xa2\x53\xc0\xd4\x62\xfc\x73\x6d\xe5\x45\xb1\xd4\x15\x31\x30\xbd\xe7\x2f\x8c\x94\x3e\x7e\x07\x82\x3d\x38\x01\x2f\x36\xff\x09\x00\x00\xff\xff\xea\x38\x22\x05\x47\x2e\x00\x00")

func idracPyBytes() ([]byte, error) {
	return bindataRead(
		_idracPy,
		"idrac.py",
	)
}

func idracPy() (*asset, error) {
	bytes, err := idracPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idrac.py", size: 11847, mode: os.FileMode(493), modTime: time.Unix(1465808401, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _iloPy = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x59\x7b\x6f\xe3\xb8\x11\xff\xdf\x9f\x82\xe7\x45\x21\x09\xf5\x7a\x1d\x27\xbb\xdd\x4d\x91\x02\x3e\xc7\x69\x8d\xc6\x4e\x10\xe7\xfa\x40\x10\x08\xb2\x44\xc7\xbc\x95\x28\x9d\x28\x25\xf1\x15\xf7\xdd\x3b\x43\x52\x12\x65\x49\x89\xb3\xe8\x61\x2b\xff\x23\x93\x9c\xe1\x3c\x7e\xf3\x20\xf5\xee\x87\x0f\xb9\x48\x3f\xac\x19\xff\x40\xf9\x23\x49\x76\xd9\x36\xe6\xbd\x1e\x8b\x92\x38\xcd\xc8\xcf\x02\xfe\xe8\xf7\x58\x14\x6f\x62\x27\x7a\x9b\x34\x8e\x88\x1f\x27\x3b\xa2\x07\x03\x4a\x13\xfc\x5f\xd2\x6e\x13\x16\xc6\xbd\x5e\x6f\x31\x99\xba\xd7\x37\xb3\x8b\xf9\xbf\xdc\x1f\x2f\x27\xd3\xbf\x5f\xce\x57\xb7\xe4\x8c\xdc\xf5\x08\x3c\xd6\xc7\x11\xfc\x4e\xac\x01\xb1\x8e\x8f\x3f\x8e\x3e\x5d\xe0\xdb\x68\xf4\xe5\xf3\x9f\x3e\xa9\x37\x7c\xca\xb7\x29\xbe\x8d\x47\x27\x47\x1f\x8f\xf1\xed\xe8\xe4\xcb\xd1\x18\x66\x15\xa7\xd1\x78\xa4\x39\x5d\xcc\x2e\xe0\x91\x2b\x26\x17\x5f\xc6\x8a\x7e\x3c\xfa\xac\xde\xce\x67\x93\xf3\xf1\x54\xad\x9b\x9c\x9f\x9c\x03\xfd\x7d\xaf\x77\x3e\xfb\xc7\x7c\x3a\x73\xe7\xcb\x8b\x2b\xf7\x76\xb6\xb8\xbe\x9c\xdc\xce\x40\xca\xff\x48\xde\xfd\x28\x0e\x68\xe8\x72\x2f\xa2\xfd\x53\xd2\xef\xab\x1d\xfb\x49\x1a\xfb\x54\x88\x38\x15\x30\x7a\x77\xaf\x47\x23\xcf\x77\xbd\x20\x48\x61\x86\xd6\x26\x02\x26\xbe\xea\x01\x52\x3e\xef\x48\xce\x73\x41\x03\x62\x4b\x7b\x91\x20\xa6\x82\x5b\x19\x01\xde\x8f\x2c\xa0\x44\xe4\xfe\x96\x30\xbe\x89\x1d\xc5\x44\xd0\x94\x79\x20\x4a\x1e\xad\x69\x6a\x0a\x13\xd1\x28\x4e\x77\x7a\xbf\xdf\x7a\xbd\xeb\x9b\xab\xe9\x6c\xb5\xba\xba\x39\x40\x9d\xb7\x8b\xb1\xf1\x22\x16\xee\x0a\x6a\xa5\x88\xa2\x4c\x69\x96\xa7\x5c\xc0\x62\x80\x00\x4d\xe9\x80\xac\x73\x00\x0f\x0f\x77\x64\x13\xa7\x84\x5d\x5e\x8d\x89\xad\xdf\x8e\x49\xb6\x65\x82\x6c\x18\x0d\x03\x02\x2f\x34\x4a\xb2\x9d\x83\xbc\x78\xfc\x8b\xa7\x76\x0a\xbd\x35\x0d\x4d\x45\x19\x0f\xe8\x33\x0c\x2c\x63\x4e\x07\x35\x1b\xaa\xad\x04\x03\xd1\xbc\x54\x4a\x8b\x4c\xbd\x47\x0f\xfe\xaf\x43\x4a\x3c\x51\xb0\xd3\xb6\x4c\x28\x0d\x0a\x4e\x6a\xc8\x8f\x53\xe9\x34\x35\x04\x66\x5c\xcc\x16\x57\x37\xff\x6e\xb1\x61\x43\x2e\xc1\x7e\xa5\x75\x66\x2d\xfc\xf7\x84\xff\x06\xc9\x41\xa6\x9e\x1f\x7a\x42\x90\x79\x18\xcf\xd2\x34\x4e\xed\xd9\xb3\x4f\x93\x8c\xc5\xdc\x39\x95\xbb\x24\x30\x0b\xab\x02\xba\x01\x3b\xa6\x91\x17\x82\x64\xae\x01\x4b\xdb\x78\xd7\x24\xc6\x08\xa8\x68\xfc\x1b\xe6\x49\x42\x53\xdb\x19\xa6\x34\x09\x3d\x9f\xda\xd6\x7b\x0c\x9d\x53\x4b\x01\x41\x79\xdb\x24\xd0\x1b\x3f\xd0\xcc\x05\x38\xb8\x8c\x8b\xcc\xe3\x40\xb7\x8d\x45\x36\x20\xa0\x6c\x3a\x90\x02\x3e\xc5\x69\xa0\x37\x47\xd8\x9c\x29\xf8\x0c\x41\x29\xb9\x14\xc1\x79\xa6\x68\xc2\xf8\x81\xf1\xb3\x3a\xe5\x59\xc9\xc2\x14\x43\x25\x1c\xdc\xde\xc5\xfd\x41\x2a\x61\xa7\xde\x93\x7c\x19\xe0\xac\xfb\x48\x53\x51\x19\xea\x1d\xb9\xdd\x52\x12\x78\x99\x47\x44\x96\xe6\x3e\x30\xa1\x12\xa5\x90\xb3\x48\x19\xc3\x9a\x3b\x04\x87\x4c\x7a\x0a\xe6\xe0\x9e\x04\xc6\xb3\x1d\xe1\x9e\xc8\x76\x03\xcd\x8f\x82\xcf\x7d\x08\xd0\x0a\xed\xc7\xc4\xe6\x31\xf1\x43\x0a\x8e\x85\x0c\x90\x31\xee\xa3\xab\xc8\x9a\x66\x4f\x94\x72\xc0\xfc\x9a\x06\x01\x30\x5f\xce\xa7\xe0\x72\x1e\x68\x4e\x6c\x35\x5d\xcd\x09\x66\x52\xe1\x0c\x95\x99\x36\xa6\x0a\xe4\xec\x8c\x1c\x2b\x35\xf0\x01\x2b\xa7\x60\xf1\xe0\x19\x2c\x39\x92\xa3\x34\x14\xb4\x7d\xfe\x68\xdf\xe5\x14\x9d\x7e\x77\x2f\x87\x51\xec\x08\x20\x48\x0a\xc3\x55\x3c\x64\x9c\x4a\x7c\x0c\xc1\xbc\xb6\xa5\xfe\x03\x1c\xee\xee\x9d\x6a\x11\xaa\xad\xe8\xf9\x03\xb5\xcb\x7d\xc1\x8f\x94\xdb\x8a\xc4\x19\x90\xb1\x53\xf1\xd5\xca\xd9\xb5\x81\x6a\xc3\x3b\x76\x7f\x67\x21\x1e\xac\x7b\x54\xda\xba\x06\x9b\x58\xa5\xa5\x3a\xd6\x3f\x7a\x61\x8e\x04\x3f\x00\x01\x78\xc1\x42\x93\x42\xfc\xc4\xfc\x41\x90\x2c\x26\xd1\x43\x94\x15\x1e\xae\xb1\xd9\x13\x4b\x1b\x0a\x74\x6e\x8f\xa4\x62\x47\xf2\x47\x72\x54\xed\xea\x34\x78\x80\x7a\x40\x76\x77\xfa\xe9\x1e\x18\x65\x68\x9e\xb6\xb2\xd8\xdc\xbb\xe1\xa8\xa1\x07\xf1\xc8\x03\x0c\xe1\xae\x08\xa4\xc2\x0c\x02\x99\x84\x6c\x51\x22\x5e\x78\x51\x02\x19\x45\x93\x49\x81\x0d\x5c\x43\x3e\x1b\x7f\x3c\x3e\x26\x8b\xbf\xfd\xda\x2f\x40\x27\x10\xec\x28\x35\x26\x2d\x03\x51\x60\x14\x48\xf2\xb6\x18\x8a\x24\x64\x99\xdd\x27\x7d\xe7\x6e\x74\x5f\x93\xaa\x26\x49\x55\x2e\x65\x50\xe2\x5f\x14\x4b\xae\x2f\x52\x86\xcc\xbf\xb6\x6f\x78\xe1\x00\x89\x4f\x48\xbc\x21\x27\x44\xd2\xfe\x99\x7c\x86\xa2\x92\x52\x2f\x10\xfd\x9e\x61\x7d\xbf\x5d\x09\x7c\x7c\xad\x88\x5f\x2a\x02\xec\x0c\x5d\x0c\x7d\x7c\x25\x6d\xa5\x49\x3d\x6e\x92\x22\x6e\xa4\x6e\xd5\x2e\xf8\x17\x56\x16\x2d\x92\xdd\xac\xcd\x4e\x6d\xed\x9d\xa5\xea\x2b\x02\x1e\x33\x93\x9d\xa8\x80\xbb\x50\xa3\x03\x28\x3a\xce\x3e\x85\x2c\x0f\x92\x40\x2f\xbe\x94\x03\x72\xed\xde\x52\x09\x09\xb9\xd4\x40\x88\xa6\x5a\xc9\xb9\x06\x77\x69\x5b\x49\x52\x79\x49\x53\xcc\x9e\xa9\x9f\xcb\x94\x76\x4b\xfd\x2d\x8f\x21\x5d\xef\xf6\x19\x28\x63\x15\xd8\xc5\x91\x1a\x4c\xaa\x25\xb5\xf4\x2d\x3b\x1a\x95\xc0\xe5\xeb\x3e\x58\xb0\xe2\x96\xc8\x3e\x14\x2b\xa3\x2f\x9f\xc8\xe2\xc7\x1a\x36\x3a\x00\xfe\x2a\xc8\xeb\x40\x97\xa1\x2a\xe5\xec\x4a\xa6\x72\xb2\xe2\x0f\xff\x4d\x50\xec\x75\x1a\x8e\xb9\xce\x74\x6f\xd4\xed\x5e\xb9\x12\xad\x52\x7a\x4a\x9a\x48\x53\xac\x70\xc2\xd9\x5f\xdd\x86\x85\xa8\x03\x0b\x4a\x83\x32\x05\xd1\xa8\x9e\x82\xe4\x2c\x78\xb0\xb5\xac\xd6\x8b\xa8\x3a\x67\xbc\x2f\x6b\xe9\x2f\x39\xcb\x28\x18\xca\x8f\xf9\x23\xe5\x8c\x42\xf3\x88\xb6\x8b\xf3\x14\xb8\x41\xe9\x7f\xef\x7b\x02\x1a\xa6\x0c\x3b\x4a\x98\xa0\xe4\x89\x12\x0e\xd2\x61\x2e\x07\x2c\x6e\xbd\x04\xa8\x21\xa3\x13\x70\x52\x06\x00\x58\xb3\x6c\xa8\x90\x04\x55\x3a\xf1\x52\xea\x62\x2f\xe1\xa2\x4c\x12\x50\xe5\xbf\xb6\xb6\xa0\x9c\x2c\xbb\x3d\x7c\xfa\x70\xec\x71\xb1\x35\x33\x7a\x7a\x39\xde\x7a\x0c\x90\x33\xb5\x9e\xbc\x1a\xed\x38\x20\xfc\xd6\x51\xe5\xc7\xa7\xb5\xe2\x0a\xda\x64\x05\xa4\x4a\x49\x1b\xc5\x14\x57\x69\x2f\xe6\xeb\x9f\xa9\x9f\x59\x8e\x2c\x9e\xab\x9d\xc8\x00\x77\x73\xd0\x03\xea\x19\x86\xad\xd5\xac\x3a\x25\x5b\xc0\x87\x56\xda\xba\x2f\xa3\x17\x38\x37\x0b\x1c\x38\x0e\x5a\x9b\x9c\x1e\x2a\xc7\x75\x61\xb4\xc3\x45\xa9\xec\xfc\xad\xc2\x34\x3b\x0c\x7c\xba\x44\x5c\xa8\x60\x3e\xa7\x8f\xcc\xa7\xed\x0d\xc7\x1e\xb9\x0c\x30\xd9\x72\xa8\x22\x0f\xcd\x4f\x18\x42\x08\xbd\xd6\x61\x18\x4a\x2a\xc8\xfc\x2f\xad\x0d\xd1\x85\x79\x0d\xe5\x37\xe6\x75\xef\xe6\x74\xa7\x3e\x7c\xca\x8e\xaf\x49\xd8\x5c\x0b\xbe\xd4\x27\x39\xae\x09\xdb\xfb\x99\x4e\x47\x94\x0b\x44\x79\x6a\x90\x7c\x06\xd0\x38\xfb\x99\xd3\xe9\x81\x9a\xb4\x55\xeb\x87\x3e\x9c\x19\xdd\xb5\xec\xea\x27\x42\xb0\x07\x1e\x41\x82\xb1\x5a\x79\xb5\x78\xa7\x78\x4c\x2f\x99\x21\xfc\x9a\xb3\x8a\x67\x0d\x5d\xc9\xd7\x97\x5d\x49\xc3\x17\x9b\xfc\x6f\x09\x7f\x08\xb4\x00\x52\x30\x59\x62\x03\xfd\x8a\xbb\x7f\x97\xb8\x6f\xef\x0f\x0e\x16\xe4\xf7\x88\xfa\x4a\x38\x55\x45\x6b\xd2\xb4\xc2\xac\x11\xe4\x6f\x20\x50\x55\xd4\xa4\xf8\x0e\xf9\xe0\xc0\x78\x37\x63\xb8\x49\xdc\x1e\x1b\xaa\xdc\x83\x08\x01\x93\x6e\xc6\x1a\x5d\x6c\x03\x38\xde\x41\x81\x0e\x19\x5e\x63\xa8\x5b\x8e\x6c\xeb\x65\x96\xc0\x52\xde\xc1\x4d\xde\x15\x3d\x79\x3b\xac\xed\xea\xc4\xfc\x90\x33\xb1\x2d\x4f\xcc\x85\x38\x50\xeb\x45\x26\x55\xf7\x18\x87\x45\x1d\xec\xea\x07\xec\x47\x31\x54\x47\x6b\xa1\xce\xd6\xc3\xef\x92\xa2\x0e\x3a\xcd\xb6\xd0\x99\xa9\x0d\x4f\xb5\xff\x97\x29\xcc\xbc\x76\x48\x3d\x26\x68\x75\x53\xd5\xff\x89\x7f\xe5\xf1\x13\x27\x45\x7e\x83\x93\x16\xe8\x71\x4a\xfe\x10\xf4\x87\xaa\x0d\xb0\xcd\x7e\xcc\x29\x5a\x22\xbc\x3b\x68\xcd\x4e\x0e\xf9\x0b\x39\xea\xdc\xaf\x26\x6a\xff\x56\x22\x53\x6c\xe3\x1c\x00\xbe\xa6\x0a\x68\x18\xc0\x6d\x5d\x91\x74\x28\xe9\xd7\x39\x40\x54\x64\x45\x6b\x5b\x36\xb4\xeb\x5d\xad\x9d\x1d\x56\x34\xb5\xf6\xb8\x14\x7f\xef\x86\x4c\xeb\x2a\xf5\x8e\x3c\xee\x3d\xd0\x54\x7b\x70\xf3\x54\xd5\x01\x62\x4c\x63\x50\xba\xd5\xa4\x5d\x5a\xa9\x1a\x53\x71\xab\xd6\x63\xb1\xab\x0e\xdf\xaa\xb9\xe9\xe3\xcd\x54\xbf\xb2\x5b\xad\xe6\x90\xe3\xaa\x18\xbd\x8d\xe5\xb8\x93\xe5\xb8\x05\x1c\xf5\x15\x65\x62\xac\x2e\xf3\x8a\x59\x6d\x31\x1c\x09\x64\x37\x26\x9d\x6f\x5a\xac\xad\x8d\xaf\x55\xc8\x16\x0b\x56\x27\x02\xa7\xd1\xf6\xbf\xed\xd8\xa0\x4f\xa5\xa5\x64\xc0\xa0\xed\x7b\xc2\xfe\xb2\x7a\x71\x2b\x8e\x60\xc6\x35\x49\x47\x19\x6c\xec\xd7\x88\x66\xe0\x55\x61\xbf\xba\x0b\xed\x0e\xff\x16\x7d\x5a\x76\xa9\x7d\x7c\xd8\xdb\xa5\x35\x3a\xe1\xa8\xac\x8b\xa0\xa4\x24\x4b\x45\x29\x4f\xad\x43\x38\x1b\xb2\xc4\xee\xdc\xac\xfa\x48\xf1\xa6\x9d\x6a\xfd\x4e\x75\x3c\x6e\xdb\x40\x97\xd6\xc2\xf0\xfa\xbe\xa1\xa5\xf8\xd6\xe2\xd8\xe0\xa1\x71\x29\x7c\x8f\xbf\x78\xbf\xbd\x91\x32\xcb\x20\xe9\x77\xe7\xc6\x65\x4c\xe6\xd7\xc5\xa5\x24\x16\x3f\xe4\x4b\xb6\x9e\x80\x5c\x45\x79\xf1\x29\x26\x18\xf6\xcb\x78\xc7\xdd\x0e\xe0\x5a\xc5\xac\xa4\x40\x93\xbe\xc8\xf6\x40\x61\x0d\xb6\x85\xc2\x2f\xb0\xad\x82\x4f\x5f\x4d\xbc\xfe\x75\xa0\xd7\x4c\x12\x2f\x25\xcd\x96\x28\x3c\x38\x63\xe8\x6b\x3d\xbc\xea\xc1\x6f\x9e\xc3\x20\x8f\x12\x61\x1b\xa4\x50\x8a\x7a\x3d\xb0\x8d\x2b\x11\xe9\xba\xb2\x04\xbb\xc0\x8c\x71\xd7\xb5\xaa\x7b\x03\xd8\x34\x16\x43\xca\x1f\x59\x5a\xa4\xcc\xf9\xb5\x7b\x7b\xe5\xae\xa6\x93\xa5\x81\x47\xe5\xba\xc6\xda\xc5\x64\x39\xf9\xeb\x6c\x31\x5b\xde\xba\x3f\xad\x66\x37\xee\x72\xb2\x98\x19\x54\xa5\x9d\x5f\xa7\xbc\x9e\xac\x56\xff\xbc\xba\x39\x37\xa8\x33\xf3\xf6\xa9\x1b\xb4\x2a\x53\xcb\x6f\x4a\xc4\x2e\x3c\x3e\xa8\xbe\xcf\x4c\xe3\x28\xca\x39\xf3\x65\x9d\x94\x93\x0e\x7e\xa0\xa2\xe6\x7d\x27\x1a\x92\x0e\xbd\xf4\x41\xd4\x6e\xcb\x20\x5e\x87\xf4\x99\x65\xf6\x91\xd3\xfb\x6f\x00\x00\x00\xff\xff\xb1\x7a\xf4\x6c\x7a\x1e\x00\x00")

func iloPyBytes() ([]byte, error) {
	return bindataRead(
		_iloPy,
		"ilo.py",
	)
}

func iloPy() (*asset, error) {
	bytes, err := iloPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ilo.py", size: 7802, mode: os.FileMode(493), modTime: time.Unix(1465808208, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"README.md": readmeMd,
	"idrac.py": idracPy,
	"ilo.py": iloPy,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"README.md": &bintree{readmeMd, map[string]*bintree{}},
	"idrac.py": &bintree{idracPy, map[string]*bintree{}},
	"ilo.py": &bintree{iloPy, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

