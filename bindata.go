// Code generated by go-bindata.
// sources:
// bundled_scripts/idrac.py
// bundled_scripts/idrac.toml
// bundled_scripts/ilo.py
// bundled_scripts/ilo.toml
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _idracPy = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x3b\xfb\x6f\xda\x4a\xb3\xbf\xf3\x57\xec\x75\xf5\xc9\xa0\x2f\x31\x90\x47\x4f\xcb\x2d\x3d\x22\xe0\xa4\xe8\x14\x12\x01\xe9\xe9\x51\x6e\x64\x39\x66\x49\x7c\xe2\x07\xc7\x6b\x87\x70\xa3\xfc\xef\x77\x66\xd7\x8f\xf5\x03\x12\x92\x5b\xe9\xa3\x52\x6c\xef\xce\x6b\x67\x66\x67\x66\x1f\xfd\xf0\x5f\xcd\x88\x05\xcd\x1b\xdb\x6b\x52\xef\x81\x2c\xd7\xe1\x9d\xef\xd5\x6a\xb6\xbb\xf4\x83\x90\xfc\xcd\xe0\x23\x7e\xf7\x59\xf2\xc6\xd6\xe9\x6b\x14\xd9\xf3\xda\x22\xf0\x5d\x62\xf9\xcb\x35\x89\x5b\xe7\x94\x2e\xf1\x5b\xf4\x3c\xba\x8e\x46\xc3\x80\xd2\xa4\x5b\x77\xa8\x4b\xbd\x70\x86\x4d\x26\x23\xfa\x2c\xe5\x17\xd0\x7f\x22\xca\x42\x26\x10\x93\x2f\x6d\x69\x5a\xf7\xe6\x2d\x65\x5a\x14\x38\x8e\x7d\x73\xa8\xd1\x47\x8b\x2e\x43\xdb\xf7\x58\x42\x73\xe8\x31\x6a\x45\x01\x9d\x08\x9c\x3f\xcd\xc0\xb3\xbd\xdb\x5a\x6d\xda\xff\xa6\x8f\x7a\xa4\x4b\x94\xbb\x30\x5c\x76\x9a\x4d\x66\xdd\x51\xd7\x64\xda\xdc\x0d\x17\x9a\x1f\xdc\x36\x57\x37\xd4\x6d\xae\x98\x65\xbb\xcd\x76\x13\xfe\xee\x0b\x88\xe6\x81\x52\xfb\x39\xfa\x3e\x9e\x1a\x53\xc4\x7e\x8a\xd1\x57\xab\x95\xb6\x3a\xe4\x88\x07\xad\xd6\x61\xb3\x75\xdc\x64\xbe\xb9\xdc\x07\xe5\x51\xc7\x5f\xd2\xe7\x04\xeb\xcf\xa9\x3e\x96\x11\x13\xbe\xa0\x0d\x44\x10\xac\x19\x12\x39\x6a\xb6\x3e\x83\xf2\x23\x97\x06\x26\x8e\x49\x22\x31\xea\x55\xd2\x28\xca\xee\x9a\x1e\xc8\xce\x9f\xda\x23\x9b\xa7\x04\xc6\x6d\xe3\xa4\x37\xd5\x2b\x49\x50\xc7\xd1\x2c\xdf\xdd\x3c\xfc\xe6\xbf\x18\x10\xfa\x40\xce\xa8\x47\x03\xdb\x22\x9c\xfc\xbe\x15\x98\x8b\x90\xce\x09\x8e\x81\xb8\x94\x31\xb0\x4b\x6d\x7a\xde\xbb\x30\xf4\xf1\xe5\x48\x88\x6c\xcc\xf4\xd1\xc5\xf7\xde\x0c\x19\xab\xaa\xfa\xe5\x77\x18\x33\x79\xa0\x01\x83\xc1\x75\x95\xb6\xd6\x52\x7e\xff\x5a\xfb\xc2\x3a\x7a\xac\x33\xf4\x10\x8f\x75\x58\x57\x79\xa5\x92\x95\x18\x63\xc5\xcc\x6e\xd1\xae\x95\xfa\xfd\xd4\x34\xe7\xf3\x00\xa4\x05\x9f\xc8\x90\x61\x3c\x25\xf4\x17\x54\x9b\x21\xd3\x32\xee\xcb\xa6\x55\xbe\xd6\x08\x81\x91\x7f\xa3\xe6\x9c\x06\xf8\x01\x9f\x30\x8a\x4e\xcf\xc2\x6e\xc2\x3a\x6e\xc4\xc2\x4b\x0f\x3a\x59\x68\x7a\xf3\xae\x12\x06\x11\x55\xbe\xee\xcc\xa8\xa9\xc7\xef\xf4\x4b\x33\xa3\x2f\x31\x9c\xf9\x1b\x99\x3d\xc1\x58\xc1\xaa\x38\x45\x0d\x98\x70\xcf\x82\xc2\xcc\x4f\xb1\xa1\xbf\x33\xa1\xcc\x8f\x02\x8b\x5e\x4e\x86\x9b\x09\x05\x31\x10\x27\x51\xc0\x92\x64\x19\x09\x37\x1a\x0e\x36\x52\xc2\x30\xd3\x79\xc2\xbf\xb1\x34\x29\x8a\x44\x66\x42\x97\xce\x3a\x11\x33\xd1\xab\x30\xfb\xab\x14\x28\x3b\x49\x33\xf0\x1d\xda\x34\x3d\xdf\x5b\xbb\x7e\xc4\x62\x25\xc6\xc4\x04\xcb\x66\x89\x67\xac\x9a\x29\x75\xa8\x15\xfa\xc1\x94\x86\x92\x2c\x72\x0f\x19\x9b\x2e\xed\x2a\x86\x01\xf3\xcd\x83\x57\x06\x01\x0e\xf5\xc5\xe2\xfe\x54\x5f\x09\x42\xc6\xb2\x82\xc1\x97\xa6\xec\x50\xe0\x5d\x27\xfe\x7c\x9d\x4a\x44\xbd\x4e\xea\x0b\x05\x71\xce\x21\x84\xba\xf6\xff\x52\x5d\xf2\x9b\x02\xc8\xc8\x7c\x8c\xa3\x35\x43\xbf\x78\x34\x68\xfc\x95\x8a\x28\x43\xa4\x52\x16\x99\xa2\x88\x42\x2a\x7c\x4b\xe6\xfd\xd7\x1a\x44\x87\x5a\x6d\xd4\xeb\x1b\x17\x13\xfd\x74\xf8\xd3\x38\xf9\xde\xeb\xff\xf1\x7d\x38\x9d\x41\xe4\xb8\xe2\xd4\xd4\xe3\x16\xfc\x3b\x52\xf7\x88\x7a\x78\x78\xdc\xfa\x78\x8a\x6f\xad\xd6\xe7\x4f\xbf\x7d\x14\x6f\xf8\x4b\xdf\xfa\xf8\x76\xd0\x3a\x6a\x1f\x1f\xe2\x5b\xfb\xe8\x73\xfb\x00\x7a\x05\xa5\x16\x98\x59\x50\x3a\xd5\x4f\xe1\xc7\x21\x7a\xa7\x9f\x0f\x04\xfe\x41\xeb\x93\x78\x1b\xe8\xbd\xc1\x41\x5f\xc0\xf5\x06\x47\x03\xc0\xbf\xae\x4d\xf5\xc9\xb0\xf7\xbd\x42\xc0\xb1\xef\x51\x00\x45\xf0\xb1\x1f\x92\xde\x83\x69\x3b\xe6\x8d\x43\xb1\xe1\xe7\x23\xff\x87\xaf\xfb\xf8\xc3\x97\xab\x4b\xef\xde\xf3\x57\xde\x75\x26\xbe\x18\x82\x10\x12\x69\x4c\x97\xd4\xb2\x17\x36\x9d\x23\xc8\x5f\x7f\xb4\x5b\xfd\x01\x97\xf5\xe0\xf0\xe8\xf8\xe3\x6f\x9f\x3e\xb7\x04\x33\x8f\xf3\x80\x89\x7c\x42\xc9\xa9\xed\x38\x10\x95\x4f\xd6\xe4\x5c\xd3\xb5\x91\xc6\x65\xae\x0d\xf4\x1f\xc3\xbe\x6e\x0c\xc7\xa7\xe7\x72\x4c\x7e\xe2\xac\x14\xd7\x87\x24\x60\xa0\xff\x29\x1d\xa2\x28\x42\x00\x85\x86\x77\x34\xf0\x68\xc8\xa0\xf1\xea\x3a\x6e\x74\xa9\xeb\x07\x6b\xb9\x65\x61\xdf\x04\xd4\xb0\xee\x4c\xcf\x03\x22\x96\x19\xcc\x73\x08\xcb\xc0\xb7\x60\xaa\xf8\x41\xae\x75\x6e\xb3\xfb\x5c\x03\x83\xcc\x62\x82\x0c\x91\x7b\x43\x83\x58\x8a\xe7\x9a\x3e\xfb\xa6\x4f\xc6\xfa\xac\x4a\x66\xd3\x92\x85\xad\x1e\x02\x5b\x52\x3a\xc7\x86\x48\xa8\x9a\x88\x86\x54\xf2\xc0\x5d\x99\x20\x7c\x9c\x91\x52\xb6\x17\x93\xf3\xbe\x3e\x9d\x9e\x4f\x5e\xad\xab\x85\xe9\xda\xce\x5a\x6e\x01\xd3\x53\x47\x6e\xb0\x21\x96\x3d\x42\x03\x77\x93\xbc\x78\x52\x93\xe5\x43\x60\x49\x9b\x9e\x6b\x23\x7d\x74\x3e\xf9\xeb\xd5\x72\x30\x98\xc4\xdb\x78\x3c\xd7\x4e\x87\x27\x13\xdd\xe8\x7f\xeb\x8d\xc7\xfa\x77\xa3\xdf\x9b\x0c\xca\xc4\x3f\x90\xa2\x6a\xf6\x84\xe6\x08\x44\x62\xb2\x02\x3d\x42\x17\x89\xbc\x88\x41\x53\xdd\x1e\x4c\x7a\x7d\x32\xf7\x29\xf3\xd4\x90\x80\xbd\x1f\xec\x39\x25\xe1\x9d\x0d\x25\x99\xb7\xf0\xc9\x9a\x86\x0d\x6d\xab\xc6\xdf\x6c\x41\x10\x25\x35\x5a\xad\x36\xa7\x0b\xe2\xf9\x81\x6b\x3a\xa0\x05\x03\x1c\xc4\x88\xc3\x78\x5d\x7a\x6f\x74\x38\xaa\xd4\x02\xc3\x96\xbe\xb4\x68\xb9\xa4\x41\xbd\xa1\x05\x10\xd0\x21\x18\xd7\x55\x3e\x59\x3b\x6a\x83\xe3\x05\x34\x8c\x02\x4f\x46\x00\xc6\x9b\xcb\x53\xf0\x73\x0c\x01\xc6\x4a\x54\xa1\xac\x5e\x5d\x9d\x36\x80\x88\xe5\x98\x20\xcb\x70\x1e\x98\x96\x1e\x04\x7e\x50\xd7\x93\xd2\x36\x16\x79\x69\x72\x66\x31\x1c\x2a\xbd\xee\xdf\xfc\x0d\xf1\x1f\xfa\x39\x00\x8e\xdf\x30\x6c\xcf\x0e\x0d\xa3\x0e\x19\x64\xb1\x47\xee\x7c\x16\xee\x11\xb0\x53\xb0\xc7\xf1\x57\x7e\x30\x8f\xc9\xe1\x0f\x81\x34\x84\x01\x1d\xe0\x23\xdf\x81\x68\xd0\x81\x8f\x7c\x47\x42\x09\x3a\x93\xd7\x4c\x82\x20\xf2\x0c\x28\x27\x21\x23\xcc\x63\x21\xb8\xc4\xdc\xb2\x7b\x24\x49\x6c\x5d\x35\xf0\xfd\xb0\x39\x87\xbc\xa7\x4a\x02\xe5\x0b\x8e\xa4\x58\x67\x90\xb0\x9f\x9e\x45\x9a\x51\xb4\x05\x9a\x38\xac\xa7\xb2\x37\x52\xec\x5b\x2c\x50\x21\xd1\xcc\x0d\x2c\x10\x50\x74\x78\x68\xf8\xa7\x5d\xcf\xa0\xe2\x5a\x15\xba\x37\x55\xab\x09\x8b\x14\x45\x58\x5e\x54\x2c\x5d\xb1\x90\xd0\xa0\x2e\x09\xec\x65\x5d\x6d\xaa\x0d\xf2\x6f\x02\x0f\xf8\x2b\x8d\x34\x87\x9b\x1f\x56\x37\xff\x99\x07\x45\x69\xbb\xf9\x81\xe4\x01\x52\x0d\x26\x2f\x45\x56\x59\x6a\xee\x1e\x1c\x1f\x67\xbd\x99\x06\x62\x27\xd6\x67\x1a\xac\x0e\x84\x22\x0d\xc8\xd4\x73\x03\x4b\xa1\xfc\xa8\x51\x5c\xb5\x68\x03\xb5\x6c\x83\x82\x10\x42\xc5\xdd\xf8\x29\xc9\xd0\x90\x5c\x35\x63\x29\xfc\x04\x75\x91\xa0\x4a\x3e\xa1\x28\xca\x2c\x58\x93\x10\xea\x54\x40\xc8\xad\x37\xb0\x71\x09\xec\xb9\xb3\x44\x58\xae\x11\x94\x95\xdc\x98\xcc\xb6\x52\x02\x66\x04\x99\xcc\x0b\x6d\x8b\x17\x36\x1a\x84\xc2\x10\x3c\x31\xbc\x33\x43\xb2\xa2\x10\xb8\x30\x6c\x31\x50\x24\xac\x41\xbd\x35\x30\x61\x18\x9a\x78\xec\xc2\x41\x62\xf4\x4b\x49\x41\x78\x21\x0f\x10\x5f\xe6\x60\x1c\x32\x9d\x7e\x27\x16\x0d\x42\xc8\xd0\x40\x9a\x6a\xa4\x07\xe8\x0b\xdf\x71\xfc\x15\x4a\x92\x44\x05\xb2\x82\x94\x0c\x5f\xfb\x28\x7e\x4a\x89\x8b\xc8\x45\x23\x77\xbc\x64\x23\xe6\xad\x69\x7b\x9a\x3c\xec\xcc\x60\xe0\xac\x59\x90\x81\x01\x97\x8c\x94\xd7\x3f\x88\x67\x96\x95\x9f\xe8\xa2\x5b\x4f\xa7\xf7\x5e\x7e\x42\x17\xcc\x08\x51\xda\x5e\xac\xbb\xa7\xa6\xc3\x0a\x64\x84\xc8\xac\xfb\x94\x6b\xc5\x9f\xda\xf7\xbd\x10\xb4\xbd\x3f\x5b\x2f\xa9\xda\x21\xaa\xb9\x5c\x3a\xb1\xea\xf9\xda\xed\xdf\x50\x72\xff\x37\x94\x0b\x01\xa3\x61\xf7\x72\x76\xba\xff\x49\xcd\xd3\x7e\xae\x72\x59\x1b\x43\x7b\x48\x02\xcd\xbf\xef\xe4\xa0\xa1\x23\xd0\x60\x89\x10\x46\x0c\xc2\x0e\x24\x9e\x6e\x97\x1c\xb5\xda\x9d\x92\x60\x81\x69\x33\x2a\xc7\x57\xa5\x87\xca\xa7\xf8\xae\x91\xa1\xc7\xcd\xca\x83\x1d\xce\x5f\x02\x86\x4e\xb4\xa2\x29\x8d\xda\x56\x4a\x25\x5e\xca\x14\x06\xca\xfb\x3a\x04\x16\x06\x3e\x04\xfd\x0e\x79\x7a\xfe\x1f\x2f\x0e\xfb\xf8\xa1\x54\x46\x99\x94\x87\x16\xd2\xc7\x30\x9d\x0e\x7b\x25\xa0\x82\xa9\x32\x09\xf9\x80\x98\xb1\x34\x61\x70\xb0\xea\x7e\x62\xcf\x58\x6f\x37\xe1\x79\x6a\x46\x4e\x98\xcd\xdd\x6e\xbc\xa9\x51\x42\x75\x6c\x9e\x10\xae\xae\x8b\x1d\x1e\xd7\x6f\x12\x37\x84\x88\x0d\x6d\x01\x95\x4d\x5d\xe2\x9a\x33\x9a\x84\x99\x37\x49\x81\x17\x02\x18\x48\x0f\x26\x50\x40\xb2\x2f\xdb\x93\x49\x68\x76\x08\xf3\x0d\xda\xeb\x8d\xeb\x1d\x4d\xa2\xe6\x4c\x92\x5a\x61\x0f\x3e\x18\x37\x50\xcc\x07\x1b\xd5\xad\xa6\x49\x4c\x42\xd4\x3d\x55\xfb\xdb\xb7\xbd\xba\x34\x96\x46\x85\xa5\x36\x18\x2a\x8e\xc2\x42\x8d\x71\xf9\x62\xdc\xd2\xd0\x80\xd0\x40\x0d\x0c\x3f\x75\x1b\x07\x64\x88\x74\x11\xc4\x21\x71\x4e\x1f\x6c\x4b\xf4\x83\xe2\xaa\x0a\x7b\x0e\xc6\xb7\xd9\xba\x24\x47\x41\x93\x73\xb3\x3a\xe8\x0f\x47\xc6\x74\xcd\x42\xea\xfe\xb0\xe9\x2a\x2e\x70\xf8\xae\x86\xe1\xb5\x01\x37\xbf\x75\xf4\x2f\xa2\x14\x30\x44\x7c\xfa\x87\x6f\x2a\xc5\x4e\xf6\x9c\x2e\xf6\x12\xb5\x42\xdb\x10\xe0\x19\x3c\x8b\xe8\x25\x2d\xc7\x0e\xb9\x57\x68\xc0\x0d\xb4\x72\x1b\x24\xec\xac\x31\x91\x5a\xb4\x24\xa5\x1a\x14\xd3\x73\x2c\xef\x50\x17\xdc\x4d\x4d\xc7\xa9\xff\x23\x7a\x93\x80\x22\x80\x32\xdf\x2c\x87\x89\xa1\x07\x20\x00\x17\x42\x7a\x60\x2b\x08\xd4\xe0\x93\x90\x50\x0a\xb6\x4a\x82\x44\x56\xc6\x0a\xbd\x54\xce\xf4\x98\xeb\x55\xeb\x5a\xcc\x9e\x9c\x87\x00\x92\x84\x93\x8e\x8c\xa8\x23\xd3\x8b\x16\xa6\x05\x5e\x43\x03\x55\x72\xb4\x06\xf7\x20\x4d\xd4\x23\x59\xe1\xaa\x40\x50\xb3\x34\x65\x0f\x32\x89\x04\xfc\x46\xd6\x38\xaa\xcd\x3c\x65\xb5\xe7\x56\x72\x3c\x6f\x6d\x60\xb8\x91\x59\xff\x0e\x02\xaf\xcd\xa6\x34\x40\x4f\x9f\x99\xb7\x09\xe3\x3c\xd3\xc4\x8c\x79\x86\x68\x54\x30\x50\x71\x95\x9e\x19\x58\x9a\x3f\x57\x6a\x0e\x57\xbd\x06\x71\x73\x2d\xc5\x09\x77\xa5\x66\xe6\xe5\xd0\xd9\xa7\xbc\x3a\x90\x30\xe4\x79\x9d\x2e\xa8\x4b\xf3\x3a\xad\x89\x10\x0c\xd6\x16\x75\xa9\xfc\xf9\x40\xa8\x76\xab\x91\x7e\x04\x3e\xe8\x85\xa3\x5e\x3f\xde\x7c\xea\x90\x93\x93\x4e\xbf\xdf\x19\x0c\x3a\xba\xde\x39\x3d\xed\xb4\x5a\x29\x4e\x18\xac\x3b\x85\xaa\xd0\x4a\x4d\x51\x61\xf7\xed\xe6\x28\x72\x56\x8b\xb9\x47\x44\xb0\xe4\x53\x6c\xc9\x93\x5e\x08\x66\xba\x89\x42\x2a\x82\x6e\x85\x38\xb8\x24\x95\x73\x05\xb4\x56\x81\x6d\x5c\xd2\x35\x8a\x85\x00\xb4\x5d\x75\x3e\x5e\xa3\xfd\xab\xb6\x92\xca\x35\x41\x85\x1c\xd9\x02\xaf\x60\x15\xb4\x34\xe7\x5a\x32\xcd\x45\xe0\xcf\x23\x2b\xc4\xad\xbc\x0e\xcc\xb9\x10\xe0\x26\x0d\xa2\xc7\xd6\x26\xed\xd6\x19\x39\xba\x20\x3f\x8f\x0f\x5a\xcd\xe1\xe1\x71\x8b\x04\xe3\x41\x9f\xec\xef\x64\x3e\x64\xfe\x66\x03\x4a\xf2\xfd\x3f\x98\x2e\x16\xa5\xc2\x78\xa8\x77\xde\x5d\xc0\x70\xf3\xc5\x04\xfe\x30\xc9\xbb\x29\xbc\xc6\xa0\x44\x0c\x65\xa7\x97\x08\x3b\xd4\xab\xbb\x0d\x2c\xeb\xda\x58\x94\x25\x7c\xca\xb0\xf8\xb3\xa0\xf8\xb4\xbd\x88\x96\x2d\xed\x6a\x50\x88\x42\x01\x0e\xb4\x2a\xc7\xa3\x92\x38\x99\xbb\x6e\x29\x45\x73\x98\xbc\x3b\xf0\x6d\x88\x3a\xef\xc8\x39\xc4\x25\xae\x1a\xc2\xc8\x83\x0c\xe8\xac\xf7\x88\x0d\x2b\x0b\x0a\xd9\x4f\xac\x36\xd0\x23\xa8\xca\xc0\xa3\xa1\x75\x69\x62\x9a\x24\x0b\x9b\x3a\x73\xae\x0f\xdc\x31\x81\x7a\xdc\x97\xa8\xc1\xf2\xe4\xce\x7c\xe0\xcb\x9c\xd0\xbc\xa7\x48\x8e\x9f\x87\x49\x16\x6d\x0a\x0d\x16\x0b\xe5\x0a\x3b\x88\x1d\x9c\x6e\x71\x2b\x25\x33\xbe\x03\xb8\xca\x99\x7d\x6b\xde\xd8\xa1\xb2\xc1\x98\x29\x91\x36\x39\xbb\x59\x32\x19\x9b\xd1\x0a\x50\x96\x6e\x2a\xc9\x3f\xb5\xdd\x1a\xc1\xda\x00\xa8\xb4\xc8\x08\xc9\x94\xab\x26\x00\xe1\x30\x00\xb2\x05\xe6\x0c\xa9\xa4\xc2\x54\x52\x39\x4b\x18\x6d\x02\x39\x8a\x41\x8e\x36\x83\x80\x0c\x67\x89\x2c\x15\x30\xcf\x25\xdf\xc6\xad\xaf\x58\x01\xda\x3d\x5d\xb3\x0d\xbe\xcd\x36\x68\x39\xf9\x25\xda\x16\x94\xae\xd8\x75\x25\xd4\x4d\x40\xcd\xfb\x7c\x71\x5d\x32\x86\x4c\x6d\x93\x03\xc4\xde\xce\x5b\xf3\xde\xbe\x58\x25\x3b\x76\x15\x99\xe9\x94\xef\x7d\xfe\x10\xfd\x1d\xd2\x3e\xd6\x5a\xda\xc1\x6f\x9b\x83\xd9\x83\x54\x16\xec\x1a\xca\x72\xbc\xde\x1f\xcc\x84\x28\x55\xf1\x1f\x7a\x6a\xbb\xd4\xd1\xe3\x61\x7f\x97\x22\x3a\x06\x7f\x53\x05\x9d\xe0\xfe\xe2\xf2\x39\xad\x56\xb2\xe8\x8d\x9e\x2d\xec\xc6\x6b\xe0\x7c\x55\x2d\x6f\xe2\x61\x56\x4d\x4b\x99\x52\x68\x2a\xa6\xf9\x52\xd0\x4e\x62\x72\x3e\xef\xa6\xdd\x89\x1f\x17\xe3\x70\x2d\x6f\xd6\xa2\xe3\x66\x8e\x91\x64\xe6\x62\x68\x8a\x0f\x15\xe0\xef\x5e\xa1\x5d\xde\x9b\xe6\x1f\x05\x80\x64\x9b\x9a\x3f\x0b\x7d\x15\x9b\xde\xf0\x96\x01\x3d\x97\x04\x63\x49\xae\x4a\x1a\x72\x7b\xcf\x29\x94\x5c\x5b\x66\xc7\x2c\x95\x8b\xc6\x57\x7a\x71\xff\xe2\x72\x17\x2f\x8e\xc1\xdf\xe4\xc5\x09\xee\x2f\x5f\x04\xb2\xc8\x79\x8b\x0f\x57\x54\x5c\x2f\xad\x8e\x2a\x96\x27\x42\xf7\x85\x00\xc8\x4f\x82\xd0\x1a\x5e\xc5\x0e\xc3\xd6\xb8\xc8\xfd\x69\x93\x14\x43\x0f\x4f\xca\x2d\x3a\x1c\x14\x03\x23\x57\x47\x7e\x91\x28\x2a\x2e\x55\x53\x1b\x57\xfb\xed\xeb\x8d\x7b\x49\x22\x84\xd6\x7f\x98\x4e\x24\xe2\xe7\x1e\x14\xb8\x20\x3d\x7f\x6f\xbc\x30\x8d\x63\xdd\x27\xce\x9c\x9f\x6b\x2a\x3f\xe9\x82\xa4\x8a\x5a\x78\x5b\x32\x18\xf3\x35\xda\xf9\xe2\x22\xf1\xfd\x3e\x27\x59\x99\x15\x92\x81\x17\x3a\xe5\xf5\x5c\xe5\xcc\x56\xf9\x8c\x7e\x97\x98\x23\xf3\xb1\xef\xf8\xd6\xfd\x94\x53\xda\x49\x3a\xee\x29\x9c\x39\x3c\x0b\x7d\xe2\xc8\x11\x3a\xdf\xb8\xaa\xbb\xb8\x14\xc9\x74\xbb\x44\x05\xa6\xfc\x54\xb3\xac\xa9\xe7\x5c\x80\x8a\xed\x2e\x87\x27\x71\x6c\xfc\x9e\xd0\x34\xe2\x14\x76\x89\x4e\x19\xc6\x9b\x02\x94\x84\xfe\xcb\x63\x14\x57\xdb\x55\x0a\xf4\xb4\xc5\x47\x55\xbe\xa5\xb4\x79\x87\xf2\xed\xf1\x63\xd3\xf6\xd2\x6b\x1c\xe3\x9d\x9c\x8b\xbb\x4b\xaf\x61\x59\x74\x4d\x3c\xfa\x7e\xd7\x3c\x9d\x22\x81\x9d\xa6\xe7\xfb\x63\xc3\x6e\x31\xe1\x79\x7b\xf6\xe2\x70\xd7\xf2\xb4\xe3\xd7\x2c\xde\x33\xeb\x2e\xee\xd6\xcc\xb6\x4c\x67\x00\x84\x76\x99\x7b\x45\xbc\x37\xcd\xc0\x12\x91\xff\xd4\x5a\x41\x9a\x38\xdb\x56\x36\xef\xdc\xd8\xcd\xd7\x26\xc9\x16\xf3\xb6\x78\x20\x0b\x96\x77\xb1\x37\x66\x32\x31\x4f\x5f\x95\x2e\xa4\x72\x1d\xb7\xee\x6c\xcf\xb8\x59\x87\x94\x6d\xd3\x8f\x8a\x7c\xd5\x0d\x33\x73\xe8\x9d\x20\x7e\x59\x3d\x19\x9f\xca\x8d\xe7\x9d\xf8\x70\x0a\xa2\xac\xd8\xc2\x68\x7b\x5d\x23\xc5\xa1\xf2\x92\xbf\xaa\xb1\xac\x23\xbc\x65\x93\x6b\x49\xd4\x8b\x1b\x60\xad\x72\x94\x24\x4d\xd2\x6e\x1d\x1c\xe5\x1f\xdb\x83\x65\x6e\xdf\xbb\x53\xd0\x1d\xe7\x2f\xb7\xc8\xfc\x55\x75\x5b\x4d\x50\x71\xf9\xa1\xa2\xc6\xaa\x82\x4a\xeb\x99\x6a\xaf\x7d\xb1\xc4\xa8\xb8\x87\xf6\xae\xc8\xd7\x1f\x0e\xf8\x36\xfe\x4e\x61\x4f\x46\x7a\x5b\xcc\xcb\x51\xf8\xc5\x01\x6f\x61\x09\x3d\xbd\x6d\x75\x94\x44\xa0\x9d\xe3\x9d\x32\xa0\xcc\x02\x7f\xe2\xf7\xa0\x37\x4f\x33\x7b\x01\x4e\x81\x46\x25\xb1\x51\xd5\xe4\x70\x27\x63\xaf\x39\xfe\x0a\x6f\x6b\xbd\xb0\x12\x89\x07\x0a\xc2\x26\xff\x21\xa1\xbe\xe5\x1e\x5c\xa3\x88\xf7\xd2\xb1\x8f\xac\xcb\x24\x2a\xc4\xdf\x39\xaf\x4d\x60\x62\xb7\x15\x2e\x28\x1d\x16\xbd\xe2\xbc\x77\xeb\x01\x71\x11\xfe\x4a\x4d\xf7\x0a\xb8\xd8\x5b\x4f\xa1\xca\xc8\xd9\x9e\x42\x86\xbd\x71\x9f\xa1\x8c\x2e\x6a\xfe\x0c\xb5\x72\x0d\x50\x46\xe3\x35\x4b\x86\x55\x55\xc2\x94\x91\x2a\x26\x7f\x46\xe2\xe5\xc8\x20\x1b\xa9\x7c\x78\xc7\x2c\xd3\xab\x6f\xb9\x49\x07\x8e\x2a\xee\xd0\xc1\x4c\x57\xb6\x9d\x24\x8f\x7d\x32\xbc\x20\xc9\xb5\x43\xbc\xd0\x04\x94\xc9\x9d\xc9\xc8\x0d\xa5\x5e\x72\x75\x32\xbd\x6f\x02\x74\xc5\x15\xbc\x57\xd0\xcd\xae\x94\x65\x57\x58\xb6\x11\xce\xae\xf0\xed\x46\x3c\xc5\xdb\x4c\x5c\xd6\x2c\x98\x40\xdc\x54\xac\x54\x5f\x85\x7f\xbf\x34\x27\x38\xca\x32\xc0\x44\x8a\xff\x25\x49\x9b\x47\xee\x92\xd5\x25\x78\xbc\x61\x56\xb3\xf1\x22\x24\xea\xc0\x30\x70\x80\xaa\x01\xf8\x90\x4b\x0d\x55\x0c\x34\xbe\xf1\xe8\x33\x8d\x7a\x0f\x76\x00\x64\xc0\x4d\xea\xea\xf0\xc2\x98\x9d\x1b\xd3\x7e\x6f\xac\xf2\x43\x73\x0e\x1b\x5f\x82\x2c\xc2\x42\x6c\xed\x9d\xe9\x23\x7d\x3c\x33\x2e\xa7\xfa\xc4\x18\xf7\x46\xba\x84\x25\xdd\x90\x7c\x09\xf3\xa2\x37\x9d\xfe\x79\x3e\x19\x48\xd8\xb9\x1d\xa3\xcd\xde\xc7\x41\xe2\x2d\x9a\xcc\x62\xf8\x1f\xa9\xa4\xcd\x7f\xa1\x2b\xaa\x99\xc1\x2d\x9e\xc1\x4b\x65\xd9\x1a\x04\x7b\xb4\xc3\x7a\xbb\x51\xfb\xbf\x00\x00\x00\xff\xff\x69\x7f\x66\x5f\xfc\x35\x00\x00")

func idracPyBytes() ([]byte, error) {
	return bindataRead(
		_idracPy,
		"idrac.py",
	)
}

func idracPy() (*asset, error) {
	bytes, err := idracPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idrac.py", size: 13820, mode: os.FileMode(493), modTime: time.Unix(1467986636, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _idracToml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x49\xcc\x4b\x2f\x4d\x4c\x4f\x55\xb0\x55\x50\x2a\xa8\x2c\xc9\xc8\xcf\x53\xe2\x82\x89\x85\xa5\x16\x15\x67\xe6\xe7\x01\xa5\x8c\xb9\xb8\xa2\xa3\x8b\x52\x0b\x4b\x33\x8b\x52\x73\x53\xf3\x4a\x62\x63\xb9\xf2\x12\x73\xc1\x9a\x40\xa2\xa9\xc5\x25\xc5\x4a\x5c\x65\x70\xe5\x4a\x46\x7a\x86\x06\x7a\x06\x4a\x80\x00\x00\x00\xff\xff\x20\xd2\xea\x2d\x5d\x00\x00\x00")

func idracTomlBytes() ([]byte, error) {
	return bindataRead(
		_idracToml,
		"idrac.toml",
	)
}

func idracToml() (*asset, error) {
	bytes, err := idracTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idrac.toml", size: 93, mode: os.FileMode(420), modTime: time.Unix(1467192632, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _iloPy = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x19\xfb\x6f\x9b\x48\xfa\x77\xff\x15\xb3\xae\x4e\x80\xce\x75\x1d\x27\xed\xb5\x39\xe5\x24\xaf\x43\x6e\xad\xab\x9d\x28\xf6\xde\x43\x96\x85\x30\x8c\x63\xb6\x30\xb0\x0c\x24\xf1\x9e\xfa\xbf\xdf\xf7\xcd\x0c\x30\x18\xc8\xa3\xba\x6a\x97\xaa\x11\xcc\x7c\xef\xf7\x8c\xdf\xfc\xf0\x2e\xe7\xe9\xbb\x6d\xc0\xde\x51\x76\x4f\x92\x43\xb6\x8f\x59\xaf\x17\x44\x49\x9c\x66\xe4\x17\x0e\x1f\xea\x3d\xe6\xc5\x1b\x3f\xf0\xde\x2e\x8d\x23\xe2\xc5\xc9\x81\xa8\x45\x9f\xd2\x04\xbf\x4b\xdc\x7d\x12\x84\x71\xaf\xd7\x9b\x4f\xa6\xce\xcd\xad\x7d\x35\xfb\xb7\xf3\xe3\xe7\xc9\xf4\x1f\x9f\x67\xcb\x15\xb9\x20\xeb\x1e\x81\xc7\x78\x3f\x82\x7f\x67\xc6\x80\x18\xa7\xa7\xef\x47\x1f\xae\xf0\x6d\x34\xfa\xf4\xf1\x2f\x1f\xe4\x1b\x3e\xe5\xdb\x14\xdf\xc6\xa3\xb3\x93\xf7\xa7\xf8\x76\x72\xf6\xe9\x64\x0c\xbb\x92\xd2\x68\x3c\x52\x94\xae\xec\x2b\x78\x04\xc4\xe4\xea\xd3\x58\xe2\x8f\x47\x1f\xe5\xdb\xa5\x3d\xb9\x1c\x4f\x25\xdc\xe4\xf2\xec\x12\xf0\x37\xbd\xde\xa5\xfd\xcf\xd9\xd4\x76\x66\x8b\xab\x6b\x67\x65\xcf\x6f\x3e\x4f\x56\x36\x48\xf9\x5f\x41\xfb\x0d\xd9\x05\xdb\x94\x3a\xde\xde\x65\x8c\x86\x8e\xe7\xa6\x3e\x27\x2e\xf3\x89\x1f\xf0\x2f\xf0\x96\x52\x92\xb3\x9c\x53\x9f\x98\x42\x6d\xe2\xc7\x94\x33\x23\x23\x49\x1a\xdf\x07\x3e\x25\x3c\xf7\xf6\x24\x60\xbb\xd8\x12\x04\xfb\x51\xec\x03\x1d\xe6\x46\xb4\x7f\x4e\xfa\x7d\xa9\x42\x9f\x66\x7b\x9a\x32\x9a\x71\x58\x5c\x6f\xd4\x62\x44\xa3\x38\x3d\xe8\x2b\x2d\xc2\xe8\xdb\xc0\xd3\xa3\x9c\xc7\x69\x6d\x55\x48\xaa\x2f\x70\x9a\x06\x2e\xc8\x90\x47\x5b\x9a\x2a\x29\xbe\xf6\xec\xd5\x4f\xf6\xed\xc2\x5e\xb5\x19\xa1\x12\x7a\x40\x78\x42\x41\x5b\x34\xc1\x2e\x48\xa3\x07\xb4\xc0\x37\x58\xc1\xf5\x74\xf5\xdb\x8d\x22\x38\xe1\x42\xce\xbe\xb0\xf8\x81\x49\xd6\xfd\xd2\x16\x92\xbb\x73\x4f\x53\x1e\xc4\xac\x54\xe4\xe6\xf6\x7a\x6a\x2f\x97\xd7\xb7\x4d\x4d\x1a\x8c\x50\xb9\xd7\x49\xbe\x73\xa3\x20\x3c\x14\xd8\xd2\x3c\x12\x33\xa5\x59\x9e\x32\x0e\xc0\x90\x02\x34\x05\x53\x6d\x73\x48\x1e\x16\x1e\xc8\x2e\x4e\x49\xf0\xf9\x7a\x4c\x4c\xf5\x76\x4a\xb2\x7d\xc0\xc1\x82\x34\xf4\x09\xbc\xd0\x28\xc9\x0e\x16\xd2\x62\xf1\xaf\xae\xe4\x14\xba\x5b\x1a\xea\xf6\x08\x98\x4f\x1f\x61\x61\x11\x33\x3a\x50\xac\xa5\xf0\x92\x15\x0f\x40\x34\x37\x15\xd2\x22\x51\xf7\xde\x85\xef\x6d\x08\x0e\xe2\x05\xb9\xba\x65\x05\x25\xb9\xe4\xc5\x29\xe5\xe5\xd2\xd7\xde\xdc\x9e\x5f\xdf\xfe\xe7\xbb\x98\x90\x07\xbf\xd1\x3a\xf3\xba\x3c\x5f\x7b\x3d\x2f\x74\x39\x27\xb3\x30\xb6\xd3\x34\x4e\x4d\xfb\xd1\xa3\x49\x06\x4e\xb6\xce\x05\x42\x02\xbb\x50\x60\x7c\xba\x03\x7b\xa5\x91\x1b\x02\x45\x07\x62\xca\x84\xff\x0a\x04\xde\x40\x66\xf8\x3b\xcc\x93\x84\xa6\xa6\x35\x4c\x69\x12\xba\x1e\x35\x8d\xb7\x58\x02\xce\x0d\x29\x8d\xf4\x1a\x02\x2a\x82\x77\x34\x73\x40\x0b\x27\x60\x3c\x73\x19\xc0\xef\x63\x9e\x0d\x08\x28\x98\x0e\x04\xe3\x87\x38\xf5\x15\x13\xd4\xf6\x42\xba\x7f\x08\xc2\x0a\x50\xb4\xcc\x85\xc4\x09\xe3\xbb\x80\x5d\xd4\x31\x2f\x4a\x12\x3a\x7b\x59\x30\x91\xbd\x83\xfc\xcb\x72\x60\xa6\xee\x03\x2a\xc6\x07\x08\x52\x84\xba\xe2\xfe\x86\xac\xf6\x94\xf8\x6e\xe6\x12\x9e\xa5\xb9\x07\x94\xa8\x08\x35\x28\xbc\xc4\xf5\x7d\x70\x28\xa7\x5c\xb1\x00\xf7\x88\xca\x2d\x5d\x04\xd1\x91\xc0\x7a\x76\x20\xcc\xe5\xd9\x61\xa0\xe8\x51\x70\x84\x07\xb5\xa1\x0a\xd9\x53\x62\xb2\x98\x78\x21\x85\xb8\x82\x42\x92\x05\xcc\x43\x3f\x90\x2d\xcd\x1e\x28\x65\x10\xb8\x5b\xea\xfb\x40\x7c\x31\x9b\x8a\xc2\xa8\x28\x05\xcb\xe9\x72\x46\xb0\x1d\x70\x6b\x28\x6d\xb5\xd3\x55\x20\x17\x17\xe4\x54\xaa\x81\x0f\x98\x3a\x05\xb3\xfb\x8f\x60\xce\x91\x58\xa5\x21\xa7\xed\xfb\x27\x72\xbf\x30\x11\x76\x94\x8d\x58\x42\x91\x23\x08\x34\x52\x18\xad\xc2\x17\x89\x86\xa0\xd1\x10\xec\x6b\x1a\xf2\x1b\xe2\x60\xbd\xb1\x2a\x20\x54\x59\xe2\xb3\x3b\x6a\x96\x3c\xc1\x91\x94\x99\x12\xc5\x1a\x90\xb1\x55\xd1\x55\x8a\x99\xb5\x85\x8a\xe1\x3a\xd8\xac\x0d\x0c\x08\x63\x83\x0a\x1b\x37\x60\x0f\xa3\xb4\x52\x07\xfc\xbd\x1b\xe6\x88\xf0\x03\x20\x80\x07\x0c\x34\x27\xa4\x6e\xcc\xee\x38\xc9\x62\x12\xdd\x45\x59\xe1\xdd\x1a\x99\x23\xb1\xaa\x24\xa8\xa7\x48\xc1\x89\xfc\x99\x9c\x54\xdc\xac\x06\x2e\xa8\x05\xe0\xeb\xf3\x0f\x1b\x20\x90\xa1\x59\xda\xfa\x79\x93\xa7\x72\x0e\xf0\x2d\x06\x03\xb3\xd1\x5a\x9a\xdc\x14\xd6\x5a\x74\x86\x8d\xcc\xdc\x2e\x20\xe9\xf7\xa1\x0b\x79\xcd\x7c\x13\x16\x6a\xa9\x54\x02\xe8\x09\x25\x0a\x8c\xc9\xcb\xc4\xe1\x6e\x94\x40\x5d\x54\x28\xc2\x06\x5a\x7a\x40\x5d\x1b\xbf\x3f\x3d\x25\xf3\x9f\x7e\xeb\x17\xb1\xcb\x31\x67\xd0\x10\x58\xa3\xb4\xc0\x04\x51\xa1\xe0\x9b\x7c\xc8\x93\x30\xc8\xcc\x3e\xe9\x5b\xeb\xd1\xa6\x26\x51\x4d\x92\xaa\x47\x8b\xdc\xc6\x4f\x14\x4b\xc0\x17\xe5\x47\xd4\x62\xd3\xd3\x1c\xfa\x02\x89\xcf\x48\xbc\x23\x67\x44\xe0\xfe\x95\x7c\x84\x06\x93\x52\x17\xe6\x83\x9e\xe6\x50\xaf\x5d\x09\x7c\x3c\xa5\x88\x57\x2a\x02\xe4\x34\x5d\x34\x7d\x3c\x29\x6d\xa5\x49\x3d\x05\x93\x22\x05\x85\x6e\x15\x17\xfc\xd4\xa3\xa2\xd9\xa7\xad\x1a\xec\xda\x90\xbd\x16\x73\x07\x0b\x9c\x99\xc8\xdc\xbd\x92\xab\x03\x68\x3e\xd6\x31\x86\x68\x72\x02\x41\x01\x7f\x16\x0b\x02\xf6\x08\x54\x84\x84\x00\xd5\x22\x44\x61\x2d\xc5\x5e\x83\xba\xb0\xad\x40\xa9\xbc\xa4\x30\xec\x47\xea\xe5\xa2\x32\xae\xa8\xb7\x67\x31\x94\xfe\xc3\x31\x01\x69\xac\x22\x6e\x71\xa5\x16\x26\x15\x88\x1e\x2f\x72\x08\x94\x7d\x40\xbc\x1e\x07\x0b\x76\xd3\x32\xb2\x5f\x1a\x2b\xa3\x4f\x1f\xc8\xfc\xc7\x5a\x6c\x74\x04\xf8\xb3\x41\x5e\x0f\x74\xfc\x92\x72\x76\xd5\x65\xb1\x59\xd1\x87\x6f\x3d\x28\x8e\xc6\x0e\x4b\x87\x03\x9f\x81\xae\xa5\xfd\x85\xe2\xaa\x9e\x2f\x71\xc3\x3a\x86\x6e\xf3\x70\xd4\xe1\x61\x29\x57\xe1\x1c\xf8\xaa\x8f\x07\x62\x17\xfc\xd2\xda\x73\xeb\x1d\x56\x9e\xa4\xde\x96\x8d\xf6\xd7\x3c\xc8\x28\xa8\xef\xc5\xec\x9e\xb2\x80\xc2\x78\x88\x16\x89\xf3\x14\xa8\xc1\x70\xf0\xd6\x73\x39\xcc\x73\x58\xb6\x28\x6c\x50\xf2\x40\x09\xc3\x19\x3b\xc3\x99\x92\xef\xdd\x04\xb0\xa1\xe4\x13\x30\x7d\x06\x6e\xdd\x06\xd9\x50\xc6\x07\xb4\xf0\x04\x27\x60\x9c\x36\x1c\x94\x49\x84\x49\xf9\xd5\x36\x33\x94\x9b\xe5\x40\x87\x4f\x1f\x0e\x76\x0e\x4e\x68\xda\x31\x41\xac\xb7\x9e\x28\xc4\x4e\xe3\x70\x22\x57\x5d\xcf\x29\x27\x0f\x6d\xf3\x6b\xc7\x08\x30\x3e\xaf\x75\x5f\xd0\x26\x2b\x02\xa5\x94\xb4\xd1\x6d\x11\x4a\x79\x31\xdf\xfe\x42\xbd\xcc\xb0\x44\x77\x5d\x1e\x78\x06\xd1\x34\x03\x3d\xa0\xe1\x61\x32\x1a\xcd\xf6\x54\x92\x85\xf8\x50\x4a\x1b\x9b\x32\x27\x81\x72\xb3\x37\x81\xe3\x60\xee\xc9\xe9\x4b\xe5\xb8\x29\x8c\xf6\x72\x51\x2a\x3b\x7f\xab\x30\xcd\x11\x04\x9f\x2e\x11\xe7\x32\x45\x2f\xe9\x7d\xe0\xd1\xf6\x89\xe4\x08\x5d\x24\x98\x98\x49\xe4\x34\x00\xd3\x51\x18\x42\x0a\x3d\x37\x82\x68\x4a\xca\x90\xf9\x7f\x5a\x1b\xb2\x0b\xab\x95\x38\x8d\x56\xfb\x6a\xb8\xb3\xba\x0b\x1a\x3e\xe5\x48\xd8\x44\x6c\xc2\x82\x2f\xd5\x59\x8d\x29\xc4\xf6\xc1\xa7\xd3\x11\x25\x00\x2f\xcf\x15\x82\xce\x00\xa6\x6a\x2f\xb3\x3a\x3d\x50\x93\xb6\x9a\x0d\xd1\x87\xb6\x36\x7a\x8b\x91\x7f\xc2\x79\x70\xc7\x22\x28\x30\x46\x2b\xad\x16\xef\x14\x8f\xee\x25\x3d\x85\x9f\x73\x56\xf1\x6c\x61\xd6\xf8\xf2\xb4\x2b\x69\xf8\xe4\x09\xe0\x5b\xd2\x1f\x12\xcd\x87\x12\x4c\x16\x38\x61\x3f\xe3\xee\xef\x92\xf7\xed\x5d\xff\xc5\x82\x7c\x8f\xac\xaf\x84\x93\xa3\x4f\x4d\x9a\xd6\x30\x6b\x24\xf9\x2b\x10\x64\x17\xd5\x31\x7e\x87\x7a\xf0\xc2\x7c\xd7\x73\xb8\x89\xdc\x9e\x1b\xb2\xdd\x83\x08\x7e\x20\xdc\x8c\x3d\xba\x60\x03\x71\x7c\x80\x06\x1d\x06\x78\xc5\x22\x6f\x60\xb2\xbd\x9b\x19\x1c\x5b\x79\x07\x35\x71\x1b\xf4\xe0\x1e\xb0\xb7\xcb\xe3\xf4\x5d\x1e\xf0\x7d\x79\x9c\x2e\xc4\x81\x5e\xcf\x33\xa1\xba\x1b\x30\x00\xea\x20\x57\x3f\x7d\xdf\xf3\xa1\x3c\x77\x73\x79\xf0\x1e\xfe\x2e\x25\xea\x45\xc7\xdd\x16\x3c\xbd\xb4\xe1\xb1\xf7\x0f\x59\xc2\xf4\x3b\x89\xd4\x0d\x38\xad\xee\xa8\xfa\x3f\xab\x5b\xca\xa2\xbe\xc1\xf9\x09\xf4\x38\x27\x7f\xf2\xfb\x43\x39\x06\x98\xfa\x3c\x66\x15\x23\x11\x5e\x2e\xb4\x56\x27\x8b\xfc\x8d\x9c\x74\xf2\xab\x89\xda\x5f\x89\xc8\xe4\xfb\x38\x87\x00\xdf\x52\x19\x68\x98\xc0\x6d\x53\x91\x70\x28\xe9\xd7\x29\x40\x56\x64\xc5\x68\x5b\x0e\xb4\xdb\x43\x6d\x9c\x1d\x56\x38\xb5\xf1\xb8\x14\xff\xe8\x0e\x4d\xe9\x2a\xf4\x8e\x5c\xe6\xde\xd1\x54\x79\x70\xf7\x50\xf5\x01\xa2\x6d\x63\x52\x3a\xd5\xa6\x59\x5a\xa9\x5a\x93\x79\x2b\xe1\xb1\xd9\x55\x47\x6a\x39\xdc\xf4\xf1\xda\xaa\x5f\xd9\xad\xd6\x73\xc8\x69\xd5\x8c\x5e\x47\x72\xdc\x49\x72\xdc\x12\x1c\x75\x88\xb2\x30\x56\xd7\x7d\xc5\xae\xb2\x18\xae\xf8\x62\x1a\x13\xce\xd7\x2d\xd6\x36\xc6\xd7\x3a\x64\x8b\x05\xab\x13\x81\xd5\x18\xfb\x5f\x77\x6c\x50\x67\xcd\x52\x32\x20\xd0\xf6\x8b\xc9\x31\x58\xbd\xb9\x15\x47\x30\xed\xf2\xa3\xa3\x0d\x36\xf8\xad\x8d\xf2\x42\x47\xd0\xa9\xe2\xfe\xe8\xa6\xb4\x3b\xff\x5b\x14\x6a\x61\x53\xfb\x55\xe4\x88\x55\x6b\x7a\xc2\x09\x58\x75\x41\x81\x49\x16\x12\x53\xdc\x35\x0c\xe1\x70\x18\x24\x66\x27\xb3\xea\x12\xfd\x55\x9c\x6a\x03\x4f\x75\xa9\xd1\xc6\x40\xf5\xd6\xc2\xf2\xea\x1a\xa1\xa5\xfb\xd6\x12\x59\xa3\xa1\x02\x93\x7b\x2e\x7b\xf2\x0a\x7c\x27\x64\x16\x59\xd2\xef\x2e\x8e\x8b\x98\xcc\x6e\x8a\x6b\x4b\xec\x7e\x48\x97\xec\x5d\x0e\xc5\x8a\xb2\xe2\xa7\x02\x7f\xd8\x2f\x13\x1e\xb9\xbd\x80\x6a\x95\xb4\x02\x03\x4d\xfa\x24\xd9\x42\xfc\xd7\x91\x2e\xb1\xba\x49\x57\x19\xa8\xee\x27\x9e\xff\x11\xa1\xd7\xac\x14\x4f\x55\xce\x96\x54\x7c\x71\xd9\x50\x37\x76\x78\x8b\x83\x3f\xed\x0e\xfd\x3c\x4a\xb8\xa9\xa1\x42\x3f\xea\xf5\xc0\x3e\x8e\x88\x4a\xc7\x11\x7d\xd8\x01\x62\x01\x73\x1c\xa3\xba\x3c\x00\xa6\x31\x1f\x52\x76\x1f\xa4\x45\xdd\x9c\xdd\x38\xab\x6b\x67\x39\x9d\x2c\xb4\x98\x94\xee\x6b\xc0\xce\x27\x8b\xc9\xdf\xed\xb9\xbd\x58\x39\x3f\x2f\xed\x5b\x67\x31\x99\xdb\x1a\x56\xe5\x9d\x67\x31\x6f\x26\xcb\xe5\xbf\xae\x6f\x2f\x35\xec\x4c\xbf\x58\xea\x0e\x5c\x59\xae\xc5\x4f\x4a\xc4\x2c\x3c\x3e\xa8\x7e\xc6\x99\xc6\x51\x94\xb3\xc0\x13\xcd\x52\x6c\x5a\xf8\x0b\x1a\xd5\xaf\x32\xd1\x90\x74\xe8\xa6\x77\xbc\x76\x11\x06\x39\x3b\xa4\x8f\x41\x66\x9e\x58\xbd\xff\x05\x00\x00\xff\xff\xe4\xdd\xc7\xab\x61\x1f\x00\x00")

func iloPyBytes() ([]byte, error) {
	return bindataRead(
		_iloPy,
		"ilo.py",
	)
}

func iloPy() (*asset, error) {
	bytes, err := iloPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ilo.py", size: 8033, mode: os.FileMode(493), modTime: time.Unix(1467986434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _iloToml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x49\xcc\x4b\x2f\x4d\x4c\x4f\x55\xb0\x55\x50\x2a\xa8\x2c\xc9\xc8\xcf\x53\xe2\x82\x89\x85\xa5\x16\x15\x67\xe6\xe7\x01\xa5\x8c\xb9\xb8\xa2\xa3\x8b\x52\x0b\x4b\x33\x8b\x52\x73\x53\xf3\x4a\x62\x63\xb9\xf2\x12\x73\x91\x34\xe9\x66\x14\x64\xe6\xe4\x2b\x71\x95\xc1\xb5\x28\x19\xeb\x59\x28\x01\x02\x00\x00\xff\xff\x5e\xdd\x05\xf1\x5e\x00\x00\x00")

func iloTomlBytes() ([]byte, error) {
	return bindataRead(
		_iloToml,
		"ilo.toml",
	)
}

func iloToml() (*asset, error) {
	bytes, err := iloTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ilo.toml", size: 94, mode: os.FileMode(420), modTime: time.Unix(1467192632, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"idrac.py": idracPy,
	"idrac.toml": idracToml,
	"ilo.py": iloPy,
	"ilo.toml": iloToml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"idrac.py": &bintree{idracPy, map[string]*bintree{}},
	"idrac.toml": &bintree{idracToml, map[string]*bintree{}},
	"ilo.py": &bintree{iloPy, map[string]*bintree{}},
	"ilo.toml": &bintree{iloToml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

