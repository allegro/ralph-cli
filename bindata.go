// Code generated by go-bindata.
// sources:
// bundled_scripts/idrac.py
// bundled_scripts/idrac.toml
// bundled_scripts/ilo.py
// bundled_scripts/ilo.toml
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _idracPy = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x3b\x7b\x6f\xda\xc8\xb7\xff\xf3\x29\xe6\xba\xfa\xc9\xa0\x4d\x0c\xe4\xd1\x6d\xb9\xa5\x2b\x02\x4e\x8a\xb6\x90\x08\x48\xb7\xab\xdc\xc8\x72\xcc\x90\x78\xe3\x07\xeb\xb1\x43\xb8\x51\xbe\xfb\x3d\x67\xc6\x8f\xf1\x03\x12\x92\x5b\x2a\xc5\xf6\xcc\x79\xcd\x79\xcd\x99\x63\xf7\xc3\x7f\x35\x23\x16\x34\x6f\x6c\xaf\x49\xbd\x07\xb2\x5c\x87\x77\xbe\x57\xab\xd9\xee\xd2\x0f\x42\xf2\x0f\x83\x87\xf8\xde\x67\xc9\x1d\x5b\xa7\xb7\x51\x64\xcf\x6b\x8b\xc0\x77\x89\xe5\x2f\xd7\x24\x1e\x9d\x53\xba\xc4\x67\x31\xf3\xe8\x3a\x1a\x0d\x03\x4a\x93\x69\xdd\xa1\x2e\xf5\xc2\x19\x0e\x99\x8c\xe8\xb3\x94\x5f\x40\xff\x8d\x28\x0b\x99\x40\x4c\x9e\xb4\xa5\x69\xdd\x9b\xb7\x94\x69\x51\xe0\x38\xf6\xcd\xa1\x46\x1f\x2d\xba\x0c\x6d\xdf\x63\x09\xcd\xa1\xc7\xa8\x15\x05\x74\x22\x70\xfe\x32\x03\xcf\xf6\x6e\x6b\xb5\x69\xff\x9b\x3e\xea\x91\x2e\x51\xee\xc2\x70\xd9\x69\x36\x99\x75\x47\x5d\x93\x69\x73\x37\x5c\x68\x7e\x70\xdb\x5c\xdd\x50\xb7\xb9\x62\x96\xed\x36\xdb\x4d\xf8\xbb\x2f\x20\x9a\x07\x4a\xed\xe7\xe8\xfb\x78\x6a\x4c\x11\xfb\x29\x46\x5f\xad\x56\xda\xea\x90\x23\x1e\xb4\x5a\x87\xcd\xd6\x71\x93\xf9\xe6\x72\x1f\x94\x47\x1d\x7f\x49\x9f\x13\xac\xbf\xa6\xfa\x58\x46\x4c\xf8\x82\x36\x10\x41\xb0\x66\x48\xe4\xa8\xd9\xfa\x0c\xca\x8f\x5c\x1a\x98\xb8\x26\x89\xc4\xa8\x57\x49\xa3\x28\xbb\x6b\x7a\x20\x3b\xbf\x6a\x8f\x6c\x9e\x12\x18\xb7\x8d\x93\xde\x54\xaf\x24\x41\x1d\x47\xb3\x7c\x77\xf3\xf2\x9b\xff\x61\x40\xe8\x03\x39\xa3\x1e\x0d\x6c\x8b\x70\xf2\xfb\x56\x60\x2e\x42\x3a\x27\xb8\x06\xe2\x52\xc6\xc0\x2e\xb5\xe9\x79\xef\xc2\xd0\xc7\x97\x23\x21\xb2\x31\xd3\x47\x17\xdf\x7b\x33\x64\xac\xaa\xea\x97\x3f\x60\xcd\xe4\x81\x06\x0c\x16\xd7\x55\xda\x5a\x4b\xf9\xe3\x6b\xed\x0b\xeb\xe8\xb1\xce\xd0\x43\x3c\xd6\x61\x5d\xe5\x95\x4a\x56\x62\x8c\x15\x33\xbb\x45\xbb\x56\xea\xf7\x53\xd3\x9c\xcf\x03\x90\x16\x7c\x22\x43\x86\xf5\x94\xd0\x5f\x50\x6d\x86\x4c\xcb\xb8\x2f\x9b\x56\xf9\x5a\x23\x04\x56\xfe\x8d\x9a\x73\x1a\xe0\x03\x3c\xc2\x2a\x3a\x3d\x0b\xa7\x09\xeb\xb8\x11\x0b\x2f\x3d\x98\x64\xa1\xe9\xcd\xbb\x4a\x18\x44\x54\xf9\xba\x33\xa3\xa6\x1e\xdf\xd3\x2f\xcd\x8c\xbe\xc4\x70\xe6\x6f\x64\xf6\x04\x6b\x05\xab\x62\x88\x1a\x10\x70\xcf\x82\xc2\xcc\x4f\xb1\x61\xbe\x33\xa1\xcc\x8f\x02\x8b\x5e\x4e\x86\x9b\x09\x05\x31\x10\x27\x51\xc0\x92\x64\x19\x09\x37\x1a\x0e\x36\x52\xc2\x34\xd3\x79\xc2\xbf\xb1\x34\x29\x8a\x44\x66\x42\x97\xce\x3a\x11\x33\xd1\xab\x30\xfb\xab\x14\x28\x3b\x49\x33\xf0\x1d\xda\x34\x3d\xdf\x5b\xbb\x7e\xc4\x62\x25\xc6\xc4\x04\xcb\x66\x89\x67\xac\x9a\x29\x75\xa8\x15\xfa\xc1\x94\x86\x92\x2c\xf2\x0c\x19\x9b\x2e\xed\x2a\x86\x01\xf1\xe6\xc1\x2d\x83\x04\x87\xfa\x62\xf1\x7c\xaa\xaf\x04\x21\x63\x59\xc1\xe0\x4b\x53\x76\x28\xf0\xae\x13\x7f\xbe\x4e\x25\xa2\x5e\x27\xf5\x85\x82\x38\xe7\x90\x42\x5d\xfb\x7f\xa9\x2e\xf9\x4d\x01\x64\x64\x3e\xc6\xd9\x9a\xa1\x5f\x3c\x1a\x34\x7e\x4a\x45\x94\x21\x52\x29\x8b\x4c\x51\x44\x21\x15\xde\x25\x71\xff\xb5\x06\xd9\xa1\x56\x1b\xf5\xfa\xc6\xc5\x44\x3f\x1d\xfe\x34\x4e\xbe\xf7\xfa\x7f\x7e\x1f\x4e\x67\x90\x39\xae\x38\x35\xf5\xb8\x05\xff\x8e\xd4\x3d\xa2\x1e\x1e\x1e\xb7\x3e\x9e\xe2\x5d\xab\xf5\xf9\xd3\xef\x1f\xc5\x1d\xfe\xd2\xbb\x3e\xde\x1d\xb4\x8e\xda\xc7\x87\x78\xd7\x3e\xfa\xdc\x3e\x80\x59\x41\xa9\x05\x66\x16\x94\x4e\xf5\x53\xf8\x71\x88\xde\xe9\xe7\x03\x81\x7f\xd0\xfa\x24\xee\x06\x7a\x6f\x70\xd0\x17\x70\xbd\xc1\xd1\x00\xf0\xaf\x6b\x53\x7d\x32\xec\x7d\xaf\x10\x70\xec\x7b\x14\x40\x11\x7c\xec\x87\xa4\xf7\x60\xda\x8e\x79\xe3\x50\x1c\xf8\xf9\xc8\xff\xe1\xed\x3e\xfe\xf0\xe6\xea\xd2\xbb\xf7\xfc\x95\x77\x9d\x89\x2f\x96\x20\x84\x44\x1a\xd3\x25\xb5\xec\x85\x4d\xe7\x08\xf2\xf7\x9f\xed\x56\x7f\xc0\x65\x3d\x38\x3c\x3a\xfe\xf8\xfb\xa7\xcf\x2d\xc1\xcc\xe3\x3c\x20\x90\x4f\x28\x39\xb5\x1d\x07\xb2\xf2\xc9\x9a\x9c\x6b\xba\x36\xd2\xb8\xcc\xb5\x81\xfe\x63\xd8\xd7\x8d\xe1\xf8\xf4\x5c\xce\xc9\x4f\x9c\x95\xe2\xfa\xb0\x09\x18\xe8\x7f\x4a\x87\x28\x8a\x10\x40\xa1\xe1\x1d\x0d\x3c\x1a\x32\x18\xbc\xba\x8e\x07\x5d\xea\xfa\xc1\x5a\x1e\x59\xd8\x37\x01\x35\xac\x3b\xd3\xf3\x80\x88\x65\x06\xf3\x1c\xc2\x32\xf0\x2d\x08\x15\x3f\xc8\x8d\xce\x6d\x76\x9f\x1b\x60\xb0\xb3\x98\x20\x43\xe4\xde\xd0\x20\x96\xe2\xb9\xa6\xcf\xbe\xe9\x93\xb1\x3e\xab\x92\xd9\xb4\x64\x61\xab\x97\xc0\x96\x94\xce\x71\x20\x12\xaa\x26\x62\x20\x95\x3c\x70\x57\x26\x08\x1f\xef\x48\x29\xdb\x8b\xc9\x79\x5f\x9f\x4e\xcf\x27\xaf\xd6\x55\xc2\x88\xfb\x80\x18\xb2\x7c\x48\x11\xe9\xd0\x73\x6d\xa4\x8f\xce\x27\x7f\xbf\x9e\x22\x84\x63\x9e\x60\x9e\xc7\x73\xed\x74\x78\x32\xd1\x8d\xfe\xb7\xde\x78\xac\x7f\x37\xfa\xbd\xc9\xa0\x4c\xfc\x03\x29\x2e\x72\x4f\xe8\x80\x40\x4e\x25\x2b\xd0\x08\x4c\x91\xc8\x8b\x18\x0c\xd5\xed\xc1\xa4\xd7\x27\x73\x9f\x32\x4f\x0d\x09\x58\xee\xc1\x9e\x53\x12\xde\xd9\x50\x5c\x79\x0b\x9f\xac\x69\xd8\xd0\xb6\xea\xee\xcd\xb6\x00\x51\x52\xf5\x0f\x86\xd3\x3f\xdf\xa3\xa7\x0a\x57\x12\x13\x8e\x1f\xe6\x41\xab\x57\x81\x6a\xdb\x4d\x25\xcf\xb5\x5a\x6d\x4e\x17\xc4\xf3\x03\xd7\x74\x40\x22\x03\xdc\xd3\x88\x37\x91\xba\x74\xdf\xe8\x70\xc6\xd2\x08\xac\x4f\x7a\xd2\xa2\xe5\x92\x06\xf5\x86\x16\xc0\x76\x02\x5b\x41\x5d\xe5\xa9\xa2\xa3\x36\x38\x5e\x40\xc3\x28\xf0\x64\x04\x60\xbc\xb9\x38\x86\x28\xc3\x04\x64\xac\x44\x0d\xcc\xea\xd5\xb5\x71\x03\x88\x58\x8e\x09\xb2\x0c\xe7\x81\x69\xe9\x41\xe0\x07\x75\x3d\x29\xac\x63\x91\x97\x26\x67\x16\xc3\xa1\x56\xea\xfe\xcd\x3f\xb0\xfb\xc0\x3c\x07\xc0\xf5\x1b\x86\xed\xd9\xa1\x61\xd4\x61\xff\x5a\xec\x91\x3b\x9f\x85\x7b\x04\x14\x19\xec\x71\xfc\x95\x1f\xcc\x63\x72\xf8\x43\x20\x0d\x61\x40\x07\x78\xc9\x4f\x20\x1a\x4c\xe0\x25\x3f\x91\x50\x82\xc9\xe4\x36\x93\x20\x88\x3c\x03\x8a\x59\xd8\x8f\xe6\xb1\x10\x5c\x62\xee\x36\x7b\x24\xd9\x56\xbb\x6a\xe0\xfb\x61\x73\x0e\xbb\xae\x2a\x09\x94\x2f\x77\x92\xa3\x02\x83\x72\xe1\xe9\x59\x6c\x72\x8a\xb6\x40\x13\x87\xf5\x54\xf6\x46\x8a\x7d\x8b\xe5\x31\x6c\x73\x73\x03\xcb\x13\x14\x1d\x2e\x1a\xfe\x69\xd7\x33\xa8\xb8\x52\x86\xe9\x4d\xb5\x72\xc2\x22\x45\x11\x96\x17\xf5\x52\x57\x1c\x63\x34\xa8\x8a\x02\x7b\x59\x57\x9b\x6a\x83\xfc\x46\xe0\x02\x7f\xa5\x95\xe6\x70\xf3\xcb\xea\xe6\x1f\xf3\xa0\x28\x6d\x37\xbf\x90\x3c\x40\xaa\xc1\xe4\xa6\xc8\x2a\x2b\x0c\xba\x07\xc7\xc7\xd9\x6c\xa6\x81\xd8\x89\xf5\x99\x06\x67\x13\xa1\x48\x03\xea\x84\xb9\x81\x85\x58\x7e\xd5\x28\xae\x5a\xb4\x81\x5a\xb6\x41\x41\x08\xa1\xe2\x6e\x7c\x95\x64\x68\x48\xae\x9a\xb1\x14\x7e\x82\xba\x48\x50\x25\x9f\x50\x14\x65\x16\xac\x49\x08\x55\x32\x20\xe4\x4e\x3b\x38\xb8\x04\xf6\xdc\x59\x22\x2c\x16\x09\xca\x4a\x6e\x4c\x66\x5b\x29\x01\x33\x82\x7d\xd4\x0b\x6d\x8b\x97\x55\x1a\xa4\x9f\x10\x3c\x31\xbc\x33\x43\xb2\xa2\x90\x59\x30\xaf\x30\x50\x24\x9c\x80\xbd\x35\x30\x61\x98\x88\x78\x72\xc1\x45\x62\xc6\x4e\x49\x41\x7a\x21\x0f\x90\x5f\xe6\x60\x1c\x32\x9d\x7e\x27\x16\x0d\x42\xa8\x0f\x80\x34\xd5\x48\x0f\xd0\x17\xbe\xe3\xf8\x2b\x94\x24\xc9\x0a\x64\x05\x05\x01\x3c\xed\xa3\xf8\x29\x25\x2e\x22\x17\x8d\xdc\xf1\x82\x91\x98\xb7\xa6\xed\x69\xf2\xb2\x33\x83\x81\xb3\x66\x49\x06\x16\x5c\x32\x52\x5e\xff\x20\x9e\x59\x56\x7e\xa2\x8b\x6e\x3d\x0d\xef\xbd\x7c\x40\x17\xcc\x08\x39\xd9\x5e\xac\xbb\xa7\xa6\xc3\x0a\x64\x84\xc8\xac\xfb\x94\x1b\xc5\x9f\xda\xf7\xbd\x10\xb4\xbd\x3f\x5b\x2f\xa9\xda\x21\xaa\xb9\x5c\x3a\xb1\xea\xf9\xc9\xf1\x37\x28\xf8\xff\x1b\x8a\x95\x80\xd1\xb0\x7b\x39\x3b\xdd\xff\xa4\xe6\x69\x3f\x57\xb9\xac\x8d\xa9\x3d\x24\x81\xe6\xdf\x77\x72\xd0\x30\x11\x68\x70\x40\x09\x23\x06\x69\x07\x76\x86\x6e\x97\x1c\xb5\xda\x9d\x92\x60\x81\x69\x33\x2a\xe7\x57\xa5\x87\xca\xa7\x78\xaf\x91\xa1\xc7\xcd\xca\x93\x1d\xc6\x2f\x01\x43\x27\x5a\xd1\x94\x46\x6d\x2b\xa5\x12\x2f\x65\x0a\x0b\xe5\x73\x1d\x02\xc7\x12\x1f\x92\x7e\x87\x3c\x3d\xff\x8f\x17\xa7\x7d\x7c\x50\x2a\xb3\x4c\xca\x43\x0b\xe9\x63\x98\x86\xc3\x5e\x09\xa8\x60\xaa\x4c\x42\xbe\x20\x66\x2c\x4d\x58\x1c\x9c\xf9\x9f\xd8\x33\x56\xfb\x4d\xb8\x9e\x9a\x91\x13\x66\xb1\xdb\x8d\x5b\x2a\x25\x54\xc7\xe6\x1b\xc2\xd5\x75\x71\xc2\xe3\xfa\x4d\xf2\x86\x10\xb1\xa1\x2d\x6c\xc8\xf4\x12\xd7\x9c\xd1\x24\xcc\xbc\x49\x0a\xbc\x10\xc0\x40\x7a\x10\x40\x01\xc9\x9e\x6c\x4f\x26\xa1\xd9\x21\xc4\x1b\x8c\xd7\x1b\xd7\x3b\x9a\x44\xcd\x99\x24\xb5\xc2\x1e\x3c\x30\x6e\xa0\x98\x0f\x0e\xaa\x5b\x4d\x93\x98\x84\xa8\x7b\xaa\xf6\x8f\x6f\x7b\x75\x69\x2d\x8d\x0a\x4b\x6d\x30\x54\x9c\x85\x85\x1a\xe3\xf2\xc5\xb8\xa5\xa1\x01\xa9\x81\x1a\x98\x7e\xea\x36\x2e\xc8\x10\xdb\x45\x10\xa7\xc4\x39\x7d\xb0\x2d\x31\x0f\x8a\xab\x3a\x56\x70\x30\xde\xe4\xeb\x92\x1c\x05\x4d\xde\x9b\xd5\x41\x7f\x38\x32\xa6\x6b\x16\x52\xf7\x87\x4d\x57\x71\x81\xc3\x7b\x2a\x86\xd7\x06\xdc\x7c\xe3\xea\x3f\x44\x29\x60\x88\xfc\xf4\x2f\x6f\x69\xc5\x4e\xf6\x9c\x1e\x35\x13\xb5\xc2\xd8\x10\xe0\x19\x5c\x8b\xe8\x25\x2d\xc7\x0e\xb9\x57\x18\xc0\xf6\x5d\x79\x0c\x36\xec\x6c\x30\x91\x5a\x8c\x24\xa5\x1a\x1c\x00\xe6\x58\xde\xa1\x2e\xb8\x9b\x9a\x8e\x53\xff\x57\xcc\x26\x09\x45\x00\x65\xbe\x59\x4e\x13\x43\x0f\x40\x00\x2e\x84\xed\x81\xad\x20\x51\x83\x4f\xc2\x86\x52\xb0\x55\x92\x24\xb2\x1a\x59\xe8\xa5\x32\xd2\x63\xae\x57\xad\x6b\x11\x3d\x39\x0f\x01\x24\x09\x27\x5d\x19\x51\x47\xa6\x17\x2d\x4c\x0b\xbc\x86\x06\xaa\xe4\x68\x0d\xee\x41\x9a\xa8\x47\xb2\xc2\x55\x81\xa4\x66\x69\x50\x4c\x2b\x8a\x04\xfc\x46\xd6\xb8\xaa\xcd\x3c\x65\xb5\xe7\x8a\x7f\xbe\x6f\x6d\x60\xb8\x91\x59\xff\x0e\x12\xaf\xcd\xa6\x34\x40\x4f\x9f\x99\xb7\x09\xe3\x3c\xd3\xc4\x8c\x79\x86\x68\x54\x30\x50\xb1\x47\x90\x19\x58\x8a\x9f\x2b\x35\x87\xab\x5e\x83\xb8\xb9\x91\x62\xc0\x5d\xa9\x99\x79\x39\x74\xf6\x28\x9f\x0e\x24\x0c\x39\xae\xd3\xe3\x7c\x29\xae\xd3\x9a\x08\xc1\xe0\x6c\x51\x97\xca\x9f\x0f\x84\x6a\xb7\x1a\xe9\x47\xe0\x83\x5e\x38\xea\xf5\xe3\xd6\x57\x87\x9c\x9c\x74\xfa\xfd\xce\x60\xd0\xd1\xf5\xce\xe9\x69\xa7\xd5\x4a\x71\xc2\x60\xdd\x29\x54\x85\x56\x6a\x8a\x0a\xbb\x6f\x37\x47\x91\xb3\x5a\xdc\x7b\x44\x06\x4b\x1e\xc5\x0b\x01\xd2\x0b\xc1\x4c\x37\x51\x48\x45\xd2\xad\x10\x07\x8f\x81\xf2\x5e\x01\xa3\x55\x60\x1b\x8f\x74\x8d\x62\x21\x00\x63\x57\x9d\x8f\xd7\x68\xff\xaa\x46\x56\xb9\x26\xa8\x90\x23\x3b\xe0\x15\xac\x82\x96\xe6\x5c\x4b\xa6\xb9\x08\xfc\x79\x64\x85\xd8\x48\xec\x40\xcc\x85\x00\x37\x69\x10\x3d\xb6\x36\x69\xb7\xce\xc8\xd1\x05\xf9\x79\x7c\xd0\x6a\x0e\x0f\x8f\x5b\x24\x18\x0f\xfa\x64\x7f\x27\xf3\x21\xf3\x37\x1b\x50\x92\xef\xff\xc1\x74\xb1\x28\x15\xc6\x43\xbd\xf3\xe9\x02\x86\x9b\x2f\x26\xf0\x87\x9b\xbc\x9b\xc2\x6b\x0c\x4a\xc4\x50\x76\x7a\x89\xb0\x43\xbd\xba\xdb\xc0\xb2\xae\x8d\x45\x59\xc2\xa7\x0c\x8b\x3f\x0b\x8a\x4f\xdb\x8b\x68\xd9\xd2\xae\x06\x85\x28\x14\xe0\x40\xab\x72\x3d\x2a\x89\x37\x73\xd7\x2d\x6d\xd1\x1c\x26\xef\x0e\xbc\x75\x52\xe7\x13\x39\x87\xb8\xc4\x53\x43\x18\x79\xb0\x03\x3a\xeb\x3d\x62\xc3\xc9\x82\xc2\xee\x27\x4e\x1b\xe8\x11\x54\x65\xe0\xd1\x30\xba\x34\x71\x9b\x24\x0b\x9b\x3a\x73\xae\x0f\x6c\x69\x40\x3d\xee\x4b\xd4\xe0\x78\x72\x67\x3e\xf0\x63\x4e\x68\xde\x53\x24\xc7\xdf\xc6\x49\x16\x6d\x0a\x0d\x16\x0b\xe5\x0a\x3b\x88\xae\x53\xb7\xd8\xfe\xc9\x8c\xef\x00\xae\x72\x66\xdf\x9a\x37\x76\xa8\x6c\x30\x66\x4a\xa4\x4d\xce\x6e\x96\x4c\xc6\x66\xb4\x02\x94\xa5\xdd\x23\xf9\xa7\xb6\x5b\x23\x38\x1b\x00\x95\x16\x19\x21\x99\x72\xd5\x04\x20\x1c\x06\x40\xb6\xc0\x9c\x21\x95\x54\x98\x4a\x2a\x67\x09\xa3\x4d\x20\x47\x31\xc8\xd1\x66\x10\x90\xe1\x2c\x91\xa5\x02\xe6\xb9\xe4\xdb\xd8\x9b\x8a\x15\xa0\xdd\xd3\x35\xdb\xe0\xdb\x6c\x83\x96\x93\x5f\xa2\x6d\x41\xe9\x8a\x5d\x57\x42\xdd\x04\xd4\xbc\xcf\x17\xd7\x25\x63\xc8\xd4\x36\x39\x40\xec\xed\x7c\x34\xef\xed\x8b\x55\xd2\x9f\xab\xd8\x99\x4e\x4d\xd7\x76\xd6\x3f\xc4\x7c\x87\xb4\x8f\xb5\x96\x76\xf0\xfb\xe6\x64\xf6\x20\x95\x05\xbb\xa6\xb2\x1c\xaf\xf7\x27\x33\x21\x4a\x55\xfe\x87\x99\xda\x2e\x75\xf4\x78\xd8\xdf\xa5\x88\x8e\xc1\xdf\x54\x41\x27\xb8\xbf\xb8\x7c\x4e\xab\x95\x2c\x7b\xa3\x67\x0b\xbb\xf1\x1a\x38\x5f\x55\xcb\x4d\x3c\xdc\x55\xd3\x52\xa6\x94\x9a\x8a\xdb\x7c\x29\x69\x27\x39\x39\xbf\xef\xa6\xd3\x89\x1f\x17\xf3\x70\x2d\x6f\xd6\xa2\xe3\x66\x8e\x91\xec\xcc\xc5\xd4\x14\xbf\xd2\x80\xbf\x7b\x85\x71\xb9\xf1\xcd\x1f\x0a\x00\x49\x6b\x9d\x5f\x0b\x73\x15\x2d\x6e\xb8\xcb\x80\x9e\x4b\x82\xb1\x64\xaf\x4a\x06\x72\xbd\xe7\x14\x4a\xae\x2d\xb3\x97\x3c\x95\x87\xc6\x57\x7a\x71\xff\xe2\x72\x17\x2f\x8e\xc1\xdf\xe4\xc5\x09\xee\x2f\x3f\x04\xb2\xc8\x79\x8b\x0f\x57\x54\x5c\x2f\x9d\x8e\x2a\x8e\x27\x42\xf7\x85\x04\x08\xb4\xe8\x23\x5a\xc3\xab\xe8\x30\x6c\xcd\x8b\xdc\x9f\x36\x49\x31\xf4\xf0\x3d\xbd\x45\x87\x83\x62\x62\xe4\xea\xc8\x1f\x12\x45\xc5\xa5\x6a\x6a\xe3\x6a\xbf\x7d\xbd\xb1\x97\x24\x52\x68\xfd\x87\xe9\x44\x22\x7f\xee\x41\x81\x0b\xd2\xf3\xfb\xc6\x0b\x61\x1c\xeb\x3e\x71\xe6\x7c\xac\xc9\x27\xa9\xca\x98\x52\x79\x2c\xc1\x1c\xaa\xe9\x5d\x27\x97\xbe\xe3\x5b\xf7\x53\x4e\xad\x72\xc7\x48\x94\x52\x98\x54\xf9\xfb\xc3\x77\x09\x30\xe6\xa7\xc8\xf3\xc5\x45\x12\x9d\x7d\x4e\xf2\xb5\x52\x3c\xe7\xe2\x3e\x56\xa7\x1c\xf5\xe2\x5d\xf0\x7b\x22\x7e\xc4\x29\xec\x12\xf4\x19\xc6\x9b\xe2\x5e\x42\xff\xe5\xa1\xcf\xd5\x76\x95\x02\x6d\x73\x40\x95\x77\x6a\x36\x37\xfe\xde\x1e\x96\x9b\xba\x36\xd5\xd6\x2f\xcf\xbf\x83\x73\xb1\x69\xf3\x1a\x96\xc5\x20\xc0\xb7\xbb\xef\x8a\x81\x29\x12\xd8\x29\xee\xde\x1f\xf8\xbb\x05\xfb\xf3\xf6\x4d\x81\xc3\x5d\xcb\x61\xc7\xbf\x9d\xd8\xdc\xc4\xc9\x1a\x16\x08\x68\xa0\x06\xeb\xf8\xc7\xb0\x3d\xe3\x66\x1d\x52\x26\xbf\x81\x85\xf1\x78\x2b\xc8\x81\xf0\xaf\x03\x72\x23\x89\xe0\x78\x08\x6e\x35\x36\x11\x20\x4d\xd2\x6e\x1d\x1c\xe5\x2f\xa5\x03\x2d\x42\xee\x54\xde\x5e\xdc\xad\x99\x6d\x99\xce\x00\x16\xb4\x4b\xb2\x28\xe2\xbd\x29\x65\x94\x88\xfc\xe2\xc4\xc1\xcd\xfb\x86\xaa\x37\x8b\xf3\x6d\xe7\x9b\x77\xb6\x77\xf3\x15\x4a\xd2\x68\xde\x96\xbe\x64\xc1\xf2\x11\xf1\xb6\xe0\x8a\xd3\xca\x96\xd8\xaa\x7a\x81\x97\xf7\xee\x2d\xfa\x51\x91\xaf\xba\x21\x91\x0c\xbd\x13\xc4\x2f\xab\x27\xe3\x53\xd9\x7e\xde\x89\x0f\xa7\x20\xb6\xee\x6d\x8c\x1c\x3f\x7c\x1b\x7d\x40\xdc\x42\x17\xbd\x0f\xe8\x26\xdf\x6d\xd7\x73\xdf\xe2\x34\x72\x60\x2f\xb5\xa3\x33\x38\x9e\xc5\xaf\x73\xcd\xd4\x4d\xb9\xa9\x88\xb9\xbd\x43\x2e\xf2\x94\x3c\x22\xe7\x29\x55\x2d\x52\xc3\xb5\x5f\x27\xf9\x0a\x1e\x1a\xbc\x0d\x82\xaa\xc4\x9e\x45\xfe\x28\xce\xe3\x30\xa9\x1e\xf1\x21\xb7\xaf\xf3\x59\x39\x2b\x57\x7c\x06\xf7\x9e\xca\xe8\xa2\x3f\x1c\xf0\x3e\xfe\x4e\xf9\x4e\x46\x7a\x5b\xb2\xcb\x51\xf8\xc5\x99\x6e\x61\x09\x3d\xbd\xed\x78\x94\x24\x9f\x9d\x53\x9d\x32\xa0\xcc\x02\x27\xe1\x9f\x61\x6f\x8e\x04\xf0\x0c\x95\x1b\x95\xc4\x46\x55\x93\xb7\x3b\x19\x7b\xcd\xf1\x57\xf8\xb9\xd6\x0b\x47\x91\x78\xa1\x72\x5c\x6d\xf9\x78\xaf\x51\xc4\x7b\x4d\xa0\x25\xba\x4c\x1c\x36\x7e\xce\xf9\x6c\x02\x13\xbb\xad\x70\x41\xe9\x6d\xd1\x2b\x5e\xf8\x6e\x7d\x43\x5c\x84\xbf\x52\xd3\x66\x01\x17\x7b\xeb\x6b\xa8\x32\x72\xd6\x54\xc8\xb0\x37\x36\x1a\xca\xe8\xe2\x74\x92\xa1\x56\x9e\x56\xca\x68\x3c\xb0\x33\xac\xaa\x62\xab\x8c\x54\x11\xfc\x19\x89\x97\x33\x43\x2e\xb1\x94\xde\xde\x31\xcb\xf4\xea\x5b\x3e\xa5\x03\x47\x15\x1f\xd1\x41\xa4\x2b\xdb\x5e\x25\x8f\x7d\x32\xbc\x20\xc9\x77\x87\xf8\x45\x13\x50\x26\x77\x26\x23\x37\x94\x7a\xc9\xc7\x8d\xe9\x07\x27\x40\x57\x7c\x83\xf7\x0a\xba\xd9\x37\x65\xd9\x37\x2c\xdb\x08\x67\xdf\xf0\xed\x46\x3c\xc5\xdb\x4c\x5c\xd6\x2c\x98\x40\x7c\xaa\x58\xa9\xbe\x0a\xff\x7e\x29\x26\x38\xca\x32\xc0\xfd\x03\xff\x47\x94\x36\x8f\xdc\x25\xab\x4b\xf0\xf8\x89\x59\xcd\xc6\x2f\x21\x51\x07\x86\x81\x0b\x54\x0d\xc0\x87\x1d\xce\x50\xc5\x42\xe3\x4f\x1e\x7d\xa6\x51\xef\xc1\x0e\x80\x0c\xb8\x49\x5d\x1d\x5e\x18\xb3\x73\x63\xda\xef\x8d\x55\xfe\xd6\x9c\xc3\xc6\x5f\x41\x16\x61\x21\xb7\xf6\xce\xf4\x91\x3e\x9e\x19\x97\x53\x7d\x62\x8c\x7b\x23\x5d\xc2\x92\x3e\x91\x7c\x09\xf3\xa2\x37\x9d\xfe\x75\x3e\x19\x48\xd8\xb9\x96\xd1\x66\xef\xe3\x20\x71\x8f\x26\xb3\x18\xfe\x3f\x2e\xa9\xfb\x2f\x74\x45\x35\x33\xb8\xc5\x97\xf0\x52\x45\xb6\x06\xc1\x1e\xed\xb0\xde\x6e\xd4\xfe\x2f\x00\x00\xff\xff\xd2\x48\x03\xe0\x7b\x36\x00\x00")

func idracPyBytes() ([]byte, error) {
	return bindataRead(
		_idracPy,
		"idrac.py",
	)
}

func idracPy() (*asset, error) {
	bytes, err := idracPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idrac.py", size: 13947, mode: os.FileMode(493), modTime: time.Unix(1468334285, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _idracToml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x49\xcc\x4b\x2f\x4d\x4c\x4f\x55\xb0\x55\x50\x2a\xa8\x2c\xc9\xc8\xcf\x53\xe2\x82\x89\x85\xa5\x16\x15\x67\xe6\xe7\x01\xa5\x8c\xb9\xb8\xa2\xa3\x8b\x52\x0b\x4b\x33\x8b\x52\x73\x53\xf3\x4a\x62\x63\xb9\xf2\x12\x73\xc1\x9a\x40\xa2\xa9\xc5\x25\xc5\x4a\x5c\x65\x70\xe5\x4a\x46\x7a\x86\x06\x7a\x06\x4a\x80\x00\x00\x00\xff\xff\x20\xd2\xea\x2d\x5d\x00\x00\x00")

func idracTomlBytes() ([]byte, error) {
	return bindataRead(
		_idracToml,
		"idrac.toml",
	)
}

func idracToml() (*asset, error) {
	bytes, err := idracTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idrac.toml", size: 93, mode: os.FileMode(420), modTime: time.Unix(1467192632, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _iloPy = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x19\xfb\x6f\x9b\x48\xfa\x77\xff\x15\xb3\x54\x27\x40\xe7\x52\xc7\x49\x7b\x6d\x4e\x39\xc9\xeb\x90\x5b\xeb\x62\x27\x8a\xbd\xf7\x90\x65\x21\x0c\xe3\x98\x2d\x0c\x1c\x03\x49\xbd\xa7\xfe\xef\xf7\x7d\x33\x3c\x06\x03\x79\x54\x57\xf5\xa8\x1a\xc1\xcc\xf7\x7e\xcf\xf8\xcd\x4f\xef\x72\x9e\xbe\xdb\x06\xec\x1d\x65\x0f\x24\x39\x64\xfb\x98\x0d\x06\x41\x94\xc4\x69\x46\x7e\xe3\xf0\x51\xbc\xc7\xbc\x7c\xe3\x07\x3e\xd8\xa5\x71\x44\xbc\x38\x39\x90\x62\xd1\xa7\x34\xc1\xef\x0a\x77\x9f\x04\x61\x3c\x18\x0c\xe6\x93\xa9\x73\x7b\x67\x5f\xcd\xfe\xe9\xfc\x7c\x3d\x99\xfe\xed\x7a\xb6\x5c\x91\x0b\xb2\x1e\x10\x78\xf4\xf7\x23\xf8\x77\xa6\x0f\x89\x7e\x7a\xfa\x7e\xf4\xe1\x0a\xdf\x46\xa3\x4f\x1f\xff\xf4\x41\xbe\xe1\x53\xbd\x4d\xf1\x6d\x3c\x3a\x3b\x79\x7f\x8a\x6f\x27\x67\x9f\x4e\xc6\xb0\x2b\x29\x8d\xc6\xa3\x82\xd2\x95\x7d\x05\x8f\x80\x98\x5c\x7d\x1a\x4b\xfc\xf1\xe8\xa3\x7c\xbb\xb4\x27\x97\xe3\xa9\x84\x9b\x5c\x9e\x5d\x02\xfe\x66\x30\xb8\xb4\xff\x3e\x9b\xda\xce\x6c\x71\x75\xe3\xac\xec\xf9\xed\xf5\x64\x65\x83\x94\xff\x11\xb4\xdf\x90\x5d\xb0\x4d\xa9\xe3\xed\x5d\xc6\x68\xe8\x78\x6e\xea\x73\xe2\x32\x9f\xf8\x01\xff\x0c\x6f\x29\x25\x39\xcb\x39\xf5\x89\x21\xd4\x26\x7e\x4c\x39\xd3\x33\x92\xa4\xf1\x43\xe0\x53\xc2\x73\x6f\x4f\x02\xb6\x8b\x4d\x41\x50\x8b\x62\x1f\xe8\x30\x37\xa2\xda\x39\xd1\x34\xa9\x82\x46\xb3\x3d\x4d\x19\xcd\x38\x2c\xae\x37\xc5\x62\x44\xa3\x38\x3d\xa8\x2b\x1d\xc2\xa8\xdb\xc0\xd3\xa3\x9c\xc7\x69\x63\x55\x48\xaa\x2e\x70\x9a\x06\x2e\xc8\x90\x47\x5b\x9a\x16\x52\x7c\x1d\xd8\xab\x5f\xec\xbb\x85\xbd\xea\x32\x42\x2d\xf4\x90\xf0\x84\x82\xb6\x68\x82\x5d\x90\x46\x8f\x68\x81\x6f\xb0\x82\xeb\xa9\xea\x77\x1b\x45\x70\xc2\x85\x9c\x7d\x66\xf1\x23\x93\xac\xb5\xca\x16\x92\xbb\xf3\x40\x53\x1e\xc4\xac\x52\xe4\xf6\xee\x66\x6a\x2f\x97\x37\x77\x6d\x4d\x5a\x8c\x50\xb9\xd7\x49\x5e\x0a\xb5\x88\x19\x2d\x24\xf1\xe2\x94\xf2\x6a\xe9\xeb\x60\x6e\xcf\x6f\xee\xfe\xf5\x7d\xb8\x07\xbf\xd3\x26\xf3\xa6\x3c\x5f\x07\x03\x2f\x74\x39\x27\xb3\x30\xb6\xd3\x34\x4e\x0d\xfb\x8b\x47\x93\x0c\xec\x63\x9e\x0b\x84\x04\x76\x21\x37\x7d\xba\x23\x2c\x4e\x23\x37\x04\x8a\x0e\xb8\xc3\x80\xff\x05\x08\xbc\x81\xcc\xf0\xd7\xca\x93\x84\xa6\x86\x69\xa5\x34\x09\x5d\x8f\x1a\xfa\x5b\xcc\x9e\x73\x5d\x4a\x93\xd2\x2c\x4f\x19\x02\x16\x04\xef\x69\xe6\x80\x16\x4e\xc0\x78\xe6\x32\x80\xdf\xc7\x3c\x1b\x12\x50\x30\x1d\x0a\xc6\x8f\x71\xea\x17\x4c\x50\xdb\x0b\x59\x2a\x2c\x10\x56\x80\xa2\x65\x2e\x24\x4e\x18\xdf\x07\xec\xa2\x89\x79\x51\x91\x50\xd9\xcb\x5a\x83\xec\x1d\xe4\x5f\x65\x92\x91\xba\x8f\xa8\x18\x1f\x22\x48\x19\x25\x05\xf7\x37\x64\xb5\xa7\xc4\x77\x33\x97\xf0\x2c\xcd\x3d\xa0\x44\xc9\x2e\x4e\x09\xd4\x2c\xe2\xfa\x3e\x38\x94\x53\x5e\xb0\x00\xf7\x88\xa2\x27\x5d\x14\x70\xf0\x0e\xcd\xb2\x03\x61\x2e\xcf\x0e\xc3\x82\x1e\x05\x47\x78\x90\x56\xe1\x41\xd0\x09\xae\x6f\x4e\x89\xc1\x62\xe2\x85\xd4\x4d\xb1\x5a\x64\x01\xf3\xd0\x0f\x64\x4b\xb3\x47\x4a\x19\xa1\x90\x7e\xbe\x0f\xc4\x17\xb3\xa9\xa8\x29\x05\xa5\x60\x39\x5d\xce\x08\x56\x52\x6e\x5a\xd2\x56\x3b\x55\x05\x72\x71\x41\x4e\xa5\x1a\xf8\x80\xa9\x53\x30\xbb\xff\x05\xcc\x39\x12\xab\x34\xe4\xb4\x7b\xff\x44\xee\x97\x26\xc2\x62\xbc\x11\x4b\x28\x72\x04\x81\x46\x4a\xa3\xd5\xf8\xbb\x80\x86\x3e\x82\x46\x16\xd8\xd7\xd0\xe5\x37\xc4\xc1\x7a\x63\xd6\x40\xa8\xb2\xc4\x67\xf7\xd4\xa8\x78\x82\x23\x29\x33\x24\x8a\x39\x24\x63\xb3\xa6\x5b\x28\x66\x34\x16\x6a\x86\xeb\x60\xb3\xd6\x31\x20\xf4\x0d\x2a\xac\xdf\x82\x3d\xf4\xca\x4a\x3d\xf0\x0f\x6e\x98\x23\xc2\x4f\x80\x00\x1e\xd0\xd1\x9c\x5b\x1a\xc6\xec\x9e\x93\x2c\x26\xd1\x7d\x94\x95\xde\x6d\x90\x39\x12\xab\x4e\x82\x66\x8a\x94\x9c\xc8\x1f\xc9\x49\xcd\xcd\x6c\xe1\x82\x5a\x00\xbe\x3e\xff\xb0\x01\x02\x19\x9a\xa5\xab\x15\xb6\x79\x16\xce\x01\xbe\x65\x4f\x35\x5a\x55\xb9\xcd\xad\xc0\x5a\x8b\xa2\xba\x91\x99\xdb\x07\x24\xfd\x6e\xb9\x90\xd7\xcc\x37\x60\xa1\x91\x4a\x15\x80\x9a\x50\xa2\xc0\x18\xbc\x4a\x1c\xee\x46\x49\x48\x4b\x14\x61\x03\x25\x3d\xa0\xae\x8d\xdf\x9f\x9e\x92\xf9\x2f\xbf\x6b\x65\xec\x72\xcc\x19\x34\x04\xd6\x28\x25\x30\x41\xd4\x80\x65\x06\xb7\x78\x12\x06\x99\xa1\x11\xcd\x5c\x8f\x36\x0d\x89\x1a\x92\xd4\xed\x4d\xe4\x36\x7e\xa2\x58\x02\xbe\x2c\x3f\xa2\x16\x1b\x9e\xe2\xd0\x17\x48\x7c\x46\xe2\x1d\x39\x23\x02\xf7\xcf\xe4\x23\xc9\xf6\x29\x75\xa1\xb5\x0e\x14\x87\x7a\xdd\x4a\xe0\xe3\x15\x8a\x78\x95\x22\x40\x4e\xd1\x45\xd1\xc7\x93\xd2\xd6\x9a\x34\x53\x30\x29\x53\x50\xe8\x56\x73\xc1\x4f\x35\x2a\xda\x2d\xce\x6c\xc0\xae\x75\xe1\x35\x4c\x1d\xd5\x89\x89\xcc\xe0\xa5\xd8\x33\x8f\x51\x84\xfa\x02\xa5\x36\x64\x81\x61\x7f\xa1\x5e\x2e\x8a\xd7\x8a\x7a\x7b\x16\x43\x75\x3e\x1c\x13\x90\xfa\x94\xa1\x85\x2b\x0d\x4f\xd6\x20\xaa\x4b\xe5\x88\x23\x4b\xb5\x78\x3d\xf6\x27\x36\xbc\x2a\xf8\x5e\xea\xce\xd1\xa7\x0f\x64\xfe\x73\xc3\x7d\x3d\x31\xf8\x6c\x1c\x36\x63\x11\xbf\xa4\x9c\x7d\xa5\x53\x6c\xd6\xf4\xe1\x5b\xf5\xdb\xd1\x64\x60\xaa\x70\xe0\x33\xd0\xb5\xb2\xbf\x50\xbc\x28\xb9\x4b\xdc\x30\x8f\xa1\xbb\x3c\x1c\xf5\x78\x58\xca\x55\x3a\x07\xbe\x9a\x1d\x5c\xec\x82\x5f\x3a\xdb\x62\xb3\x09\xca\x73\xc2\xdb\xaa\x17\xfe\x3b\x0f\x32\x0a\xea\x7b\x31\x7b\xa0\x2c\xa0\x2c\x13\x16\x89\xf3\x14\xa8\x41\xff\x7e\xeb\xb9\x1c\xa6\x46\xac\x2c\x14\x36\x28\x79\xa4\x84\xe1\x04\x09\xf5\x18\x22\x6c\xef\x26\x80\x0d\x55\x99\x80\xe9\x33\x70\xeb\x36\xc8\x2c\x19\x1f\xd0\x65\x13\x9c\xef\x70\x20\x70\x50\x26\x11\x26\xd5\x57\x57\x5b\xaf\x36\xab\x99\x0b\x1f\x0d\x8e\x2d\x0e\x0e\x51\xca\x10\x2c\xd6\x3b\xe7\x65\xb1\xd3\x1a\xbd\xe5\xaa\xeb\x39\xd5\x70\xa0\x6c\x7e\xed\xe9\xd2\xe3\xf3\x46\x83\x04\x6d\xb2\x32\x50\x2a\x49\x5b\x0d\x11\xa1\x0a\x2f\xe6\xdb\xdf\xa8\x97\xe9\xa6\x68\x80\xcb\x03\xcf\x20\x9a\x66\xa0\x07\xf4\x24\x4c\x46\xbd\xdd\x41\x2a\xb2\x10\x1f\x85\xd2\xfa\xa6\xca\x49\xa0\xdc\x6e\x1f\xe0\x38\x18\x4d\x72\xfa\x52\x39\x6e\x4b\xa3\xbd\x5c\x94\xda\xce\xdf\x2a\x4c\x7b\x4a\xc0\xa7\x4f\xc4\xb9\x4c\xd1\x4b\xfa\x10\x78\xb4\x7b\x68\x38\x42\x17\x09\x26\xc6\x06\xd9\xb0\x61\x80\x09\x43\x48\xa1\xe7\xa6\x04\x45\x49\x19\x32\xff\x4b\x6b\x43\x76\x61\xb5\x12\x67\xad\x7a\xbf\x98\xbf\xcc\xfe\x82\x86\x4f\x35\xb5\xb5\x11\xdb\xb0\xe0\x4b\xb1\x89\xc1\x29\xa1\xba\x67\x93\x5e\x47\x54\x00\xbc\x1a\xfd\x05\x9d\x21\x0c\xbe\x5e\x66\xf6\x7a\xa0\x21\x6d\x3d\xbe\xa1\x0f\x6d\x65\x3a\x16\x53\xf9\x84\xf3\xe0\x9e\x45\x50\x60\xf4\x4e\x5a\x1d\xde\x29\x1f\xd5\x4b\x6a\x0a\x3f\xe7\xac\xf2\x81\x43\xb7\xfb\xf9\x69\x57\xd2\xf0\xc9\x21\xfd\x5b\xd2\x1f\x12\xcd\x87\x12\x4c\x16\x38\x04\x3f\xe3\xee\xef\x92\xf7\xdd\x5d\xff\xc5\x82\x7c\x8f\xac\xaf\x85\xbb\x76\x61\xb0\x6f\x4a\xd3\x19\x66\xad\x24\x7f\x05\x82\xec\xa2\x2a\xc6\x0f\xa8\x07\x2f\xcc\x77\x35\x87\xdb\xc8\xdd\xb9\x21\xdb\x3d\x88\xe0\x07\xc2\xcd\xd8\xa3\x4b\x36\x10\xc7\x07\x68\xd0\x61\xe0\x6e\x43\xe8\xdf\xdb\x3c\x83\x1e\xee\x66\x3a\xc7\x56\xde\x43\x2d\x66\x70\xfa\x7d\x74\x0f\xd8\xdb\xe5\x89\xf7\x3e\x0f\xf8\xbe\x3a\xf1\x96\xe2\x40\xaf\xe7\x99\x50\xdd\x0d\x18\x00\xf5\x90\x6b\x1e\x90\x1f\xb8\x25\x8f\xc6\x5c\x9e\x8d\xad\x1f\x52\xa2\x5e\x74\x22\xed\xc0\x53\x4b\x1b\x9e\x4c\xff\x2f\x4b\x98\x7a\x6d\x90\xba\x01\xa7\xf5\x35\x92\xf6\x6b\x71\x07\x57\xd6\x37\x38\xe2\x80\x1e\xe7\xe4\x0f\xbe\x66\xc9\x31\xc0\x50\xe7\x31\xb3\x1c\x89\xf0\xfc\xdf\x59\x9d\x4c\xf2\x17\x72\xd2\xcb\xaf\x21\xaa\xb6\x12\x91\xc9\xf7\x71\x0e\x01\xbe\xa5\x32\xd0\x30\x81\xbb\xa6\x22\xe1\x50\xa2\x35\x29\x40\x56\x64\xe5\x68\x5b\x0d\xb4\xdb\x43\x63\x9c\xb5\x6a\x9c\xc6\x78\x5c\x89\x7f\x74\xcd\x55\xe8\x2a\xf4\x8e\x5c\xe6\xde\xd3\xb4\xf0\xe0\xee\xb1\xee\x03\x44\xd9\xc6\xa4\x74\xea\x4d\xa3\xb2\x52\xbd\x26\xf3\x56\xc2\x63\xb3\xab\x4f\xbd\x72\xb8\xd1\xf0\x66\x49\xab\xed\xd6\xe8\x39\xe4\xb4\x6e\x46\xaf\x23\x39\xee\x25\x39\xee\x08\x8e\x26\x44\x55\x18\xeb\x1b\xb9\x72\xb7\xb0\x18\xae\xf8\x62\x1a\x13\xce\x57\x2d\xd6\x35\xc6\x37\x3a\x64\x87\x05\xeb\x13\x81\xd9\x1a\xfb\x5f\x77\x6c\x28\xce\x9a\x95\x64\x40\xa0\xeb\xf7\x80\x63\xb0\x66\x73\x2b\x8f\x60\xca\xfd\x44\x4f\x1b\x6c\xf1\x5b\xeb\xd5\x9d\x8b\xa0\x53\xc7\xfd\xd1\x65\x66\x7f\xfe\x77\x28\xd4\xc1\xa6\x71\xe7\x7f\xc4\xaa\x33\x3d\xe1\x04\x5c\x74\x41\x81\x49\x16\x12\x73\x48\x34\xcd\xb4\xe0\x70\x18\x24\x46\x2f\xb3\xfa\x9e\xfb\x55\x9c\x1a\x03\x8f\x60\xd4\xcb\xa0\xe8\xad\xa5\xe5\x8b\x6b\x84\x8e\xee\xdb\x48\x64\x85\x46\x11\x98\xdc\x73\xd9\x93\xb7\xd4\x3b\x21\xb3\xc8\x12\xad\xbf\x38\x2e\x62\x32\xbb\x2d\x6f\x16\xb1\xfb\x21\x5d\xb2\x77\x39\x14\x2b\xca\xca\xdb\x7c\xdf\xd2\xaa\x84\x47\x6e\x2f\xa0\x5a\x27\xad\xc0\x40\x93\x3e\x49\xb6\x14\xff\x75\xa4\x2b\xac\x7e\xd2\x75\x06\x16\xf7\x13\xcf\xdf\xf3\x0f\xda\x95\xe2\xa9\xca\xd9\x91\x8a\x2f\x2e\x1b\xc5\xa5\x1a\xde\xe2\xe0\x0f\x97\x96\x9f\x47\x09\x37\x14\x54\xe8\x47\x83\x01\xd8\xc7\x11\x51\xe9\x38\xa2\x0f\x3b\x40\x2c\x60\x8e\xa3\xd7\x97\x07\xc0\x34\xe6\x16\x65\x0f\x41\x5a\xd6\xcd\xd9\xad\xb3\xba\x71\x96\xd3\xc9\x42\x89\x49\xe9\xbe\x16\xec\x7c\xb2\x98\xfc\xd5\x9e\xdb\x8b\x95\xf3\xeb\xd2\xbe\x73\x16\x93\xb9\xad\x60\xd5\xde\x79\x16\xf3\x76\xb2\x5c\xfe\xe3\xe6\xee\x52\xc1\xce\xd4\x8b\xa5\xfe\xc0\x95\xe5\x5a\xfc\xea\x43\x8c\xd2\xe3\xc3\xfa\x97\x96\x69\x1c\x45\x39\x0b\x3c\xd1\x2c\xc5\x26\x0c\x3f\x9c\x50\xf5\xb6\x11\x0d\x49\x2d\x37\xbd\xe7\x8d\x8b\x30\xc8\x59\x8b\x7e\x09\x32\xe3\xc4\x1c\xfc\x37\x00\x00\xff\xff\x46\xdf\x7b\x7d\x3f\x1e\x00\x00")

func iloPyBytes() ([]byte, error) {
	return bindataRead(
		_iloPy,
		"ilo.py",
	)
}

func iloPy() (*asset, error) {
	bytes, err := iloPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ilo.py", size: 7743, mode: os.FileMode(493), modTime: time.Unix(1468327643, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _iloToml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x49\xcc\x4b\x2f\x4d\x4c\x4f\x55\xb0\x55\x50\x2a\xa8\x2c\xc9\xc8\xcf\x53\xe2\x82\x89\x85\xa5\x16\x15\x67\xe6\xe7\x01\xa5\x8c\xb9\xb8\xa2\xa3\x8b\x52\x0b\x4b\x33\x8b\x52\x73\x53\xf3\x4a\x62\x63\xb9\xf2\x12\x73\x91\x34\xe9\x66\x14\x64\xe6\xe4\x2b\x71\x95\xc1\xb5\x28\x19\xeb\x59\x28\x01\x02\x00\x00\xff\xff\x5e\xdd\x05\xf1\x5e\x00\x00\x00")

func iloTomlBytes() ([]byte, error) {
	return bindataRead(
		_iloToml,
		"ilo.toml",
	)
}

func iloToml() (*asset, error) {
	bytes, err := iloTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ilo.toml", size: 94, mode: os.FileMode(420), modTime: time.Unix(1467192632, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"idrac.py": idracPy,
	"idrac.toml": idracToml,
	"ilo.py": iloPy,
	"ilo.toml": iloToml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"idrac.py": &bintree{idracPy, map[string]*bintree{}},
	"idrac.toml": &bintree{idracToml, map[string]*bintree{}},
	"ilo.py": &bintree{iloPy, map[string]*bintree{}},
	"ilo.toml": &bintree{iloToml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

